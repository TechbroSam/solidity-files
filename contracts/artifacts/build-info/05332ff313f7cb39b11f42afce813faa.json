{
	"id": "05332ff313f7cb39b11f42afce813faa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/oatstake.sol": {
				"content": "\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.7.5;\r\n\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    \r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        uint256 c = a + b;\r\n        if (c < a) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b > a) return (false, 0);\r\n        return (true, a - b);\r\n    }\r\n\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\r\n        if (a == 0) return (true, 0);\r\n        uint256 c = a * b;\r\n        if (c / a != b) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a / b);\r\n    }\r\n\r\n\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a % b);\r\n    }\r\n\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        return a - b;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        return a / b;\r\n    }\r\n\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        return a - b;\r\n    }\r\n\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a / b;\r\n    }\r\n\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n\r\nlibrary Address {\r\n\r\n    function isContract(address account) internal view returns (bool) {\r\n \r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n\r\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n   \r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor ()  {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\n\r\n/// @title StakeChamps\r\n/// @notice The stake Champs contract for staking and unstaking Champs\r\ncontract StakeChamps is Ownable {\r\n    using SafeERC20 for IERC20;\r\n    using SafeMath for uint256;\r\n\r\n    // Champs Contract Address\r\n    // solhint-disable-next-line var-name-mixedcase\r\n    IERC20 public ChampsContract;\r\n\r\n    // List of Stakers, helpful when fetching stakers report\r\n    address[] public stakers;\r\n\r\n    // APY\r\n    uint256 public constant APY = 250;\r\n\r\n    struct Staker {\r\n        bool isPresent;\r\n        uint256 stakedAtTimestamp;\r\n        uint256 unstakedAtTimestamp;\r\n        uint256 rewardRedeemedAt;\r\n        uint256 reward;\r\n        uint256 claimedRewards;\r\n        uint256 unstakeAmount;\r\n        uint256 amount;\r\n    }\r\n\r\n    uint256 public totalChampsStaked;\r\n    mapping(address => Staker) public stakerInfo;\r\n\r\n    event Stake(address indexed staker, uint256 amount, uint256 stakedAtTimestamp);\r\n    event Unstake(address indexed staker, uint256 amount, uint256 unstakedAtTimestamp);\r\n    event Withdraw(address indexed staker, uint256 amount, uint256 withdrawnAt);\r\n    event ClaimRewards(address indexed staker, uint256 amount, uint256 redeemedAt);\r\n\r\n    constructor(IERC20 champsContractAddress) {\r\n        require(address(champsContractAddress) != address(0), \"Cannot be address zero\");\r\n        ChampsContract = champsContractAddress;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    fallback() external payable {}\r\n\r\n\r\n    function claimRewards() external {\r\n        Staker memory _staker = stakerInfo[msg.sender];\r\n        require(_staker.isPresent, \"No rewards: not a staker\");\r\n\r\n        uint256 rewardsEarned = 0;\r\n        if ((_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0)) {\r\n            rewardsEarned = _staker.reward.add(calculateRewards(_staker.unstakedAtTimestamp, _staker.amount));\r\n        } else if (_staker.rewardRedeemedAt > 0) {\r\n            rewardsEarned = _staker.reward.add(calculateRewards(_staker.rewardRedeemedAt, _staker.amount));\r\n        } else {\r\n            rewardsEarned = _staker.reward.add(calculateRewards(_staker.stakedAtTimestamp, _staker.amount));\r\n        }\r\n\r\n        _staker.rewardRedeemedAt = block.timestamp;\r\n\r\n        require(\r\n            ChampsContract.balanceOf(address(this)) >= rewardsEarned,\r\n            \"claimRewards: Insufficient contract balance\"\r\n        );\r\n\r\n        ChampsContract.safeTransfer(msg.sender, rewardsEarned);\r\n\r\n        _staker.reward = 0;\r\n        _staker.claimedRewards = _staker.claimedRewards.add(rewardsEarned);\r\n        stakerInfo[msg.sender] = _staker; // Write Staker info to contract storage\r\n\r\n        emit ClaimRewards(msg.sender, rewardsEarned, block.timestamp); //solhint-disable-line not-rely-on-time\r\n    }\r\n\r\n\r\n    function stake(uint256 amount) external {\r\n        require(amount > 0, \"Stake amount must be > 0\");\r\n\r\n        uint256 stakerChampsBalance = ChampsContract.balanceOf(msg.sender);\r\n        require(stakerChampsBalance >= amount, \"stake: Insufficient user balance\");\r\n\r\n        Staker memory _staker = stakerInfo[msg.sender];\r\n        if (!_staker.isPresent) {\r\n            _staker.isPresent = true;\r\n            stakers.push(msg.sender);\r\n            //solhint-disable-next-line not-rely-on-time\r\n            _staker.stakedAtTimestamp = block.timestamp;\r\n        }\r\n  \r\n        uint256 previousStake = _staker.amount;\r\n        if (previousStake > 0) {\r\n            // Reward for previousStake amount\r\n            _staker.reward = calculateRewards(_staker.stakedAtTimestamp, previousStake);\r\n            //solhint-disable-next-line not-rely-on-time\r\n            _staker.stakedAtTimestamp = block.timestamp;\r\n        }\r\n\r\n        ChampsContract.safeTransferFrom(msg.sender, address(this), amount);\r\n\r\n        totalChampsStaked = totalChampsStaked.add(amount);\r\n\r\n        // Updates Total Stake amount\r\n        _staker.amount = _staker.amount.add(amount);\r\n        stakerInfo[msg.sender] = _staker; // Write Staker info to contract storage\r\n\r\n        emit Stake(msg.sender, amount, _staker.stakedAtTimestamp);\r\n    }\r\n\r\n    function unstake(uint256 amount) external {\r\n        require(amount > 0, \"Unstake amount must be > 0\");\r\n\r\n        Staker memory _staker = stakerInfo[msg.sender];\r\n        require(_staker.amount > 0, \"No Stakes\");\r\n        require(amount <= _staker.amount, \"Unstake amt > staked amt\");\r\n\r\n        _staker.unstakedAtTimestamp = block.timestamp; //solhint-disable-line not-rely-on-time\r\n\r\n        _staker.reward = calculateRewards(_staker.unstakedAtTimestamp, (_staker.amount.sub(amount)));\r\n        _staker.unstakeAmount = _staker.unstakeAmount.add(amount);\r\n        _staker.amount = _staker.amount.sub(amount);\r\n\r\n        totalChampsStaked = totalChampsStaked.sub(amount);\r\n\r\n        stakerInfo[msg.sender] = _staker; // Write Staker info to contract storage\r\n\r\n        emit Unstake(msg.sender, amount, block.timestamp); //solhint-disable-line not-rely-on-time\r\n    }\r\n\r\n    function withdraw() external {\r\n        Staker memory _staker = stakerInfo[msg.sender];\r\n        uint256 unstakeAmount = _staker.unstakeAmount;\r\n        require(unstakeAmount > 0, \"Unstake amount is 0\");\r\n\r\n        uint256 hoursUnstakedFor = getHoursFromTimestamp(_staker.unstakedAtTimestamp);\r\n        // Since 24 Hours = 1 Day, therefore 5 Days = 120 Hours\r\n        require(hoursUnstakedFor >= 120, \"Cannot unstake in cooldown period\");\r\n\r\n        require(\r\n            ChampsContract.balanceOf(address(this)) >= unstakeAmount,\r\n            \"withdraw: Insufficient contract balance\"\r\n        );\r\n\r\n        ChampsContract.safeTransfer(msg.sender, unstakeAmount);\r\n\r\n        _staker.unstakeAmount = 0;\r\n        stakerInfo[msg.sender] = _staker; // Write Staker info to contract storage\r\n\r\n        emit Withdraw(msg.sender, unstakeAmount, block.timestamp); //solhint-disable-line not-rely-on-time\r\n    }\r\n\r\n\r\n    function myStakes(address _staker)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 stakedChamps,\r\n            uint256 hoursStakedFor,\r\n            uint256 unstakedAtTimestamp,\r\n            uint256 reward,\r\n            uint256 unstakeAmount,\r\n            uint256 claimedRewards\r\n        )\r\n    {\r\n        Staker memory _stakers = stakerInfo[_staker];\r\n        stakedChamps = _stakers.amount;\r\n        hoursStakedFor = getHoursFromTimestamp(_stakers.stakedAtTimestamp);\r\n        unstakedAtTimestamp = _stakers.unstakedAtTimestamp;\r\n        if ((_stakers.unstakeAmount > 0) && (_stakers.rewardRedeemedAt == 0)) {\r\n            reward = _stakers.reward.add(calculateRewards(_stakers.unstakedAtTimestamp, _stakers.amount));\r\n        } else if (_stakers.rewardRedeemedAt > 0) {\r\n            reward = _stakers.reward.add(calculateRewards(_stakers.rewardRedeemedAt, _stakers.amount));\r\n        } else {\r\n            reward = _stakers.reward.add(calculateRewards(_stakers.stakedAtTimestamp, _stakers.amount));\r\n        }\r\n        unstakeAmount = _stakers.unstakeAmount;\r\n        claimedRewards = _stakers.claimedRewards;\r\n    }\r\n\r\n\r\n    function totalStakers() external view returns (uint256) {\r\n        return stakers.length;\r\n    }\r\n\r\n \r\n    function earnedRewards(address staker) public view returns (uint256) {\r\n        Staker memory _staker = stakerInfo[staker];\r\n\r\n        if ((_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0)) {\r\n            return _staker.reward.add(calculateRewards(_staker.unstakedAtTimestamp, _staker.amount));\r\n        } else if (_staker.rewardRedeemedAt > 0) {\r\n            return _staker.reward.add(calculateRewards(_staker.rewardRedeemedAt, _staker.amount));\r\n        } else {\r\n            return _staker.reward.add(calculateRewards(_staker.stakedAtTimestamp, _staker.amount));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the calculated rewards\r\n     */\r\n    function calculateRewards(uint256 timestamp, uint256 amount) internal view returns (uint256 reward) {\r\n        uint256 hoursStakedFor = getHoursFromTimestamp(timestamp);\r\n\r\n        uint256 tokenPerYear = (amount.mul(APY)).div(100);\r\n        uint256 tokenPerDay = tokenPerYear.div(365);\r\n        uint256 tokenPerHour = tokenPerDay.div(24);\r\n\r\n        return tokenPerHour.mul(hoursStakedFor);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of hours for which Champs was staked\r\n     */\r\n    function getHoursFromTimestamp(uint256 timestamp) internal view returns (uint256) {\r\n        //solhint-disable-next-line not-rely-on-time\r\n        return (block.timestamp - timestamp) / 1 hours;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/oatstake.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/oatstake.sol\":3146:7013  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/oatstake.sol\":3146:7013  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122065f81b9bf54b4e73a3cdd9b4faff93445e5c8e01152aadb0bba7c248d2ba5e1464736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065f81b9bf54b4e73a3cdd9b4faff93445e5c8e01152aadb0bba7c248d2ba5e1464736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xF81B9BF54B4E PUSH20 0xA3CDD9B4FAFF93445E5C8E01152AADB0BBA7C248 0xD2 0xBA 0x5E EQ PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "3146:3867:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065f81b9bf54b4e73a3cdd9b4faff93445e5c8e01152aadb0bba7c248d2ba5e1464736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xF81B9BF54B4E PUSH20 0xA3CDD9B4FAFF93445E5C8E01152AADB0BBA7C248 0xD2 0xBA 0x5E EQ PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "3146:3867:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3146,
									"end": 7013,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 7013,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065f81b9bf54b4e73a3cdd9b4faff93445e5c8e01152aadb0bba7c248d2ba5e1464736f6c63430007050033",
									".code": [
										{
											"begin": 3146,
											"end": 7013,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 7013,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 7013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 7013,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3146,
											"end": 7013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 7013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 7013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 7013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 7013,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oatstake.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oatstake.sol\":{\"keccak256\":\"0x74ec0ec4db89d2645237dce1dc4d6e1c307471b160447b45135722f7d49aaec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5921abb7fa968c0af22fe88593e89968d1f85038901230cec5185343af2d2a9\",\"dweb:/ipfs/QmYBcJjw2rdckJfgVkMbj9E1GVZU1Tcm3Utkhp3MuPvJWD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oatstake.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oatstake.sol\":{\"keccak256\":\"0x74ec0ec4db89d2645237dce1dc4d6e1c307471b160447b45135722f7d49aaec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5921abb7fa968c0af22fe88593e89968d1f85038901230cec5185343af2d2a9\",\"dweb:/ipfs/QmYBcJjw2rdckJfgVkMbj9E1GVZU1Tcm3Utkhp3MuPvJWD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oatstake.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oatstake.sol\":{\"keccak256\":\"0x74ec0ec4db89d2645237dce1dc4d6e1c307471b160447b45135722f7d49aaec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5921abb7fa968c0af22fe88593e89968d1f85038901230cec5185343af2d2a9\",\"dweb:/ipfs/QmYBcJjw2rdckJfgVkMbj9E1GVZU1Tcm3Utkhp3MuPvJWD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oatstake.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oatstake.sol\":{\"keccak256\":\"0x74ec0ec4db89d2645237dce1dc4d6e1c307471b160447b45135722f7d49aaec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5921abb7fa968c0af22fe88593e89968d1f85038901230cec5185343af2d2a9\",\"dweb:/ipfs/QmYBcJjw2rdckJfgVkMbj9E1GVZU1Tcm3Utkhp3MuPvJWD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 920,
								"contract": "contracts/oatstake.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/oatstake.sol\":7019:8930  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/oatstake.sol\":7019:8930  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ba1c3628dda5a2cd548b9f8c2c982a7a9cb5ebe32c9b95bf786e5e2d5bc2edee64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba1c3628dda5a2cd548b9f8c2c982a7a9cb5ebe32c9b95bf786e5e2d5bc2edee64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA SHR CALLDATASIZE 0x28 0xDD 0xA5 LOG2 0xCD SLOAD DUP12 SWAP16 DUP13 0x2C SWAP9 0x2A PUSH27 0x9CB5EBE32C9B95BF786E5E2D5BC2EDEE64736F6C63430007050033 ",
							"sourceMap": "7019:1911:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba1c3628dda5a2cd548b9f8c2c982a7a9cb5ebe32c9b95bf786e5e2d5bc2edee64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA SHR CALLDATASIZE 0x28 0xDD 0xA5 LOG2 0xCD SLOAD DUP12 SWAP16 DUP13 0x2C SWAP9 0x2A PUSH27 0x9CB5EBE32C9B95BF786E5E2D5BC2EDEE64736F6C63430007050033 ",
							"sourceMap": "7019:1911:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7019,
									"end": 8930,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7019,
									"end": 8930,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba1c3628dda5a2cd548b9f8c2c982a7a9cb5ebe32c9b95bf786e5e2d5bc2edee64736f6c63430007050033",
									".code": [
										{
											"begin": 7019,
											"end": 8930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 8930,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 8930,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7019,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7019,
											"end": 8930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7019,
											"end": 8930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 8930,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oatstake.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oatstake.sol\":{\"keccak256\":\"0x74ec0ec4db89d2645237dce1dc4d6e1c307471b160447b45135722f7d49aaec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5921abb7fa968c0af22fe88593e89968d1f85038901230cec5185343af2d2a9\",\"dweb:/ipfs/QmYBcJjw2rdckJfgVkMbj9E1GVZU1Tcm3Utkhp3MuPvJWD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/oatstake.sol\":774:3140  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/oatstake.sol\":774:3140  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e6095ae36843bed6f1d1986c8db05721d62658f811f6dd745249f814fccccbcf64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e6095ae36843bed6f1d1986c8db05721d62658f811f6dd745249f814fccccbcf64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 MULMOD GAS 0xE3 PUSH9 0x43BED6F1D1986C8DB0 JUMPI 0x21 0xD6 0x26 PC 0xF8 GT 0xF6 0xDD PUSH21 0x5249F814FCCCCBCF64736F6C634300070500330000 ",
							"sourceMap": "774:2366:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e6095ae36843bed6f1d1986c8db05721d62658f811f6dd745249f814fccccbcf64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 MULMOD GAS 0xE3 PUSH9 0x43BED6F1D1986C8DB0 JUMPI 0x21 0xD6 0x26 PC 0xF8 GT 0xF6 0xDD PUSH21 0x5249F814FCCCCBCF64736F6C634300070500330000 ",
							"sourceMap": "774:2366:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 774,
									"end": 3140,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 3140,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6095ae36843bed6f1d1986c8db05721d62658f811f6dd745249f814fccccbcf64736f6c63430007050033",
									".code": [
										{
											"begin": 774,
											"end": 3140,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 774,
											"end": 3140,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 774,
											"end": 3140,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 774,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 774,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 3140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 774,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 3140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 3140,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oatstake.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oatstake.sol\":{\"keccak256\":\"0x74ec0ec4db89d2645237dce1dc4d6e1c307471b160447b45135722f7d49aaec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5921abb7fa968c0af22fe88593e89968d1f85038901230cec5185343af2d2a9\",\"dweb:/ipfs/QmYBcJjw2rdckJfgVkMbj9E1GVZU1Tcm3Utkhp3MuPvJWD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakeChamps": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "champsContractAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "redeemedAt",
									"type": "uint256"
								}
							],
							"name": "ClaimRewards",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakedAtTimestamp",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakedAtTimestamp",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawnAt",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "APY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ChampsContract",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staker",
									"type": "address"
								}
							],
							"name": "earnedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "myStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakedChamps",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "hoursStakedFor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unstakedAtTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unstakeAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimedRewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakerInfo",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isPresent",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "stakedAtTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unstakedAtTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRedeemedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimedRewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unstakeAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalChampsStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "StakeChamps",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/oatstake.sol\":10791:19175  contract StakeChamps is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/oatstake.sol\":11883:12072  constructor(IERC20 champsContractAddress) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/oatstake.sol\":9618:9635  address msgSender */\n  0x00\n    /* \"contracts/oatstake.sol\":9638:9650  _msgSender() */\n  tag_6\n    /* \"contracts/oatstake.sol\":9638:9648  _msgSender */\n  shl(0x20, tag_7)\n    /* \"contracts/oatstake.sol\":9638:9650  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/oatstake.sol\":9618:9650  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/oatstake.sol\":9670:9679  msgSender */\n  dup1\n    /* \"contracts/oatstake.sol\":9661:9667  _owner */\n  0x00\n  dup1\n    /* \"contracts/oatstake.sol\":9661:9679  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/oatstake.sol\":9728:9737  msgSender */\n  dup1\n    /* \"contracts/oatstake.sol\":9695:9738  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/oatstake.sol\":9724:9725  0 */\n  0x00\n    /* \"contracts/oatstake.sol\":9695:9738  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/oatstake.sol\":9591:9746  constructor ()  {\r... */\n  pop\n    /* \"contracts/oatstake.sol\":11986:11987  0 */\n  0x00\n    /* \"contracts/oatstake.sol\":11944:11988  address(champsContractAddress) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/oatstake.sol\":11952:11973  champsContractAddress */\n  dup2\n    /* \"contracts/oatstake.sol\":11944:11988  address(champsContractAddress) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/oatstake.sol\":11936:12015  require(address(champsContractAddress) != address(0), \"Cannot be address zero\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x16\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x43616e6e6f742062652061646472657373207a65726f00000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"contracts/oatstake.sol\":12043:12064  champsContractAddress */\n  dup1\n    /* \"contracts/oatstake.sol\":12026:12040  ChampsContract */\n  0x01\n  0x00\n    /* \"contracts/oatstake.sol\":12026:12064  ChampsContract = champsContractAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/oatstake.sol\":11883:12072  constructor(IERC20 champsContractAddress) {\r... */\n  pop\n    /* \"contracts/oatstake.sol\":10791:19175  contract StakeChamps is Ownable {\r... */\n  jump(tag_10)\n    /* \"contracts/oatstake.sol\":8969:9075  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_7:\n    /* \"contracts/oatstake.sol\":9022:9037  address payable */\n  0x00\n    /* \"contracts/oatstake.sol\":9057:9067  msg.sender */\n  caller\n    /* \"contracts/oatstake.sol\":9050:9067  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/oatstake.sol\":8969:9075  function _msgSender() internal view virtual returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/oatstake.sol\":10791:19175  contract StakeChamps is Ownable {\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/oatstake.sol\":10791:19175  contract StakeChamps is Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x86989038\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xeb7fb177\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xeb7fb177\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xef8bd305\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfd5e6dd1\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x86989038\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9be730da\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x4e745f1f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x4e745f1f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x66837c7e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x82d366d0\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x2e17de78\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"contracts/oatstake.sol\":14768:15635  function unstake(uint256 amount) external {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/oatstake.sol\":12157:13439  function claimRewards() external {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/oatstake.sol\":15643:16545  function withdraw() external {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/oatstake.sol\":11487:11531  mapping(address => Staker) public stakerInfo */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup10\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      dup9\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/oatstake.sol\":10983:11011  IERC20 public ChampsContract */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/oatstake.sol\":10137:10285  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/oatstake.sol\":17813:18409  function earnedRewards(address staker) public view returns (uint256) {\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/oatstake.sol\":17706:17802  function totalStakers() external view returns (uint256) {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/oatstake.sol\":9827:9914  function owner() public view virtual returns (address) {\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/oatstake.sol\":16555:17696  function myStakes(address _staker)\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/oatstake.sol\":13449:14760  function stake(uint256 amount) external {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/oatstake.sol\":11448:11480  uint256 public totalChampsStaked */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/oatstake.sol\":11127:11160  uint256 public constant APY = 250 */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/oatstake.sol\":10440:10684  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/oatstake.sol\":11082:11106  address[] public stakers */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/oatstake.sol\":14768:15635  function unstake(uint256 amount) external {\r... */\n    tag_28:\n        /* \"contracts/oatstake.sol\":14838:14839  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":14829:14835  amount */\n      dup2\n        /* \"contracts/oatstake.sol\":14829:14839  amount > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":14821:14870  require(amount > 0, \"Unstake amount must be > 0\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e7374616b6520616d6f756e74206d757374206265203e2030000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/oatstake.sol\":14883:14904  Staker memory _staker */\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"contracts/oatstake.sol\":14907:14917  stakerInfo */\n      0x04\n        /* \"contracts/oatstake.sol\":14907:14929  stakerInfo[msg.sender] */\n      0x00\n        /* \"contracts/oatstake.sol\":14918:14928  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":14907:14929  stakerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/oatstake.sol\":14883:14929  Staker memory _staker = stakerInfo[msg.sender] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":14965:14966  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":14948:14955  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":14948:14962  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":14948:14966  _staker.amount > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":14940:14980  require(_staker.amount > 0, \"No Stakes\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f205374616b65730000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/oatstake.sol\":15009:15016  _staker */\n      dup1\n        /* \"contracts/oatstake.sol\":15009:15023  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":14999:15005  amount */\n      dup3\n        /* \"contracts/oatstake.sol\":14999:15023  amount <= _staker.amount */\n      gt\n      iszero\n        /* \"contracts/oatstake.sol\":14991:15052  require(amount <= _staker.amount, \"Unstake amt > staked amt\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e7374616b6520616d74203e207374616b656420616d740000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"contracts/oatstake.sol\":15095:15110  block.timestamp */\n      timestamp\n        /* \"contracts/oatstake.sol\":15065:15072  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":15065:15092  _staker.unstakedAtTimestamp */\n      0x40\n      add\n        /* \"contracts/oatstake.sol\":15065:15110  _staker.unstakedAtTimestamp = block.timestamp */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":15180:15255  calculateRewards(_staker.unstakedAtTimestamp, (_staker.amount.sub(amount))) */\n      tag_83\n        /* \"contracts/oatstake.sol\":15197:15204  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":15197:15224  _staker.unstakedAtTimestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/oatstake.sol\":15227:15253  _staker.amount.sub(amount) */\n      tag_84\n        /* \"contracts/oatstake.sol\":15246:15252  amount */\n      dup5\n        /* \"contracts/oatstake.sol\":15227:15234  _staker */\n      dup5\n        /* \"contracts/oatstake.sol\":15227:15241  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":15227:15245  _staker.amount.sub */\n      tag_85\n      swap1\n        /* \"contracts/oatstake.sol\":15227:15253  _staker.amount.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"contracts/oatstake.sol\":15180:15196  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":15180:15255  calculateRewards(_staker.unstakedAtTimestamp, (_staker.amount.sub(amount))) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/oatstake.sol\":15163:15170  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":15163:15177  _staker.reward */\n      0x80\n      add\n        /* \"contracts/oatstake.sol\":15163:15255  _staker.reward = calculateRewards(_staker.unstakedAtTimestamp, (_staker.amount.sub(amount))) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":15290:15323  _staker.unstakeAmount.add(amount) */\n      tag_87\n        /* \"contracts/oatstake.sol\":15316:15322  amount */\n      dup3\n        /* \"contracts/oatstake.sol\":15290:15297  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":15290:15311  _staker.unstakeAmount */\n      0xc0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":15290:15315  _staker.unstakeAmount.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":15290:15323  _staker.unstakeAmount.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"contracts/oatstake.sol\":15266:15273  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":15266:15287  _staker.unstakeAmount */\n      0xc0\n      add\n        /* \"contracts/oatstake.sol\":15266:15323  _staker.unstakeAmount = _staker.unstakeAmount.add(amount) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":15351:15377  _staker.amount.sub(amount) */\n      tag_89\n        /* \"contracts/oatstake.sol\":15370:15376  amount */\n      dup3\n        /* \"contracts/oatstake.sol\":15351:15358  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":15351:15365  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":15351:15369  _staker.amount.sub */\n      tag_85\n      swap1\n        /* \"contracts/oatstake.sol\":15351:15377  _staker.amount.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_89:\n        /* \"contracts/oatstake.sol\":15334:15341  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":15334:15348  _staker.amount */\n      0xe0\n      add\n        /* \"contracts/oatstake.sol\":15334:15377  _staker.amount = _staker.amount.sub(amount) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":15410:15439  totalChampsStaked.sub(amount) */\n      tag_90\n        /* \"contracts/oatstake.sol\":15432:15438  amount */\n      dup3\n        /* \"contracts/oatstake.sol\":15410:15427  totalChampsStaked */\n      sload(0x03)\n        /* \"contracts/oatstake.sol\":15410:15431  totalChampsStaked.sub */\n      tag_85\n      swap1\n        /* \"contracts/oatstake.sol\":15410:15439  totalChampsStaked.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"contracts/oatstake.sol\":15390:15407  totalChampsStaked */\n      0x03\n        /* \"contracts/oatstake.sol\":15390:15439  totalChampsStaked = totalChampsStaked.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/oatstake.sol\":15477:15484  _staker */\n      dup1\n        /* \"contracts/oatstake.sol\":15452:15462  stakerInfo */\n      0x04\n        /* \"contracts/oatstake.sol\":15452:15474  stakerInfo[msg.sender] */\n      0x00\n        /* \"contracts/oatstake.sol\":15463:15473  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":15452:15474  stakerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/oatstake.sol\":15452:15484  stakerInfo[msg.sender] = _staker */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":15551:15561  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":15543:15587  Unstake(msg.sender, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb280\n        /* \"contracts/oatstake.sol\":15563:15569  amount */\n      dup4\n        /* \"contracts/oatstake.sol\":15571:15586  block.timestamp */\n      timestamp\n        /* \"contracts/oatstake.sol\":15543:15587  Unstake(msg.sender, amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/oatstake.sol\":14768:15635  function unstake(uint256 amount) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":12157:13439  function claimRewards() external {\r... */\n    tag_31:\n        /* \"contracts/oatstake.sol\":12201:12222  Staker memory _staker */\n      tag_92\n      tag_80\n      jump\t// in\n    tag_92:\n        /* \"contracts/oatstake.sol\":12225:12235  stakerInfo */\n      0x04\n        /* \"contracts/oatstake.sol\":12225:12247  stakerInfo[msg.sender] */\n      0x00\n        /* \"contracts/oatstake.sol\":12236:12246  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":12225:12247  stakerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/oatstake.sol\":12201:12247  Staker memory _staker = stakerInfo[msg.sender] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":12266:12273  _staker */\n      dup1\n        /* \"contracts/oatstake.sol\":12266:12283  _staker.isPresent */\n      0x00\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12258:12312  require(_staker.isPresent, \"No rewards: not a staker\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f20726577617264733a206e6f742061207374616b65720000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/oatstake.sol\":12325:12346  uint256 rewardsEarned */\n      0x00\n        /* \"contracts/oatstake.sol\":12390:12391  0 */\n      dup1\n        /* \"contracts/oatstake.sol\":12366:12373  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":12366:12387  _staker.unstakeAmount */\n      0xc0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12366:12391  _staker.unstakeAmount > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":12365:12427  (_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0) */\n      dup1\n      iszero\n      tag_94\n      jumpi\n      pop\n        /* \"contracts/oatstake.sol\":12425:12426  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":12397:12404  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":12397:12421  _staker.rewardRedeemedAt */\n      0x60\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12397:12426  _staker.rewardRedeemedAt == 0 */\n      eq\n        /* \"contracts/oatstake.sol\":12365:12427  (_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0) */\n    tag_94:\n        /* \"contracts/oatstake.sol\":12361:12842  if ((_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0)) {\r... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/oatstake.sol\":12460:12541  _staker.reward.add(calculateRewards(_staker.unstakedAtTimestamp, _staker.amount)) */\n      tag_96\n        /* \"contracts/oatstake.sol\":12479:12540  calculateRewards(_staker.unstakedAtTimestamp, _staker.amount) */\n      tag_97\n        /* \"contracts/oatstake.sol\":12496:12503  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":12496:12523  _staker.unstakedAtTimestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12525:12532  _staker */\n      dup5\n        /* \"contracts/oatstake.sol\":12525:12539  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12479:12495  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":12479:12540  calculateRewards(_staker.unstakedAtTimestamp, _staker.amount) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/oatstake.sol\":12460:12467  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":12460:12474  _staker.reward */\n      0x80\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12460:12478  _staker.reward.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":12460:12541  _staker.reward.add(calculateRewards(_staker.unstakedAtTimestamp, _staker.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/oatstake.sol\":12444:12541  rewardsEarned = _staker.reward.add(calculateRewards(_staker.unstakedAtTimestamp, _staker.amount)) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":12361:12842  if ((_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0)) {\r... */\n      jump(tag_98)\n    tag_95:\n        /* \"contracts/oatstake.sol\":12590:12591  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":12563:12570  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":12563:12587  _staker.rewardRedeemedAt */\n      0x60\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12563:12591  _staker.rewardRedeemedAt > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":12559:12842  if (_staker.rewardRedeemedAt > 0) {\r... */\n      iszero\n      tag_99\n      jumpi\n        /* \"contracts/oatstake.sol\":12624:12702  _staker.reward.add(calculateRewards(_staker.rewardRedeemedAt, _staker.amount)) */\n      tag_100\n        /* \"contracts/oatstake.sol\":12643:12701  calculateRewards(_staker.rewardRedeemedAt, _staker.amount) */\n      tag_101\n        /* \"contracts/oatstake.sol\":12660:12667  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":12660:12684  _staker.rewardRedeemedAt */\n      0x60\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12686:12693  _staker */\n      dup5\n        /* \"contracts/oatstake.sol\":12686:12700  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12643:12659  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":12643:12701  calculateRewards(_staker.rewardRedeemedAt, _staker.amount) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/oatstake.sol\":12624:12631  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":12624:12638  _staker.reward */\n      0x80\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12624:12642  _staker.reward.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":12624:12702  _staker.reward.add(calculateRewards(_staker.rewardRedeemedAt, _staker.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"contracts/oatstake.sol\":12608:12702  rewardsEarned = _staker.reward.add(calculateRewards(_staker.rewardRedeemedAt, _staker.amount)) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":12559:12842  if (_staker.rewardRedeemedAt > 0) {\r... */\n      jump(tag_102)\n    tag_99:\n        /* \"contracts/oatstake.sol\":12751:12830  _staker.reward.add(calculateRewards(_staker.stakedAtTimestamp, _staker.amount)) */\n      tag_103\n        /* \"contracts/oatstake.sol\":12770:12829  calculateRewards(_staker.stakedAtTimestamp, _staker.amount) */\n      tag_104\n        /* \"contracts/oatstake.sol\":12787:12794  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":12787:12812  _staker.stakedAtTimestamp */\n      0x20\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12814:12821  _staker */\n      dup5\n        /* \"contracts/oatstake.sol\":12814:12828  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12770:12786  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":12770:12829  calculateRewards(_staker.stakedAtTimestamp, _staker.amount) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/oatstake.sol\":12751:12758  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":12751:12765  _staker.reward */\n      0x80\n      add\n      mload\n        /* \"contracts/oatstake.sol\":12751:12769  _staker.reward.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":12751:12830  _staker.reward.add(calculateRewards(_staker.stakedAtTimestamp, _staker.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/oatstake.sol\":12735:12830  rewardsEarned = _staker.reward.add(calculateRewards(_staker.stakedAtTimestamp, _staker.amount)) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":12559:12842  if (_staker.rewardRedeemedAt > 0) {\r... */\n    tag_102:\n        /* \"contracts/oatstake.sol\":12361:12842  if ((_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0)) {\r... */\n    tag_98:\n        /* \"contracts/oatstake.sol\":12881:12896  block.timestamp */\n      timestamp\n        /* \"contracts/oatstake.sol\":12854:12861  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":12854:12878  _staker.rewardRedeemedAt */\n      0x60\n      add\n        /* \"contracts/oatstake.sol\":12854:12896  _staker.rewardRedeemedAt = block.timestamp */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":12974:12987  rewardsEarned */\n      dup1\n        /* \"contracts/oatstake.sol\":12931:12945  ChampsContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":12931:12955  ChampsContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/oatstake.sol\":12964:12968  this */\n      address\n        /* \"contracts/oatstake.sol\":12931:12970  ChampsContract.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":12931:12987  ChampsContract.balanceOf(address(this)) >= rewardsEarned */\n      lt\n      iszero\n        /* \"contracts/oatstake.sol\":12909:13058  require(\r... */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7dd237e5e91540a0b6e997b7f12d98ccf19c520e7525780536278ace211402ff\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/oatstake.sol\":13071:13125  ChampsContract.safeTransfer(msg.sender, rewardsEarned) */\n      tag_110\n        /* \"contracts/oatstake.sol\":13099:13109  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":13111:13124  rewardsEarned */\n      dup3\n        /* \"contracts/oatstake.sol\":13071:13085  ChampsContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":13071:13098  ChampsContract.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"contracts/oatstake.sol\":13071:13125  ChampsContract.safeTransfer(msg.sender, rewardsEarned) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/oatstake.sol\":13155:13156  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":13138:13145  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":13138:13152  _staker.reward */\n      0x80\n      add\n        /* \"contracts/oatstake.sol\":13138:13156  _staker.reward = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":13192:13233  _staker.claimedRewards.add(rewardsEarned) */\n      tag_112\n        /* \"contracts/oatstake.sol\":13219:13232  rewardsEarned */\n      dup2\n        /* \"contracts/oatstake.sol\":13192:13199  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":13192:13214  _staker.claimedRewards */\n      0xa0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":13192:13218  _staker.claimedRewards.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":13192:13233  _staker.claimedRewards.add(rewardsEarned) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/oatstake.sol\":13167:13174  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":13167:13189  _staker.claimedRewards */\n      0xa0\n      add\n        /* \"contracts/oatstake.sol\":13167:13233  _staker.claimedRewards = _staker.claimedRewards.add(rewardsEarned) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":13269:13276  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":13244:13254  stakerInfo */\n      0x04\n        /* \"contracts/oatstake.sol\":13244:13266  stakerInfo[msg.sender] */\n      0x00\n        /* \"contracts/oatstake.sol\":13255:13265  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":13244:13266  stakerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/oatstake.sol\":13244:13276  stakerInfo[msg.sender] = _staker */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":13348:13358  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":13335:13391  ClaimRewards(msg.sender, rewardsEarned, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x674a8930d4166ce2352c3dc1e9ff633595db479f71f3741270a0a73a52cb7b0f\n        /* \"contracts/oatstake.sol\":13360:13373  rewardsEarned */\n      dup3\n        /* \"contracts/oatstake.sol\":13375:13390  block.timestamp */\n      timestamp\n        /* \"contracts/oatstake.sol\":13335:13391  ClaimRewards(msg.sender, rewardsEarned, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/oatstake.sol\":12157:13439  function claimRewards() external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":15643:16545  function withdraw() external {\r... */\n    tag_34:\n        /* \"contracts/oatstake.sol\":15683:15704  Staker memory _staker */\n      tag_114\n      tag_80\n      jump\t// in\n    tag_114:\n        /* \"contracts/oatstake.sol\":15707:15717  stakerInfo */\n      0x04\n        /* \"contracts/oatstake.sol\":15707:15729  stakerInfo[msg.sender] */\n      0x00\n        /* \"contracts/oatstake.sol\":15718:15728  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":15707:15729  stakerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/oatstake.sol\":15683:15729  Staker memory _staker = stakerInfo[msg.sender] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":15740:15761  uint256 unstakeAmount */\n      0x00\n        /* \"contracts/oatstake.sol\":15764:15771  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":15764:15785  _staker.unstakeAmount */\n      0xc0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":15740:15785  uint256 unstakeAmount = _staker.unstakeAmount */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":15820:15821  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":15804:15817  unstakeAmount */\n      dup2\n        /* \"contracts/oatstake.sol\":15804:15821  unstakeAmount > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":15796:15845  require(unstakeAmount > 0, \"Unstake amount is 0\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e7374616b6520616d6f756e74206973203000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/oatstake.sol\":15858:15882  uint256 hoursUnstakedFor */\n      0x00\n        /* \"contracts/oatstake.sol\":15885:15935  getHoursFromTimestamp(_staker.unstakedAtTimestamp) */\n      tag_116\n        /* \"contracts/oatstake.sol\":15907:15914  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":15907:15934  _staker.unstakedAtTimestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/oatstake.sol\":15885:15906  getHoursFromTimestamp */\n      tag_117\n        /* \"contracts/oatstake.sol\":15885:15935  getHoursFromTimestamp(_staker.unstakedAtTimestamp) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/oatstake.sol\":15858:15935  uint256 hoursUnstakedFor = getHoursFromTimestamp(_staker.unstakedAtTimestamp) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":16039:16042  120 */\n      0x78\n        /* \"contracts/oatstake.sol\":16019:16035  hoursUnstakedFor */\n      dup2\n        /* \"contracts/oatstake.sol\":16019:16042  hoursUnstakedFor >= 120 */\n      lt\n      iszero\n        /* \"contracts/oatstake.sol\":16011:16080  require(hoursUnstakedFor >= 120, \"Cannot unstake in cooldown period\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/oatstake.sol\":16158:16171  unstakeAmount */\n      dup2\n        /* \"contracts/oatstake.sol\":16115:16129  ChampsContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":16115:16139  ChampsContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/oatstake.sol\":16148:16152  this */\n      address\n        /* \"contracts/oatstake.sol\":16115:16154  ChampsContract.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":16115:16171  ChampsContract.balanceOf(address(this)) >= unstakeAmount */\n      lt\n      iszero\n        /* \"contracts/oatstake.sol\":16093:16238  require(\r... */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_bfca188c10ccbcd10108d0d17745e5c7c1a1e3f9fccb2c999dacbd65eeafacae\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/oatstake.sol\":16251:16305  ChampsContract.safeTransfer(msg.sender, unstakeAmount) */\n      tag_124\n        /* \"contracts/oatstake.sol\":16279:16289  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":16291:16304  unstakeAmount */\n      dup4\n        /* \"contracts/oatstake.sol\":16251:16265  ChampsContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":16251:16278  ChampsContract.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"contracts/oatstake.sol\":16251:16305  ChampsContract.safeTransfer(msg.sender, unstakeAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"contracts/oatstake.sol\":16342:16343  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":16318:16325  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":16318:16339  _staker.unstakeAmount */\n      0xc0\n      add\n        /* \"contracts/oatstake.sol\":16318:16343  _staker.unstakeAmount = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":16379:16386  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":16354:16364  stakerInfo */\n      0x04\n        /* \"contracts/oatstake.sol\":16354:16376  stakerInfo[msg.sender] */\n      0x00\n        /* \"contracts/oatstake.sol\":16365:16375  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":16354:16376  stakerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/oatstake.sol\":16354:16386  stakerInfo[msg.sender] = _staker */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":16454:16464  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":16445:16497  Withdraw(msg.sender, unstakeAmount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/oatstake.sol\":16466:16479  unstakeAmount */\n      dup4\n        /* \"contracts/oatstake.sol\":16481:16496  block.timestamp */\n      timestamp\n        /* \"contracts/oatstake.sol\":16445:16497  Withdraw(msg.sender, unstakeAmount, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/oatstake.sol\":15643:16545  function withdraw() external {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":11487:11531  mapping(address => Staker) public stakerInfo */\n    tag_38:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      pop\n      dup9\n      jump\t// out\n        /* \"contracts/oatstake.sol\":10983:11011  IERC20 public ChampsContract */\n    tag_41:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/oatstake.sol\":10137:10285  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_44:\n        /* \"contracts/oatstake.sol\":10058:10070  _msgSender() */\n      tag_126\n        /* \"contracts/oatstake.sol\":10058:10068  _msgSender */\n      tag_127\n        /* \"contracts/oatstake.sol\":10058:10070  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/oatstake.sol\":10047:10070  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":10047:10054  owner() */\n      tag_128\n        /* \"contracts/oatstake.sol\":10047:10052  owner */\n      tag_54\n        /* \"contracts/oatstake.sol\":10047:10054  owner() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/oatstake.sol\":10047:10070  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/oatstake.sol\":10039:10107  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/oatstake.sol\":10244:10245  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":10207:10247  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":10228:10234  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":10207:10247  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/oatstake.sol\":10275:10276  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":10258:10264  _owner */\n      dup1\n      0x00\n        /* \"contracts/oatstake.sol\":10258:10277  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/oatstake.sol\":10137:10285  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/oatstake.sol\":17813:18409  function earnedRewards(address staker) public view returns (uint256) {\r... */\n    tag_48:\n        /* \"contracts/oatstake.sol\":17873:17880  uint256 */\n      0x00\n        /* \"contracts/oatstake.sol\":17893:17914  Staker memory _staker */\n      tag_132\n      tag_80\n      jump\t// in\n    tag_132:\n        /* \"contracts/oatstake.sol\":17917:17927  stakerInfo */\n      0x04\n        /* \"contracts/oatstake.sol\":17917:17935  stakerInfo[staker] */\n      0x00\n        /* \"contracts/oatstake.sol\":17928:17934  staker */\n      dup5\n        /* \"contracts/oatstake.sol\":17917:17935  stakerInfo[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/oatstake.sol\":17893:17935  Staker memory _staker = stakerInfo[staker] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":17977:17978  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":17953:17960  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":17953:17974  _staker.unstakeAmount */\n      0xc0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17953:17978  _staker.unstakeAmount > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":17952:18014  (_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0) */\n      dup1\n      iszero\n      tag_133\n      jumpi\n      pop\n        /* \"contracts/oatstake.sol\":18012:18013  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":17984:17991  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":17984:18008  _staker.rewardRedeemedAt */\n      0x60\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17984:18013  _staker.rewardRedeemedAt == 0 */\n      eq\n        /* \"contracts/oatstake.sol\":17952:18014  (_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0) */\n    tag_133:\n        /* \"contracts/oatstake.sol\":17948:18402  if ((_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0)) {\r... */\n      iszero\n      tag_134\n      jumpi\n        /* \"contracts/oatstake.sol\":18038:18119  _staker.reward.add(calculateRewards(_staker.unstakedAtTimestamp, _staker.amount)) */\n      tag_135\n        /* \"contracts/oatstake.sol\":18057:18118  calculateRewards(_staker.unstakedAtTimestamp, _staker.amount) */\n      tag_136\n        /* \"contracts/oatstake.sol\":18074:18081  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":18074:18101  _staker.unstakedAtTimestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/oatstake.sol\":18103:18110  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":18103:18117  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":18057:18073  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":18057:18118  calculateRewards(_staker.unstakedAtTimestamp, _staker.amount) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/oatstake.sol\":18038:18045  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":18038:18052  _staker.reward */\n      0x80\n      add\n      mload\n        /* \"contracts/oatstake.sol\":18038:18056  _staker.reward.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":18038:18119  _staker.reward.add(calculateRewards(_staker.unstakedAtTimestamp, _staker.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"contracts/oatstake.sol\":18031:18119  return _staker.reward.add(calculateRewards(_staker.unstakedAtTimestamp, _staker.amount)) */\n      swap2\n      pop\n      pop\n      jump(tag_131)\n        /* \"contracts/oatstake.sol\":17948:18402  if ((_staker.unstakeAmount > 0) && (_staker.rewardRedeemedAt == 0)) {\r... */\n    tag_134:\n        /* \"contracts/oatstake.sol\":18168:18169  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":18141:18148  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":18141:18165  _staker.rewardRedeemedAt */\n      0x60\n      add\n      mload\n        /* \"contracts/oatstake.sol\":18141:18169  _staker.rewardRedeemedAt > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":18137:18402  if (_staker.rewardRedeemedAt > 0) {\r... */\n      iszero\n      tag_138\n      jumpi\n        /* \"contracts/oatstake.sol\":18193:18271  _staker.reward.add(calculateRewards(_staker.rewardRedeemedAt, _staker.amount)) */\n      tag_139\n        /* \"contracts/oatstake.sol\":18212:18270  calculateRewards(_staker.rewardRedeemedAt, _staker.amount) */\n      tag_140\n        /* \"contracts/oatstake.sol\":18229:18236  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":18229:18253  _staker.rewardRedeemedAt */\n      0x60\n      add\n      mload\n        /* \"contracts/oatstake.sol\":18255:18262  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":18255:18269  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":18212:18228  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":18212:18270  calculateRewards(_staker.rewardRedeemedAt, _staker.amount) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/oatstake.sol\":18193:18200  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":18193:18207  _staker.reward */\n      0x80\n      add\n      mload\n        /* \"contracts/oatstake.sol\":18193:18211  _staker.reward.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":18193:18271  _staker.reward.add(calculateRewards(_staker.rewardRedeemedAt, _staker.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/oatstake.sol\":18186:18271  return _staker.reward.add(calculateRewards(_staker.rewardRedeemedAt, _staker.amount)) */\n      swap2\n      pop\n      pop\n      jump(tag_131)\n        /* \"contracts/oatstake.sol\":18137:18402  if (_staker.rewardRedeemedAt > 0) {\r... */\n    tag_138:\n        /* \"contracts/oatstake.sol\":18311:18390  _staker.reward.add(calculateRewards(_staker.stakedAtTimestamp, _staker.amount)) */\n      tag_142\n        /* \"contracts/oatstake.sol\":18330:18389  calculateRewards(_staker.stakedAtTimestamp, _staker.amount) */\n      tag_143\n        /* \"contracts/oatstake.sol\":18347:18354  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":18347:18372  _staker.stakedAtTimestamp */\n      0x20\n      add\n      mload\n        /* \"contracts/oatstake.sol\":18374:18381  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":18374:18388  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":18330:18346  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":18330:18389  calculateRewards(_staker.stakedAtTimestamp, _staker.amount) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/oatstake.sol\":18311:18318  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":18311:18325  _staker.reward */\n      0x80\n      add\n      mload\n        /* \"contracts/oatstake.sol\":18311:18329  _staker.reward.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":18311:18390  _staker.reward.add(calculateRewards(_staker.stakedAtTimestamp, _staker.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/oatstake.sol\":18304:18390  return _staker.reward.add(calculateRewards(_staker.stakedAtTimestamp, _staker.amount)) */\n      swap2\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":17813:18409  function earnedRewards(address staker) public view returns (uint256) {\r... */\n    tag_131:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":17706:17802  function totalStakers() external view returns (uint256) {\r... */\n    tag_51:\n        /* \"contracts/oatstake.sol\":17753:17760  uint256 */\n      0x00\n        /* \"contracts/oatstake.sol\":17780:17787  stakers */\n      0x02\n        /* \"contracts/oatstake.sol\":17780:17794  stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":17773:17794  return stakers.length */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":17706:17802  function totalStakers() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/oatstake.sol\":9827:9914  function owner() public view virtual returns (address) {\r... */\n    tag_54:\n        /* \"contracts/oatstake.sol\":9873:9880  address */\n      0x00\n        /* \"contracts/oatstake.sol\":9900:9906  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":9893:9906  return _owner */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":9827:9914  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/oatstake.sol\":16555:17696  function myStakes(address _staker)\r... */\n    tag_58:\n        /* \"contracts/oatstake.sol\":16654:16674  uint256 stakedChamps */\n      0x00\n        /* \"contracts/oatstake.sol\":16689:16711  uint256 hoursStakedFor */\n      dup1\n        /* \"contracts/oatstake.sol\":16726:16753  uint256 unstakedAtTimestamp */\n      0x00\n        /* \"contracts/oatstake.sol\":16768:16782  uint256 reward */\n      dup1\n        /* \"contracts/oatstake.sol\":16797:16818  uint256 unstakeAmount */\n      0x00\n        /* \"contracts/oatstake.sol\":16833:16855  uint256 claimedRewards */\n      dup1\n        /* \"contracts/oatstake.sol\":16883:16905  Staker memory _stakers */\n      tag_147\n      tag_80\n      jump\t// in\n    tag_147:\n        /* \"contracts/oatstake.sol\":16908:16918  stakerInfo */\n      0x04\n        /* \"contracts/oatstake.sol\":16908:16927  stakerInfo[_staker] */\n      0x00\n        /* \"contracts/oatstake.sol\":16919:16926  _staker */\n      dup10\n        /* \"contracts/oatstake.sol\":16908:16927  stakerInfo[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/oatstake.sol\":16883:16927  Staker memory _stakers = stakerInfo[_staker] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":16953:16961  _stakers */\n      dup1\n        /* \"contracts/oatstake.sol\":16953:16968  _stakers.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":16938:16968  stakedChamps = _stakers.amount */\n      swap7\n      pop\n        /* \"contracts/oatstake.sol\":16996:17045  getHoursFromTimestamp(_stakers.stakedAtTimestamp) */\n      tag_148\n        /* \"contracts/oatstake.sol\":17018:17026  _stakers */\n      dup2\n        /* \"contracts/oatstake.sol\":17018:17044  _stakers.stakedAtTimestamp */\n      0x20\n      add\n      mload\n        /* \"contracts/oatstake.sol\":16996:17017  getHoursFromTimestamp */\n      tag_117\n        /* \"contracts/oatstake.sol\":16996:17045  getHoursFromTimestamp(_stakers.stakedAtTimestamp) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/oatstake.sol\":16979:17045  hoursStakedFor = getHoursFromTimestamp(_stakers.stakedAtTimestamp) */\n      swap6\n      pop\n        /* \"contracts/oatstake.sol\":17078:17086  _stakers */\n      dup1\n        /* \"contracts/oatstake.sol\":17078:17106  _stakers.unstakedAtTimestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17056:17106  unstakedAtTimestamp = _stakers.unstakedAtTimestamp */\n      swap5\n      pop\n        /* \"contracts/oatstake.sol\":17147:17148  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":17122:17130  _stakers */\n      dup2\n        /* \"contracts/oatstake.sol\":17122:17144  _stakers.unstakeAmount */\n      0xc0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17122:17148  _stakers.unstakeAmount > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":17121:17185  (_stakers.unstakeAmount > 0) && (_stakers.rewardRedeemedAt == 0) */\n      dup1\n      iszero\n      tag_149\n      jumpi\n      pop\n        /* \"contracts/oatstake.sol\":17183:17184  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":17154:17162  _stakers */\n      dup2\n        /* \"contracts/oatstake.sol\":17154:17179  _stakers.rewardRedeemedAt */\n      0x60\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17154:17184  _stakers.rewardRedeemedAt == 0 */\n      eq\n        /* \"contracts/oatstake.sol\":17121:17185  (_stakers.unstakeAmount > 0) && (_stakers.rewardRedeemedAt == 0) */\n    tag_149:\n        /* \"contracts/oatstake.sol\":17117:17589  if ((_stakers.unstakeAmount > 0) && (_stakers.rewardRedeemedAt == 0)) {\r... */\n      iszero\n      tag_150\n      jumpi\n        /* \"contracts/oatstake.sol\":17211:17295  _stakers.reward.add(calculateRewards(_stakers.unstakedAtTimestamp, _stakers.amount)) */\n      tag_151\n        /* \"contracts/oatstake.sol\":17231:17294  calculateRewards(_stakers.unstakedAtTimestamp, _stakers.amount) */\n      tag_152\n        /* \"contracts/oatstake.sol\":17248:17256  _stakers */\n      dup3\n        /* \"contracts/oatstake.sol\":17248:17276  _stakers.unstakedAtTimestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17278:17286  _stakers */\n      dup4\n        /* \"contracts/oatstake.sol\":17278:17293  _stakers.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17231:17247  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":17231:17294  calculateRewards(_stakers.unstakedAtTimestamp, _stakers.amount) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/oatstake.sol\":17211:17219  _stakers */\n      dup3\n        /* \"contracts/oatstake.sol\":17211:17226  _stakers.reward */\n      0x80\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17211:17230  _stakers.reward.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":17211:17295  _stakers.reward.add(calculateRewards(_stakers.unstakedAtTimestamp, _stakers.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"contracts/oatstake.sol\":17202:17295  reward = _stakers.reward.add(calculateRewards(_stakers.unstakedAtTimestamp, _stakers.amount)) */\n      swap4\n      pop\n        /* \"contracts/oatstake.sol\":17117:17589  if ((_stakers.unstakeAmount > 0) && (_stakers.rewardRedeemedAt == 0)) {\r... */\n      jump(tag_153)\n    tag_150:\n        /* \"contracts/oatstake.sol\":17345:17346  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":17317:17325  _stakers */\n      dup2\n        /* \"contracts/oatstake.sol\":17317:17342  _stakers.rewardRedeemedAt */\n      0x60\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17317:17346  _stakers.rewardRedeemedAt > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":17313:17589  if (_stakers.rewardRedeemedAt > 0) {\r... */\n      iszero\n      tag_154\n      jumpi\n        /* \"contracts/oatstake.sol\":17372:17453  _stakers.reward.add(calculateRewards(_stakers.rewardRedeemedAt, _stakers.amount)) */\n      tag_155\n        /* \"contracts/oatstake.sol\":17392:17452  calculateRewards(_stakers.rewardRedeemedAt, _stakers.amount) */\n      tag_156\n        /* \"contracts/oatstake.sol\":17409:17417  _stakers */\n      dup3\n        /* \"contracts/oatstake.sol\":17409:17434  _stakers.rewardRedeemedAt */\n      0x60\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17436:17444  _stakers */\n      dup4\n        /* \"contracts/oatstake.sol\":17436:17451  _stakers.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17392:17408  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":17392:17452  calculateRewards(_stakers.rewardRedeemedAt, _stakers.amount) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/oatstake.sol\":17372:17380  _stakers */\n      dup3\n        /* \"contracts/oatstake.sol\":17372:17387  _stakers.reward */\n      0x80\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17372:17391  _stakers.reward.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":17372:17453  _stakers.reward.add(calculateRewards(_stakers.rewardRedeemedAt, _stakers.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"contracts/oatstake.sol\":17363:17453  reward = _stakers.reward.add(calculateRewards(_stakers.rewardRedeemedAt, _stakers.amount)) */\n      swap4\n      pop\n        /* \"contracts/oatstake.sol\":17313:17589  if (_stakers.rewardRedeemedAt > 0) {\r... */\n      jump(tag_157)\n    tag_154:\n        /* \"contracts/oatstake.sol\":17495:17577  _stakers.reward.add(calculateRewards(_stakers.stakedAtTimestamp, _stakers.amount)) */\n      tag_158\n        /* \"contracts/oatstake.sol\":17515:17576  calculateRewards(_stakers.stakedAtTimestamp, _stakers.amount) */\n      tag_159\n        /* \"contracts/oatstake.sol\":17532:17540  _stakers */\n      dup3\n        /* \"contracts/oatstake.sol\":17532:17558  _stakers.stakedAtTimestamp */\n      0x20\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17560:17568  _stakers */\n      dup4\n        /* \"contracts/oatstake.sol\":17560:17575  _stakers.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17515:17531  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":17515:17576  calculateRewards(_stakers.stakedAtTimestamp, _stakers.amount) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/oatstake.sol\":17495:17503  _stakers */\n      dup3\n        /* \"contracts/oatstake.sol\":17495:17510  _stakers.reward */\n      0x80\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17495:17514  _stakers.reward.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":17495:17577  _stakers.reward.add(calculateRewards(_stakers.stakedAtTimestamp, _stakers.amount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"contracts/oatstake.sol\":17486:17577  reward = _stakers.reward.add(calculateRewards(_stakers.stakedAtTimestamp, _stakers.amount)) */\n      swap4\n      pop\n        /* \"contracts/oatstake.sol\":17313:17589  if (_stakers.rewardRedeemedAt > 0) {\r... */\n    tag_157:\n        /* \"contracts/oatstake.sol\":17117:17589  if ((_stakers.unstakeAmount > 0) && (_stakers.rewardRedeemedAt == 0)) {\r... */\n    tag_153:\n        /* \"contracts/oatstake.sol\":17615:17623  _stakers */\n      dup1\n        /* \"contracts/oatstake.sol\":17615:17637  _stakers.unstakeAmount */\n      0xc0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17599:17637  unstakeAmount = _stakers.unstakeAmount */\n      swap3\n      pop\n        /* \"contracts/oatstake.sol\":17665:17673  _stakers */\n      dup1\n        /* \"contracts/oatstake.sol\":17665:17688  _stakers.claimedRewards */\n      0xa0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":17648:17688  claimedRewards = _stakers.claimedRewards */\n      swap2\n      pop\n        /* \"contracts/oatstake.sol\":16555:17696  function myStakes(address _staker)\r... */\n      pop\n      swap2\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      swap6\n      jump\t// out\n        /* \"contracts/oatstake.sol\":13449:14760  function stake(uint256 amount) external {\r... */\n    tag_62:\n        /* \"contracts/oatstake.sol\":13517:13518  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":13508:13514  amount */\n      dup2\n        /* \"contracts/oatstake.sol\":13508:13518  amount > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":13500:13547  require(amount > 0, \"Stake amount must be > 0\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5374616b6520616d6f756e74206d757374206265203e20300000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/oatstake.sol\":13560:13587  uint256 stakerChampsBalance */\n      0x00\n        /* \"contracts/oatstake.sol\":13590:13604  ChampsContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":13590:13614  ChampsContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/oatstake.sol\":13615:13625  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":13590:13626  ChampsContract.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":13560:13626  uint256 stakerChampsBalance = ChampsContract.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":13668:13674  amount */\n      dup2\n        /* \"contracts/oatstake.sol\":13645:13664  stakerChampsBalance */\n      dup2\n        /* \"contracts/oatstake.sol\":13645:13674  stakerChampsBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/oatstake.sol\":13637:13711  require(stakerChampsBalance >= amount, \"stake: Insufficient user balance\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7374616b653a20496e73756666696369656e7420757365722062616c616e6365\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/oatstake.sol\":13724:13745  Staker memory _staker */\n      tag_167\n      tag_80\n      jump\t// in\n    tag_167:\n        /* \"contracts/oatstake.sol\":13748:13758  stakerInfo */\n      0x04\n        /* \"contracts/oatstake.sol\":13748:13770  stakerInfo[msg.sender] */\n      0x00\n        /* \"contracts/oatstake.sol\":13759:13769  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":13748:13770  stakerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/oatstake.sol\":13724:13770  Staker memory _staker = stakerInfo[msg.sender] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":13786:13793  _staker */\n      dup1\n        /* \"contracts/oatstake.sol\":13786:13803  _staker.isPresent */\n      0x00\n      add\n      mload\n        /* \"contracts/oatstake.sol\":13781:14011  if (!_staker.isPresent) {\r... */\n      tag_168\n      jumpi\n        /* \"contracts/oatstake.sol\":13840:13844  true */\n      0x01\n        /* \"contracts/oatstake.sol\":13820:13827  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":13820:13837  _staker.isPresent */\n      0x00\n      add\n        /* \"contracts/oatstake.sol\":13820:13844  _staker.isPresent = true */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":13859:13866  stakers */\n      0x02\n        /* \"contracts/oatstake.sol\":13872:13882  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":13859:13883  stakers.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/oatstake.sol\":13984:13999  block.timestamp */\n      timestamp\n        /* \"contracts/oatstake.sol\":13956:13963  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":13956:13981  _staker.stakedAtTimestamp */\n      0x20\n      add\n        /* \"contracts/oatstake.sol\":13956:13999  _staker.stakedAtTimestamp = block.timestamp */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":13781:14011  if (!_staker.isPresent) {\r... */\n    tag_168:\n        /* \"contracts/oatstake.sol\":14025:14046  uint256 previousStake */\n      0x00\n        /* \"contracts/oatstake.sol\":14049:14056  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":14049:14063  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":14025:14063  uint256 previousStake = _staker.amount */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":14094:14095  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":14078:14091  previousStake */\n      dup2\n        /* \"contracts/oatstake.sol\":14078:14095  previousStake > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":14074:14363  if (previousStake > 0) {\r... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/oatstake.sol\":14177:14235  calculateRewards(_staker.stakedAtTimestamp, previousStake) */\n      tag_171\n        /* \"contracts/oatstake.sol\":14194:14201  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":14194:14219  _staker.stakedAtTimestamp */\n      0x20\n      add\n      mload\n        /* \"contracts/oatstake.sol\":14221:14234  previousStake */\n      dup3\n        /* \"contracts/oatstake.sol\":14177:14193  calculateRewards */\n      tag_86\n        /* \"contracts/oatstake.sol\":14177:14235  calculateRewards(_staker.stakedAtTimestamp, previousStake) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/oatstake.sol\":14160:14167  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":14160:14174  _staker.reward */\n      0x80\n      add\n        /* \"contracts/oatstake.sol\":14160:14235  _staker.reward = calculateRewards(_staker.stakedAtTimestamp, previousStake) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":14336:14351  block.timestamp */\n      timestamp\n        /* \"contracts/oatstake.sol\":14308:14315  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":14308:14333  _staker.stakedAtTimestamp */\n      0x20\n      add\n        /* \"contracts/oatstake.sol\":14308:14351  _staker.stakedAtTimestamp = block.timestamp */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":14074:14363  if (previousStake > 0) {\r... */\n    tag_170:\n        /* \"contracts/oatstake.sol\":14375:14441  ChampsContract.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_172\n        /* \"contracts/oatstake.sol\":14407:14417  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":14427:14431  this */\n      address\n        /* \"contracts/oatstake.sol\":14434:14440  amount */\n      dup7\n        /* \"contracts/oatstake.sol\":14375:14389  ChampsContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":14375:14406  ChampsContract.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_173\n      swap1\n        /* \"contracts/oatstake.sol\":14375:14441  ChampsContract.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/oatstake.sol\":14474:14503  totalChampsStaked.add(amount) */\n      tag_174\n        /* \"contracts/oatstake.sol\":14496:14502  amount */\n      dup5\n        /* \"contracts/oatstake.sol\":14474:14491  totalChampsStaked */\n      sload(0x03)\n        /* \"contracts/oatstake.sol\":14474:14495  totalChampsStaked.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":14474:14503  totalChampsStaked.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"contracts/oatstake.sol\":14454:14471  totalChampsStaked */\n      0x03\n        /* \"contracts/oatstake.sol\":14454:14503  totalChampsStaked = totalChampsStaked.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/oatstake.sol\":14572:14598  _staker.amount.add(amount) */\n      tag_175\n        /* \"contracts/oatstake.sol\":14591:14597  amount */\n      dup5\n        /* \"contracts/oatstake.sol\":14572:14579  _staker */\n      dup4\n        /* \"contracts/oatstake.sol\":14572:14586  _staker.amount */\n      0xe0\n      add\n      mload\n        /* \"contracts/oatstake.sol\":14572:14590  _staker.amount.add */\n      tag_88\n      swap1\n        /* \"contracts/oatstake.sol\":14572:14598  _staker.amount.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"contracts/oatstake.sol\":14555:14562  _staker */\n      dup3\n        /* \"contracts/oatstake.sol\":14555:14569  _staker.amount */\n      0xe0\n      add\n        /* \"contracts/oatstake.sol\":14555:14598  _staker.amount = _staker.amount.add(amount) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":14634:14641  _staker */\n      dup2\n        /* \"contracts/oatstake.sol\":14609:14619  stakerInfo */\n      0x04\n        /* \"contracts/oatstake.sol\":14609:14631  stakerInfo[msg.sender] */\n      0x00\n        /* \"contracts/oatstake.sol\":14620:14630  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":14609:14631  stakerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/oatstake.sol\":14609:14641  stakerInfo[msg.sender] = _staker */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":14706:14716  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":14700:14752  Stake(msg.sender, amount, _staker.stakedAtTimestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b6\n        /* \"contracts/oatstake.sol\":14718:14724  amount */\n      dup6\n        /* \"contracts/oatstake.sol\":14726:14733  _staker */\n      dup5\n        /* \"contracts/oatstake.sol\":14726:14751  _staker.stakedAtTimestamp */\n      0x20\n      add\n      mload\n        /* \"contracts/oatstake.sol\":14700:14752  Stake(msg.sender, amount, _staker.stakedAtTimestamp) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/oatstake.sol\":13449:14760  function stake(uint256 amount) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":11448:11480  uint256 public totalChampsStaked */\n    tag_65:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/oatstake.sol\":11127:11160  uint256 public constant APY = 250 */\n    tag_68:\n        /* \"contracts/oatstake.sol\":11157:11160  250 */\n      0xfa\n        /* \"contracts/oatstake.sol\":11127:11160  uint256 public constant APY = 250 */\n      dup2\n      jump\t// out\n        /* \"contracts/oatstake.sol\":10440:10684  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_72:\n        /* \"contracts/oatstake.sol\":10058:10070  _msgSender() */\n      tag_177\n        /* \"contracts/oatstake.sol\":10058:10068  _msgSender */\n      tag_127\n        /* \"contracts/oatstake.sol\":10058:10070  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/oatstake.sol\":10047:10070  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":10047:10054  owner() */\n      tag_178\n        /* \"contracts/oatstake.sol\":10047:10052  owner */\n      tag_54\n        /* \"contracts/oatstake.sol\":10047:10054  owner() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/oatstake.sol\":10047:10070  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/oatstake.sol\":10039:10107  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/oatstake.sol\":10549:10550  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":10529:10551  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":10529:10537  newOwner */\n      dup2\n        /* \"contracts/oatstake.sol\":10529:10551  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/oatstake.sol\":10521:10594  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/oatstake.sol\":10639:10647  newOwner */\n      dup1\n        /* \"contracts/oatstake.sol\":10610:10648  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":10631:10637  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":10610:10648  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/oatstake.sol\":10668:10676  newOwner */\n      dup1\n        /* \"contracts/oatstake.sol\":10659:10665  _owner */\n      0x00\n      dup1\n        /* \"contracts/oatstake.sol\":10659:10676  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/oatstake.sol\":10440:10684  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":11082:11106  address[] public stakers */\n    tag_76:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/oatstake.sol\":1901:2059  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_85:\n        /* \"contracts/oatstake.sol\":1959:1966  uint256 */\n      0x00\n        /* \"contracts/oatstake.sol\":1992:1993  a */\n      dup3\n        /* \"contracts/oatstake.sol\":1987:1988  b */\n      dup3\n        /* \"contracts/oatstake.sol\":1987:1993  b <= a */\n      gt\n      iszero\n        /* \"contracts/oatstake.sol\":1979:2028  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/oatstake.sol\":2050:2051  b */\n      dup2\n        /* \"contracts/oatstake.sol\":2046:2047  a */\n      dup4\n        /* \"contracts/oatstake.sol\":2046:2051  a - b */\n      sub\n        /* \"contracts/oatstake.sol\":2039:2051  return a - b */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":1901:2059  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":18479:18876  function calculateRewards(uint256 timestamp, uint256 amount) internal view returns (uint256 reward) {\r... */\n    tag_86:\n        /* \"contracts/oatstake.sol\":18563:18577  uint256 reward */\n      0x00\n        /* \"contracts/oatstake.sol\":18590:18612  uint256 hoursStakedFor */\n      dup1\n        /* \"contracts/oatstake.sol\":18615:18647  getHoursFromTimestamp(timestamp) */\n      tag_187\n        /* \"contracts/oatstake.sol\":18637:18646  timestamp */\n      dup5\n        /* \"contracts/oatstake.sol\":18615:18636  getHoursFromTimestamp */\n      tag_117\n        /* \"contracts/oatstake.sol\":18615:18647  getHoursFromTimestamp(timestamp) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/oatstake.sol\":18590:18647  uint256 hoursStakedFor = getHoursFromTimestamp(timestamp) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":18660:18680  uint256 tokenPerYear */\n      0x00\n        /* \"contracts/oatstake.sol\":18683:18709  (amount.mul(APY)).div(100) */\n      tag_188\n        /* \"contracts/oatstake.sol\":18705:18708  100 */\n      0x64\n        /* \"contracts/oatstake.sol\":18684:18699  amount.mul(APY) */\n      tag_189\n        /* \"contracts/oatstake.sol\":11157:11160  250 */\n      0xfa\n        /* \"contracts/oatstake.sol\":18684:18690  amount */\n      dup8\n        /* \"contracts/oatstake.sol\":18684:18694  amount.mul */\n      tag_190\n      swap1\n        /* \"contracts/oatstake.sol\":18684:18699  amount.mul(APY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"contracts/oatstake.sol\":18683:18704  (amount.mul(APY)).div */\n      tag_191\n      swap1\n        /* \"contracts/oatstake.sol\":18683:18709  (amount.mul(APY)).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"contracts/oatstake.sol\":18660:18709  uint256 tokenPerYear = (amount.mul(APY)).div(100) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":18720:18739  uint256 tokenPerDay */\n      0x00\n        /* \"contracts/oatstake.sol\":18742:18763  tokenPerYear.div(365) */\n      tag_192\n        /* \"contracts/oatstake.sol\":18759:18762  365 */\n      0x016d\n        /* \"contracts/oatstake.sol\":18742:18754  tokenPerYear */\n      dup4\n        /* \"contracts/oatstake.sol\":18742:18758  tokenPerYear.div */\n      tag_191\n      swap1\n        /* \"contracts/oatstake.sol\":18742:18763  tokenPerYear.div(365) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"contracts/oatstake.sol\":18720:18763  uint256 tokenPerDay = tokenPerYear.div(365) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":18774:18794  uint256 tokenPerHour */\n      0x00\n        /* \"contracts/oatstake.sol\":18797:18816  tokenPerDay.div(24) */\n      tag_193\n        /* \"contracts/oatstake.sol\":18813:18815  24 */\n      0x18\n        /* \"contracts/oatstake.sol\":18797:18808  tokenPerDay */\n      dup4\n        /* \"contracts/oatstake.sol\":18797:18812  tokenPerDay.div */\n      tag_191\n      swap1\n        /* \"contracts/oatstake.sol\":18797:18816  tokenPerDay.div(24) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"contracts/oatstake.sol\":18774:18816  uint256 tokenPerHour = tokenPerDay.div(24) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":18836:18868  tokenPerHour.mul(hoursStakedFor) */\n      tag_194\n        /* \"contracts/oatstake.sol\":18853:18867  hoursStakedFor */\n      dup5\n        /* \"contracts/oatstake.sol\":18836:18848  tokenPerHour */\n      dup3\n        /* \"contracts/oatstake.sol\":18836:18852  tokenPerHour.mul */\n      tag_190\n      swap1\n        /* \"contracts/oatstake.sol\":18836:18868  tokenPerHour.mul(hoursStakedFor) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/oatstake.sol\":18829:18868  return tokenPerHour.mul(hoursStakedFor) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":18479:18876  function calculateRewards(uint256 timestamp, uint256 amount) internal view returns (uint256 reward) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":1712:1891  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_88:\n        /* \"contracts/oatstake.sol\":1770:1777  uint256 */\n      0x00\n        /* \"contracts/oatstake.sol\":1790:1799  uint256 c */\n      dup1\n        /* \"contracts/oatstake.sol\":1806:1807  b */\n      dup3\n        /* \"contracts/oatstake.sol\":1802:1803  a */\n      dup5\n        /* \"contracts/oatstake.sol\":1802:1807  a + b */\n      add\n        /* \"contracts/oatstake.sol\":1790:1807  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":1831:1832  a */\n      dup4\n        /* \"contracts/oatstake.sol\":1826:1827  c */\n      dup2\n        /* \"contracts/oatstake.sol\":1826:1832  c >= a */\n      lt\n      iszero\n        /* \"contracts/oatstake.sol\":1818:1864  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"contracts/oatstake.sol\":1882:1883  c */\n      dup1\n        /* \"contracts/oatstake.sol\":1875:1883  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":1712:1891  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":7111:7288  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n    tag_111:\n        /* \"contracts/oatstake.sol\":7194:7280  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_198\n        /* \"contracts/oatstake.sol\":7214:7219  token */\n      dup4\n        /* \"contracts/oatstake.sol\":7244:7267  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/oatstake.sol\":7269:7271  to */\n      dup5\n        /* \"contracts/oatstake.sol\":7273:7278  value */\n      dup5\n        /* \"contracts/oatstake.sol\":7221:7279  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":7194:7213  _callOptionalReturn */\n      tag_199\n        /* \"contracts/oatstake.sol\":7194:7280  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/oatstake.sol\":7111:7288  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":18971:19172  function getHoursFromTimestamp(uint256 timestamp) internal view returns (uint256) {\r... */\n    tag_117:\n        /* \"contracts/oatstake.sol\":19044:19051  uint256 */\n      0x00\n        /* \"contracts/oatstake.sol\":19157:19164  1 hours */\n      0x0e10\n        /* \"contracts/oatstake.sol\":19144:19153  timestamp */\n      dup3\n        /* \"contracts/oatstake.sol\":19126:19141  block.timestamp */\n      timestamp\n        /* \"contracts/oatstake.sol\":19126:19153  block.timestamp - timestamp */\n      sub\n        /* \"contracts/oatstake.sol\":19125:19164  (block.timestamp - timestamp) / 1 hours */\n      dup2\n      tag_201\n      jumpi\n      invalid\n    tag_201:\n      div\n        /* \"contracts/oatstake.sol\":19118:19164  return (block.timestamp - timestamp) / 1 hours */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":18971:19172  function getHoursFromTimestamp(uint256 timestamp) internal view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":8969:9075  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_127:\n        /* \"contracts/oatstake.sol\":9022:9037  address payable */\n      0x00\n        /* \"contracts/oatstake.sol\":9057:9067  msg.sender */\n      caller\n        /* \"contracts/oatstake.sol\":9050:9067  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":8969:9075  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/oatstake.sol\":7296:7501  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n    tag_173:\n        /* \"contracts/oatstake.sol\":7397:7493  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_204\n        /* \"contracts/oatstake.sol\":7417:7422  token */\n      dup5\n        /* \"contracts/oatstake.sol\":7447:7474  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/oatstake.sol\":7476:7480  from */\n      dup6\n        /* \"contracts/oatstake.sol\":7482:7484  to */\n      dup6\n        /* \"contracts/oatstake.sol\":7486:7491  value */\n      dup6\n        /* \"contracts/oatstake.sol\":7424:7492  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":7397:7416  _callOptionalReturn */\n      tag_199\n        /* \"contracts/oatstake.sol\":7397:7493  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/oatstake.sol\":7296:7501  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":2067:2287  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_190:\n        /* \"contracts/oatstake.sol\":2125:2132  uint256 */\n      0x00\n        /* \"contracts/oatstake.sol\":2154:2155  0 */\n      dup1\n        /* \"contracts/oatstake.sol\":2149:2150  a */\n      dup4\n        /* \"contracts/oatstake.sol\":2149:2155  a == 0 */\n      eq\n        /* \"contracts/oatstake.sol\":2145:2165  if (a == 0) return 0 */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/oatstake.sol\":2164:2165  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":2157:2165  return 0 */\n      swap1\n      pop\n      jump(tag_205)\n        /* \"contracts/oatstake.sol\":2145:2165  if (a == 0) return 0 */\n    tag_206:\n        /* \"contracts/oatstake.sol\":2176:2185  uint256 c */\n      0x00\n        /* \"contracts/oatstake.sol\":2192:2193  b */\n      dup3\n        /* \"contracts/oatstake.sol\":2188:2189  a */\n      dup5\n        /* \"contracts/oatstake.sol\":2188:2193  a * b */\n      mul\n        /* \"contracts/oatstake.sol\":2176:2193  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":2221:2222  b */\n      dup3\n        /* \"contracts/oatstake.sol\":2216:2217  a */\n      dup5\n        /* \"contracts/oatstake.sol\":2212:2213  c */\n      dup3\n        /* \"contracts/oatstake.sol\":2212:2217  c / a */\n      dup2\n      tag_207\n      jumpi\n      invalid\n    tag_207:\n      div\n        /* \"contracts/oatstake.sol\":2212:2222  c / a == b */\n      eq\n        /* \"contracts/oatstake.sol\":2204:2260  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/oatstake.sol\":2278:2279  c */\n      dup1\n        /* \"contracts/oatstake.sol\":2271:2279  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":2067:2287  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_205:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":2297:2450  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_191:\n        /* \"contracts/oatstake.sol\":2355:2362  uint256 */\n      0x00\n        /* \"contracts/oatstake.sol\":2387:2388  0 */\n      dup1\n        /* \"contracts/oatstake.sol\":2383:2384  b */\n      dup3\n        /* \"contracts/oatstake.sol\":2383:2388  b > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":2375:2419  require(b > 0, \"SafeMath: division by zero\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"contracts/oatstake.sol\":2441:2442  b */\n      dup2\n        /* \"contracts/oatstake.sol\":2437:2438  a */\n      dup4\n        /* \"contracts/oatstake.sol\":2437:2442  a / b */\n      dup2\n      tag_211\n      jumpi\n      invalid\n    tag_211:\n      div\n        /* \"contracts/oatstake.sol\":2430:2442  return a / b */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":2297:2450  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":8502:8927  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_199:\n        /* \"contracts/oatstake.sol\":8590:8613  bytes memory returndata */\n      0x60\n        /* \"contracts/oatstake.sol\":8616:8685  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_213\n        /* \"contracts/oatstake.sol\":8644:8648  data */\n      dup3\n        /* \"contracts/oatstake.sol\":8616:8685  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/oatstake.sol\":8624:8629  token */\n      dup6\n        /* \"contracts/oatstake.sol\":8616:8643  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_214\n      swap1\n        /* \"contracts/oatstake.sol\":8616:8685  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/oatstake.sol\":8590:8685  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":8720:8721  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":8700:8710  returndata */\n      dup2\n        /* \"contracts/oatstake.sol\":8700:8717  returndata.length */\n      mload\n        /* \"contracts/oatstake.sol\":8700:8721  returndata.length > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":8696:8920  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/oatstake.sol\":8842:8852  returndata */\n      dup1\n        /* \"contracts/oatstake.sol\":8831:8861  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":8823:8908  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/oatstake.sol\":8696:8920  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_215:\n        /* \"contracts/oatstake.sol\":8502:8927  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":4007:4202  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_214:\n        /* \"contracts/oatstake.sol\":4110:4122  bytes memory */\n      0x60\n        /* \"contracts/oatstake.sol\":4142:4194  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_219\n        /* \"contracts/oatstake.sol\":4164:4170  target */\n      dup5\n        /* \"contracts/oatstake.sol\":4172:4176  data */\n      dup5\n        /* \"contracts/oatstake.sol\":4178:4179  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":4181:4193  errorMessage */\n      dup6\n        /* \"contracts/oatstake.sol\":4142:4163  functionCallWithValue */\n      tag_220\n        /* \"contracts/oatstake.sol\":4142:4194  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/oatstake.sol\":4135:4194  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":4007:4202  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":4448:4978  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_220:\n        /* \"contracts/oatstake.sol\":4575:4587  bytes memory */\n      0x60\n        /* \"contracts/oatstake.sol\":4633:4638  value */\n      dup3\n        /* \"contracts/oatstake.sol\":4608:4629  address(this).balance */\n      selfbalance\n        /* \"contracts/oatstake.sol\":4608:4638  address(this).balance >= value */\n      lt\n      iszero\n        /* \"contracts/oatstake.sol\":4600:4681  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"contracts/oatstake.sol\":4700:4718  isContract(target) */\n      tag_223\n        /* \"contracts/oatstake.sol\":4711:4717  target */\n      dup6\n        /* \"contracts/oatstake.sol\":4700:4710  isContract */\n      tag_224\n        /* \"contracts/oatstake.sol\":4700:4718  isContract(target) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/oatstake.sol\":4692:4752  require(isContract(target), \"Address: call to non-contract\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/oatstake.sol\":4826:4838  bool success */\n      0x00\n        /* \"contracts/oatstake.sol\":4840:4863  bytes memory returndata */\n      0x60\n        /* \"contracts/oatstake.sol\":4867:4873  target */\n      dup7\n        /* \"contracts/oatstake.sol\":4867:4878  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/oatstake.sol\":4887:4892  value */\n      dup6\n        /* \"contracts/oatstake.sol\":4895:4899  data */\n      dup8\n        /* \"contracts/oatstake.sol\":4867:4900  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_226:\n      0x20\n      dup4\n      lt\n      tag_228\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_226)\n    tag_228:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_231\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_230)\n    tag_231:\n      0x60\n      swap2\n      pop\n    tag_230:\n      pop\n        /* \"contracts/oatstake.sol\":4825:4900  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/oatstake.sol\":4918:4970  _verifyCallResult(success, returndata, errorMessage) */\n      tag_232\n        /* \"contracts/oatstake.sol\":4936:4943  success */\n      dup3\n        /* \"contracts/oatstake.sol\":4945:4955  returndata */\n      dup3\n        /* \"contracts/oatstake.sol\":4957:4969  errorMessage */\n      dup7\n        /* \"contracts/oatstake.sol\":4918:4935  _verifyCallResult */\n      tag_233\n        /* \"contracts/oatstake.sol\":4918:4970  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/oatstake.sol\":4911:4970  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":4448:4978  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":3171:3407  function isContract(address account) internal view returns (bool) {\r... */\n    tag_224:\n        /* \"contracts/oatstake.sol\":3231:3235  bool */\n      0x00\n        /* \"contracts/oatstake.sol\":3253:3265  uint256 size */\n      dup1\n        /* \"contracts/oatstake.sol\":3364:3371  account */\n      dup3\n        /* \"contracts/oatstake.sol\":3352:3372  extcodesize(account) */\n      extcodesize\n        /* \"contracts/oatstake.sol\":3344:3372  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/oatstake.sol\":3398:3399  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":3391:3395  size */\n      dup2\n        /* \"contracts/oatstake.sol\":3391:3399  size > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":3384:3399  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/oatstake.sol\":3171:3407  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/oatstake.sol\":6268:7010  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r... */\n    tag_233:\n        /* \"contracts/oatstake.sol\":6383:6395  bytes memory */\n      0x60\n        /* \"contracts/oatstake.sol\":6412:6419  success */\n      dup4\n        /* \"contracts/oatstake.sol\":6408:7003  if (success) {\r... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/oatstake.sol\":6443:6453  returndata */\n      dup3\n        /* \"contracts/oatstake.sol\":6436:6453  return returndata */\n      swap1\n      pop\n      jump(tag_235)\n        /* \"contracts/oatstake.sol\":6408:7003  if (success) {\r... */\n    tag_236:\n        /* \"contracts/oatstake.sol\":6577:6578  0 */\n      0x00\n        /* \"contracts/oatstake.sol\":6557:6567  returndata */\n      dup4\n        /* \"contracts/oatstake.sol\":6557:6574  returndata.length */\n      mload\n        /* \"contracts/oatstake.sol\":6557:6578  returndata.length > 0 */\n      gt\n        /* \"contracts/oatstake.sol\":6553:6992  if (returndata.length > 0) {\r... */\n      iszero\n      tag_238\n      jumpi\n        /* \"contracts/oatstake.sol\":6820:6830  returndata */\n      dup3\n        /* \"contracts/oatstake.sol\":6814:6831  mload(returndata) */\n      mload\n        /* \"contracts/oatstake.sol\":6881:6896  returndata_size */\n      dup1\n        /* \"contracts/oatstake.sol\":6868:6878  returndata */\n      dup5\n        /* \"contracts/oatstake.sol\":6864:6866  32 */\n      0x20\n        /* \"contracts/oatstake.sol\":6860:6879  add(32, returndata) */\n      add\n        /* \"contracts/oatstake.sol\":6853:6897  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/oatstake.sol\":6768:6916  {\r... */\n    tag_238:\n        /* \"contracts/oatstake.sol\":6963:6975  errorMessage */\n      dup2\n        /* \"contracts/oatstake.sol\":6956:6976  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_240:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_242\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_240)\n    tag_242:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_243\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_243:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/oatstake.sol\":6268:7010  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r... */\n    tag_235:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_80:\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4 43616e6e6f7420756e7374616b6520696e20636f6f6c646f776e20706572696f64\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_7dd237e5e91540a0b6e997b7f12d98ccf19c520e7525780536278ace211402ff 636c61696d526577617264733a20496e73756666696369656e7420636f6e74726163742062616c616e6365\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_bfca188c10ccbcd10108d0d17745e5c7c1a1e3f9fccb2c999dacbd65eeafacae 77697468647261773a20496e73756666696369656e7420636f6e74726163742062616c616e6365\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa264697066735822122022886ff4505c0a5ce21a274a57f4473c20803177c64b98c02bfbf4f3e00f793664736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620028a3380380620028a3833981810160405260208110156200003757600080fd5b810190808051906020019092919050505060006200005a620001e460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200019c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616e6e6f742062652061646472657373207a65726f0000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001ec565b600033905090565b6126a780620001fc6000396000f3fe6080604052600436106100ec5760003560e01c8063869890381161008a578063eb7fb17711610059578063eb7fb177146103e2578063ef8bd3051461040d578063f2fde38b14610438578063fd5e6dd114610489576100f3565b806386989038146102b35780638da5cb5b146102de5780639be730da1461031f578063a694fc3a146103a7576100f3565b80634e745f1f116100c65780634e745f1f1461015e57806366837c7e146101f6578063715018a61461023757806382d366d01461024e576100f3565b80632e17de78146100f5578063372500ab146101305780633ccfd60b14610147576100f3565b366100f357005b005b34801561010157600080fd5b5061012e6004803603602081101561011857600080fd5b81019080803590602001909291905050506104ee565b005b34801561013c57600080fd5b506101456108a3565b005b34801561015357600080fd5b5061015c610d26565b005b34801561016a57600080fd5b506101ad6004803603602081101561018157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061113e565b6040518089151581526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b34801561020257600080fd5b5061020b611193565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024357600080fd5b5061024c6111b9565b005b34801561025a57600080fd5b5061029d6004803603602081101561027157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611326565b6040518082815260200191505060405180910390f35b3480156102bf57600080fd5b506102c8611499565b6040518082815260200191505060405180910390f35b3480156102ea57600080fd5b506102f36114a6565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032b57600080fd5b5061036e6004803603602081101561034257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114cf565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b3480156103b357600080fd5b506103e0600480360360208110156103ca57600080fd5b8101908080359060200190929190505050611677565b005b3480156103ee57600080fd5b506103f7611b30565b6040518082815260200191505060405180910390f35b34801561041957600080fd5b50610422611b36565b6040518082815260200191505060405180910390f35b34801561044457600080fd5b506104876004803603602081101561045b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b3b565b005b34801561049557600080fd5b506104c2600480360360208110156104ac57600080fd5b8101908080359060200190929190505050611d2d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008111610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f556e7374616b6520616d6f756e74206d757374206265203e203000000000000081525060200191505060405180910390fd5b61056c612520565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481525050905060008160e0015111610694576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f205374616b6573000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b8060e0015182111561070e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f556e7374616b6520616d74203e207374616b656420616d74000000000000000081525060200191505060405180910390fd5b4281604001818152505061073c8160400151610737848460e00151611d6c90919063ffffffff16565b611def565b81608001818152505061075c828260c00151611e7890919063ffffffff16565b8160c001818152505061077c828260e00151611d6c90919063ffffffff16565b8160e001818152505061079a82600354611d6c90919063ffffffff16565b60038190555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701559050503373ffffffffffffffffffffffffffffffffffffffff167ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb2808342604051808381526020018281526020019250505060405180910390a25050565b6108ab612520565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481525050905080600001516109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f20726577617264733a206e6f742061207374616b6572000000000000000081525060200191505060405180910390fd5b6000808260c001511180156109e9575060008260600151145b15610a1d57610a16610a0383604001518460e00151611def565b8360800151611e7890919063ffffffff16565b9050610a85565b600082606001511115610a5957610a52610a3f83606001518460e00151611def565b8360800151611e7890919063ffffffff16565b9050610a84565b610a81610a6e83602001518460e00151611def565b8360800151611e7890919063ffffffff16565b90505b5b4282606001818152505080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b1957600080fd5b505afa158015610b2d573d6000803e3d6000fd5b505050506040513d6020811015610b4357600080fd5b81019080805190602001909291905050501015610bab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806125d5602b913960400191505060405180910390fd5b610bf83382600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f009092919063ffffffff16565b6000826080018181525050610c1a818360a00151611e7890919063ffffffff16565b8260a001818152505081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701559050503373ffffffffffffffffffffffffffffffffffffffff167f674a8930d4166ce2352c3dc1e9ff633595db479f71f3741270a0a73a52cb7b0f8242604051808381526020018281526020019250505060405180910390a25050565b610d2e612520565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481525050905060008160c00151905060008111610e5b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f556e7374616b6520616d6f756e7420697320300000000000000000000000000081525060200191505060405180910390fd5b6000610e6a8360400151611fa2565b90506078811015610ec6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806125686021913960400191505060405180910390fd5b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f5057600080fd5b505afa158015610f64573d6000803e3d6000fd5b505050506040513d6020811015610f7a57600080fd5b81019080805190602001909291905050501015610fe2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806126216027913960400191505060405180910390fd5b61102f3383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f009092919063ffffffff16565b60008360c001818152505082600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701559050503373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688342604051808381526020018281526020019250505060405180910390a2505050565b60046020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111c1611fb9565b73ffffffffffffffffffffffffffffffffffffffff166111df6114a6565b73ffffffffffffffffffffffffffffffffffffffff1614611268576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611330612520565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481525050905060008160c001511180156113f6575060008160600151145b1561142b5761142361141082604001518360e00151611def565b8260800151611e7890919063ffffffff16565b915050611494565b6000816060015111156114685761146061144d82606001518360e00151611def565b8260800151611e7890919063ffffffff16565b915050611494565b61149061147d82602001518360e00151611def565b8260800151611e7890919063ffffffff16565b9150505b919050565b6000600280549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000806000806114e0612520565b600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152505090508060e0015196506115a28160200151611fa2565b95508060400151945060008160c001511180156115c3575060008160600151145b156115f7576115f06115dd82604001518360e00151611def565b8260800151611e7890919063ffffffff16565b935061165f565b6000816060015111156116335761162c61161982606001518360e00151611def565b8260800151611e7890919063ffffffff16565b935061165e565b61165b61164882602001518360e00151611def565b8260800151611e7890919063ffffffff16565b93505b5b8060c0015192508060a0015191505091939550919395565b600081116116ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5374616b6520616d6f756e74206d757374206265203e2030000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561177857600080fd5b505afa15801561178c573d6000803e3d6000fd5b505050506040513d60208110156117a257600080fd5b810190808051906020019092919050505090508181101561182b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f7374616b653a20496e73756666696369656e7420757365722062616c616e636581525060200191505060405180910390fd5b611833612520565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481525050905080600001516119695760018160000190151590811515815250506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160200181815250505b60008160e001519050600081111561199d57611989826020015182611def565b826080018181525050428260200181815250505b6119ec333086600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fc1909392919063ffffffff16565b611a0184600354611e7890919063ffffffff16565b600381905550611a1e848360e00151611e7890919063ffffffff16565b8260e001818152505081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701559050503373ffffffffffffffffffffffffffffffffffffffff167f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b6858460200151604051808381526020018281526020019250505060405180910390a250505050565b60035481565b60fa81565b611b43611fb9565b73ffffffffffffffffffffffffffffffffffffffff16611b616114a6565b73ffffffffffffffffffffffffffffffffffffffff1614611bea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806125896026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60028181548110611d3d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082821115611de4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080611dfb84611fa2565b90506000611e266064611e1860fa8761208290919063ffffffff16565b61210890919063ffffffff16565b90506000611e3f61016d8361210890919063ffffffff16565b90506000611e5760188361210890919063ffffffff16565b9050611e6c848261208290919063ffffffff16565b94505050505092915050565b600080828401905083811015611ef6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611f9d8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612191565b505050565b6000610e1082420381611fb157fe5b049050919050565b600033905090565b61207c846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612191565b50505050565b6000808314156120955760009050612102565b60008284029050828482816120a657fe5b04146120fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806126006021913960400191505060405180910390fd5b809150505b92915050565b600080821161217f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161218857fe5b04905092915050565b60606121f3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166122809092919063ffffffff16565b905060008151111561227b5780806020019051602081101561221457600080fd5b810190808051906020019092919050505061227a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612648602a913960400191505060405180910390fd5b5b505050565b606061228f8484600085612298565b90509392505050565b6060824710156122f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806125af6026913960400191505060405180910390fd5b6122fc85612441565b61236e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106123be578051825260208201915060208101905060208303925061239b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612420576040519150601f19603f3d011682016040523d82523d6000602084013e612425565b606091505b5091509150612435828286612454565b92505050949350505050565b600080823b905060008111915050919050565b6060831561246457829050612519565b6000835111156124775782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156124de5780820151818401526020810190506124c3565b50505050905090810190601f16801561250b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b60405180610100016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152509056fe43616e6e6f7420756e7374616b6520696e20636f6f6c646f776e20706572696f644f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c636c61696d526577617264733a20496e73756666696369656e7420636f6e74726163742062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7777697468647261773a20496e73756666696369656e7420636f6e74726163742062616c616e63655361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122022886ff4505c0a5ce21a274a57f4473c20803177c64b98c02bfbf4f3e00f793664736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28A3 CODESIZE SUB DUP1 PUSH3 0x28A3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH3 0x5A PUSH3 0x1E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x19C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742062652061646472657373207A65726F00000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x1EC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x26A7 DUP1 PUSH3 0x1FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86989038 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xEB7FB177 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xEB7FB177 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xEF8BD305 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x489 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x86989038 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x9BE730DA EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x3A7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x4E745F1F GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4E745F1F EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x66837C7E EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x82D366D0 EQ PUSH2 0x24E JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x147 JUMPI PUSH2 0xF3 JUMP JUMPDEST CALLDATASIZE PUSH2 0xF3 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x8A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0xD26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP10 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x11B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1677 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x422 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B3B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E7374616B6520616D6F756E74206D757374206265203E2030000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x56C PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xE0 ADD MLOAD GT PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F205374616B65730000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xE0 ADD MLOAD DUP3 GT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E7374616B6520616D74203E207374616B656420616D740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x73C DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x737 DUP5 DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x1D6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DEF JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x75C DUP3 DUP3 PUSH1 0xC0 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x77C DUP3 DUP3 PUSH1 0xE0 ADD MLOAD PUSH2 0x1D6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x79A DUP3 PUSH1 0x3 SLOAD PUSH2 0x1D6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x8AB PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F20726577617264733A206E6F742061207374616B65720000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xC0 ADD MLOAD GT DUP1 ISZERO PUSH2 0x9E9 JUMPI POP PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD EQ JUMPDEST ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA16 PUSH2 0xA03 DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA52 PUSH2 0xA3F DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xA81 PUSH2 0xA6E DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST TIMESTAMP DUP3 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xBAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25D5 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF8 CALLER DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F00 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xC1A DUP2 DUP4 PUSH1 0xA0 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x674A8930D4166CE2352C3DC1E9FF633595DB479F71F3741270A0A73A52CB7B0F DUP3 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xD2E PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xC0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E7374616B6520616D6F756E74206973203000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1FA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x78 DUP2 LT ISZERO PUSH2 0xEC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2568 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2621 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x102F CALLER DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F00 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x11C1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11DF PUSH2 0x14A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1330 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xC0 ADD MLOAD GT DUP1 ISZERO PUSH2 0x13F6 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD EQ JUMPDEST ISZERO PUSH2 0x142B JUMPI PUSH2 0x1423 PUSH2 0x1410 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x1468 JUMPI PUSH2 0x1460 PUSH2 0x144D DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1494 JUMP JUMPDEST PUSH2 0x1490 PUSH2 0x147D DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x14E0 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0xE0 ADD MLOAD SWAP7 POP PUSH2 0x15A2 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1FA2 JUMP JUMPDEST SWAP6 POP DUP1 PUSH1 0x40 ADD MLOAD SWAP5 POP PUSH1 0x0 DUP2 PUSH1 0xC0 ADD MLOAD GT DUP1 ISZERO PUSH2 0x15C3 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD EQ JUMPDEST ISZERO PUSH2 0x15F7 JUMPI PUSH2 0x15F0 PUSH2 0x15DD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x165F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x1633 JUMPI PUSH2 0x162C PUSH2 0x1619 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x165E JUMP JUMPDEST PUSH2 0x165B PUSH2 0x1648 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST DUP1 PUSH1 0xC0 ADD MLOAD SWAP3 POP DUP1 PUSH1 0xA0 ADD MLOAD SWAP2 POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x16ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5374616B6520616D6F756E74206D757374206265203E20300000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x178C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x182B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7374616B653A20496E73756666696369656E7420757365722062616C616E6365 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1833 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x1969 JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x2 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x199D JUMPI PUSH2 0x1989 DUP3 PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH2 0x19EC CALLER ADDRESS DUP7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FC1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A01 DUP5 PUSH1 0x3 SLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1A1E DUP5 DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 DUP6 DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xFA DUP2 JUMP JUMPDEST PUSH2 0x1B43 PUSH2 0x1FB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B61 PUSH2 0x14A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2589 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1DE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1DFB DUP5 PUSH2 0x1FA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E26 PUSH1 0x64 PUSH2 0x1E18 PUSH1 0xFA DUP8 PUSH2 0x2082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2108 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E3F PUSH2 0x16D DUP4 PUSH2 0x2108 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E57 PUSH1 0x18 DUP4 PUSH2 0x2108 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E6C DUP5 DUP3 PUSH2 0x2082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1EF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F9D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2191 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 DUP3 TIMESTAMP SUB DUP2 PUSH2 0x1FB1 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x207C DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2191 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2095 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x20A6 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x20FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2600 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x217F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2188 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x21F3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2280 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x227B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x227A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2648 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x228F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2298 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x22F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25AF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22FC DUP6 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0x236E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23BE JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x239B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2420 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2435 DUP3 DUP3 DUP7 PUSH2 0x2454 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2464 JUMPI DUP3 SWAP1 POP PUSH2 0x2519 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2477 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24DE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24C3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x250B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x7420756E7374616B6520696E20636F6F PUSH13 0x646F776E20706572696F644F77 PUSH15 0x61626C653A206E6577206F776E6572 KECCAK256 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C636C6169 PUSH14 0x526577617264733A20496E737566 PUSH7 0x696369656E7420 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH3 0x616C61 PUSH15 0x6365536166654D6174683A206D756C PUSH21 0x69706C69636174696F6E206F766572666C6F777769 PUSH21 0x68647261773A20496E73756666696369656E742063 PUSH16 0x6E74726163742062616C616E63655361 PUSH7 0x6545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A264697066735822122022886FF4 POP 0x5C EXP 0x5C 0xE2 BYTE 0x27 0x4A JUMPI DELEGATECALL SELFBALANCE EXTCODECOPY KECCAK256 DUP1 BALANCE PUSH24 0xC64B98C02BFBF4F3E00F793664736F6C6343000705003300 ",
							"sourceMap": "10791:8384:0:-:0;;;11883:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9618:17;9638:12;:10;;;:12;;:::i;:::-;9618:32;;9670:9;9661:6;;:18;;;;;;;;;;;;;;;;;;9728:9;9695:43;;9724:1;9695:43;;;;;;;;;;;;9591:155;11986:1;11944:44;;11952:21;11944:44;;;;11936:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12043:21;12026:14;;:38;;;;;;;;;;;;;;;;;;11883:189;10791:8384;;8969:106;9022:15;9057:10;9050:17;;8969:106;:::o;10791:8384::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86989038 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xEB7FB177 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xEB7FB177 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xEF8BD305 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x489 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x86989038 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x9BE730DA EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x3A7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x4E745F1F GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4E745F1F EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x66837C7E EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x82D366D0 EQ PUSH2 0x24E JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x147 JUMPI PUSH2 0xF3 JUMP JUMPDEST CALLDATASIZE PUSH2 0xF3 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x8A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0xD26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP10 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x11B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1677 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x422 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B3B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E7374616B6520616D6F756E74206D757374206265203E2030000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x56C PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xE0 ADD MLOAD GT PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F205374616B65730000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xE0 ADD MLOAD DUP3 GT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E7374616B6520616D74203E207374616B656420616D740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x73C DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x737 DUP5 DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x1D6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DEF JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x75C DUP3 DUP3 PUSH1 0xC0 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x77C DUP3 DUP3 PUSH1 0xE0 ADD MLOAD PUSH2 0x1D6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x79A DUP3 PUSH1 0x3 SLOAD PUSH2 0x1D6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x8AB PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F20726577617264733A206E6F742061207374616B65720000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xC0 ADD MLOAD GT DUP1 ISZERO PUSH2 0x9E9 JUMPI POP PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD EQ JUMPDEST ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA16 PUSH2 0xA03 DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA52 PUSH2 0xA3F DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xA81 PUSH2 0xA6E DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST TIMESTAMP DUP3 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xBAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25D5 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF8 CALLER DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F00 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xC1A DUP2 DUP4 PUSH1 0xA0 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x674A8930D4166CE2352C3DC1E9FF633595DB479F71F3741270A0A73A52CB7B0F DUP3 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xD2E PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xC0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E7374616B6520616D6F756E74206973203000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1FA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x78 DUP2 LT ISZERO PUSH2 0xEC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2568 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2621 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x102F CALLER DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F00 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x11C1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11DF PUSH2 0x14A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1330 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xC0 ADD MLOAD GT DUP1 ISZERO PUSH2 0x13F6 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD EQ JUMPDEST ISZERO PUSH2 0x142B JUMPI PUSH2 0x1423 PUSH2 0x1410 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x1468 JUMPI PUSH2 0x1460 PUSH2 0x144D DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1494 JUMP JUMPDEST PUSH2 0x1490 PUSH2 0x147D DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x14E0 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0xE0 ADD MLOAD SWAP7 POP PUSH2 0x15A2 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1FA2 JUMP JUMPDEST SWAP6 POP DUP1 PUSH1 0x40 ADD MLOAD SWAP5 POP PUSH1 0x0 DUP2 PUSH1 0xC0 ADD MLOAD GT DUP1 ISZERO PUSH2 0x15C3 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD EQ JUMPDEST ISZERO PUSH2 0x15F7 JUMPI PUSH2 0x15F0 PUSH2 0x15DD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x165F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x1633 JUMPI PUSH2 0x162C PUSH2 0x1619 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x165E JUMP JUMPDEST PUSH2 0x165B PUSH2 0x1648 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST DUP1 PUSH1 0xC0 ADD MLOAD SWAP3 POP DUP1 PUSH1 0xA0 ADD MLOAD SWAP2 POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x16ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5374616B6520616D6F756E74206D757374206265203E20300000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x178C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x182B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7374616B653A20496E73756666696369656E7420757365722062616C616E6365 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1833 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x1969 JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x2 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x199D JUMPI PUSH2 0x1989 DUP3 PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x1DEF JUMP JUMPDEST DUP3 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH2 0x19EC CALLER ADDRESS DUP7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FC1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A01 DUP5 PUSH1 0x3 SLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1A1E DUP5 DUP4 PUSH1 0xE0 ADD MLOAD PUSH2 0x1E78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 DUP6 DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xFA DUP2 JUMP JUMPDEST PUSH2 0x1B43 PUSH2 0x1FB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B61 PUSH2 0x14A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2589 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1DE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1DFB DUP5 PUSH2 0x1FA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E26 PUSH1 0x64 PUSH2 0x1E18 PUSH1 0xFA DUP8 PUSH2 0x2082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2108 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E3F PUSH2 0x16D DUP4 PUSH2 0x2108 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E57 PUSH1 0x18 DUP4 PUSH2 0x2108 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E6C DUP5 DUP3 PUSH2 0x2082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1EF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F9D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2191 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 DUP3 TIMESTAMP SUB DUP2 PUSH2 0x1FB1 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x207C DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2191 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2095 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x20A6 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x20FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2600 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x217F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2188 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x21F3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2280 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x227B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x227A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2648 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x228F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2298 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x22F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25AF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22FC DUP6 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0x236E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23BE JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x239B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2420 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2435 DUP3 DUP3 DUP7 PUSH2 0x2454 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2464 JUMPI DUP3 SWAP1 POP PUSH2 0x2519 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2477 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24DE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24C3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x250B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x7420756E7374616B6520696E20636F6F PUSH13 0x646F776E20706572696F644F77 PUSH15 0x61626C653A206E6577206F776E6572 KECCAK256 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C636C6169 PUSH14 0x526577617264733A20496E737566 PUSH7 0x696369656E7420 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH3 0x616C61 PUSH15 0x6365536166654D6174683A206D756C PUSH21 0x69706C69636174696F6E206F766572666C6F777769 PUSH21 0x68647261773A20496E73756666696369656E742063 PUSH16 0x6E74726163742062616C616E63655361 PUSH7 0x6545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A264697066735822122022886FF4 POP 0x5C EXP 0x5C 0xE2 BYTE 0x27 0x4A JUMPI DELEGATECALL SELFBALANCE EXTCODECOPY KECCAK256 DUP1 BALANCE PUSH24 0xC64B98C02BFBF4F3E00F793664736F6C6343000705003300 ",
							"sourceMap": "10791:8384:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14768:867;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12157:1282;;;;;;;;;;;;;:::i;:::-;;15643:902;;;;;;;;;;;;;:::i;:::-;;11487:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10983:28;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10137:148;;;;;;;;;;;;;:::i;:::-;;17813:596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17706:96;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9827:87;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;16555:1141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13449:1311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11448:32;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11127:33;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10440:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11082:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;14768:867;14838:1;14829:6;:10;14821:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14883:21;;:::i;:::-;14907:10;:22;14918:10;14907:22;;;;;;;;;;;;;;;14883:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14965:1;14948:7;:14;;;:18;14940:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15009:7;:14;;;14999:6;:24;;14991:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15095:15;15065:7;:27;;:45;;;;;15180:75;15197:7;:27;;;15227:26;15246:6;15227:7;:14;;;:18;;:26;;;;:::i;:::-;15180:16;:75::i;:::-;15163:7;:14;;:92;;;;;15290:33;15316:6;15290:7;:21;;;:25;;:33;;;;:::i;:::-;15266:7;:21;;:57;;;;;15351:26;15370:6;15351:7;:14;;;:18;;:26;;;;:::i;:::-;15334:7;:14;;:43;;;;;15410:29;15432:6;15410:17;;:21;;:29;;;;:::i;:::-;15390:17;:49;;;;15477:7;15452:10;:22;15463:10;15452:22;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15551:10;15543:44;;;15563:6;15571:15;15543:44;;;;;;;;;;;;;;;;;;;;;;;;14768:867;;:::o;12157:1282::-;12201:21;;:::i;:::-;12225:10;:22;12236:10;12225:22;;;;;;;;;;;;;;;12201:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12266:7;:17;;;12258:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12325:21;12390:1;12366:7;:21;;;:25;12365:62;;;;;12425:1;12397:7;:24;;;:29;12365:62;12361:481;;;12460:81;12479:61;12496:7;:27;;;12525:7;:14;;;12479:16;:61::i;:::-;12460:7;:14;;;:18;;:81;;;;:::i;:::-;12444:97;;12361:481;;;12590:1;12563:7;:24;;;:28;12559:283;;;12624:78;12643:58;12660:7;:24;;;12686:7;:14;;;12643:16;:58::i;:::-;12624:7;:14;;;:18;;:78;;;;:::i;:::-;12608:94;;12559:283;;;12751:79;12770:59;12787:7;:25;;;12814:7;:14;;;12770:16;:59::i;:::-;12751:7;:14;;;:18;;:79;;;;:::i;:::-;12735:95;;12559:283;12361:481;12881:15;12854:7;:24;;:42;;;;;12974:13;12931:14;;;;;;;;;;;:24;;;12964:4;12931:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:56;;12909:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13071:54;13099:10;13111:13;13071:14;;;;;;;;;;;:27;;;;:54;;;;;:::i;:::-;13155:1;13138:7;:14;;:18;;;;;13192:41;13219:13;13192:7;:22;;;:26;;:41;;;;:::i;:::-;13167:7;:22;;:66;;;;;13269:7;13244:10;:22;13255:10;13244:22;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13348:10;13335:56;;;13360:13;13375:15;13335:56;;;;;;;;;;;;;;;;;;;;;;;;12157:1282;;:::o;15643:902::-;15683:21;;:::i;:::-;15707:10;:22;15718:10;15707:22;;;;;;;;;;;;;;;15683:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15740:21;15764:7;:21;;;15740:45;;15820:1;15804:13;:17;15796:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15858:24;15885:50;15907:7;:27;;;15885:21;:50::i;:::-;15858:77;;16039:3;16019:16;:23;;16011:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16158:13;16115:14;;;;;;;;;;;:24;;;16148:4;16115:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:56;;16093:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16251:54;16279:10;16291:13;16251:14;;;;;;;;;;;:27;;;;:54;;;;;:::i;:::-;16342:1;16318:7;:21;;:25;;;;;16379:7;16354:10;:22;16365:10;16354:22;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16454:10;16445:52;;;16466:13;16481:15;16445:52;;;;;;;;;;;;;;;;;;;;;;;;15643:902;;;:::o;11487:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10983:28::-;;;;;;;;;;;;;:::o;10137:148::-;10058:12;:10;:12::i;:::-;10047:23;;:7;:5;:7::i;:::-;:23;;;10039:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10244:1:::1;10207:40;;10228:6;::::0;::::1;;;;;;;;10207:40;;;;;;;;;;;;10275:1;10258:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;10137:148::o:0;17813:596::-;17873:7;17893:21;;:::i;:::-;17917:10;:18;17928:6;17917:18;;;;;;;;;;;;;;;17893:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17977:1;17953:7;:21;;;:25;17952:62;;;;;18012:1;17984:7;:24;;;:29;17952:62;17948:454;;;18038:81;18057:61;18074:7;:27;;;18103:7;:14;;;18057:16;:61::i;:::-;18038:7;:14;;;:18;;:81;;;;:::i;:::-;18031:88;;;;;17948:454;18168:1;18141:7;:24;;;:28;18137:265;;;18193:78;18212:58;18229:7;:24;;;18255:7;:14;;;18212:16;:58::i;:::-;18193:7;:14;;;:18;;:78;;;;:::i;:::-;18186:85;;;;;18137:265;18311:79;18330:59;18347:7;:25;;;18374:7;:14;;;18330:16;:59::i;:::-;18311:7;:14;;;:18;;:79;;;;:::i;:::-;18304:86;;;17813:596;;;;:::o;17706:96::-;17753:7;17780;:14;;;;17773:21;;17706:96;:::o;9827:87::-;9873:7;9900:6;;;;;;;;;;;9893:13;;9827:87;:::o;16555:1141::-;16654:20;16689:22;16726:27;16768:14;16797:21;16833:22;16883;;:::i;:::-;16908:10;:19;16919:7;16908:19;;;;;;;;;;;;;;;16883:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16953:8;:15;;;16938:30;;16996:49;17018:8;:26;;;16996:21;:49::i;:::-;16979:66;;17078:8;:28;;;17056:50;;17147:1;17122:8;:22;;;:26;17121:64;;;;;17183:1;17154:8;:25;;;:30;17121:64;17117:472;;;17211:84;17231:63;17248:8;:28;;;17278:8;:15;;;17231:16;:63::i;:::-;17211:8;:15;;;:19;;:84;;;;:::i;:::-;17202:93;;17117:472;;;17345:1;17317:8;:25;;;:29;17313:276;;;17372:81;17392:60;17409:8;:25;;;17436:8;:15;;;17392:16;:60::i;:::-;17372:8;:15;;;:19;;:81;;;;:::i;:::-;17363:90;;17313:276;;;17495:82;17515:61;17532:8;:26;;;17560:8;:15;;;17515:16;:61::i;:::-;17495:8;:15;;;:19;;:82;;;;:::i;:::-;17486:91;;17313:276;17117:472;17615:8;:22;;;17599:38;;17665:8;:23;;;17648:40;;16555:1141;;;;;;;;:::o;13449:1311::-;13517:1;13508:6;:10;13500:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13560:27;13590:14;;;;;;;;;;;:24;;;13615:10;13590:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13560:66;;13668:6;13645:19;:29;;13637:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13724:21;;:::i;:::-;13748:10;:22;13759:10;13748:22;;;;;;;;;;;;;;;13724:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13786:7;:17;;;13781:230;;13840:4;13820:7;:17;;:24;;;;;;;;;;;13859:7;13872:10;13859:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13984:15;13956:7;:25;;:43;;;;;13781:230;14025:21;14049:7;:14;;;14025:38;;14094:1;14078:13;:17;14074:289;;;14177:58;14194:7;:25;;;14221:13;14177:16;:58::i;:::-;14160:7;:14;;:75;;;;;14336:15;14308:7;:25;;:43;;;;;14074:289;14375:66;14407:10;14427:4;14434:6;14375:14;;;;;;;;;;;:31;;;;:66;;;;;;:::i;:::-;14474:29;14496:6;14474:17;;:21;;:29;;;;:::i;:::-;14454:17;:49;;;;14572:26;14591:6;14572:7;:14;;;:18;;:26;;;;:::i;:::-;14555:7;:14;;:43;;;;;14634:7;14609:10;:22;14620:10;14609:22;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14706:10;14700:52;;;14718:6;14726:7;:25;;;14700:52;;;;;;;;;;;;;;;;;;;;;;;;13449:1311;;;;:::o;11448:32::-;;;;:::o;11127:33::-;11157:3;11127:33;:::o;10440:244::-;10058:12;:10;:12::i;:::-;10047:23;;:7;:5;:7::i;:::-;:23;;;10039:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10549:1:::1;10529:22;;:8;:22;;;;10521:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10639:8;10610:38;;10631:6;::::0;::::1;;;;;;;;10610:38;;;;;;;;;;;;10668:8;10659:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;10440:244:::0;:::o;11082:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1901:158::-;1959:7;1992:1;1987;:6;;1979:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:1;2046;:5;2039:12;;1901:158;;;;:::o;18479:397::-;18563:14;18590:22;18615:32;18637:9;18615:21;:32::i;:::-;18590:57;;18660:20;18683:26;18705:3;18684:15;11157:3;18684:6;:10;;:15;;;;:::i;:::-;18683:21;;:26;;;;:::i;:::-;18660:49;;18720:19;18742:21;18759:3;18742:12;:16;;:21;;;;:::i;:::-;18720:43;;18774:20;18797:19;18813:2;18797:11;:15;;:19;;;;:::i;:::-;18774:42;;18836:32;18853:14;18836:12;:16;;:32;;;;:::i;:::-;18829:39;;;;;;18479:397;;;;:::o;1712:179::-;1770:7;1790:9;1806:1;1802;:5;1790:17;;1831:1;1826;:6;;1818:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:1;1875:8;;;1712:179;;;;:::o;7111:177::-;7194:86;7214:5;7244:23;;;7269:2;7273:5;7221:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7194:19;:86::i;:::-;7111:177;;;:::o;18971:201::-;19044:7;19157;19144:9;19126:15;:27;19125:39;;;;;;19118:46;;18971:201;;;:::o;8969:106::-;9022:15;9057:10;9050:17;;8969:106;:::o;7296:205::-;7397:96;7417:5;7447:27;;;7476:4;7482:2;7486:5;7424:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7397:19;:96::i;:::-;7296:205;;;;:::o;2067:220::-;2125:7;2154:1;2149;:6;2145:20;;;2164:1;2157:8;;;;2145:20;2176:9;2192:1;2188;:5;2176:17;;2221:1;2216;2212;:5;;;;;;:10;2204:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:1;2271:8;;;2067:220;;;;;:::o;2297:153::-;2355:7;2387:1;2383;:5;2375:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:1;2437;:5;;;;;;2430:12;;2297:153;;;;:::o;8502:425::-;8590:23;8616:69;8644:4;8616:69;;;;;;;;;;;;;;;;;8624:5;8616:27;;;;:69;;;;;:::i;:::-;8590:95;;8720:1;8700:10;:17;:21;8696:224;;;8842:10;8831:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8823:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8696:224;8502:425;;;:::o;4007:195::-;4110:12;4142:52;4164:6;4172:4;4178:1;4181:12;4142:21;:52::i;:::-;4135:59;;4007:195;;;;;:::o;4448:530::-;4575:12;4633:5;4608:21;:30;;4600:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4700:18;4711:6;4700:10;:18::i;:::-;4692:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4826:12;4840:23;4867:6;:11;;4887:5;4895:4;4867:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:75;;;;4918:52;4936:7;4945:10;4957:12;4918:17;:52::i;:::-;4911:59;;;;4448:530;;;;;;:::o;3171:236::-;3231:4;3253:12;3364:7;3352:20;3344:28;;3398:1;3391:4;:8;3384:15;;;3171:236;;;:::o;6268:742::-;6383:12;6412:7;6408:595;;;6443:10;6436:17;;;;6408:595;6577:1;6557:10;:17;:21;6553:439;;;6820:10;6814:17;6881:15;6868:10;6864:2;6860:19;6853:44;6768:148;6963:12;6956:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6268:742;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1979000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "175",
								"APY()": "249",
								"ChampsContract()": "1092",
								"claimRewards()": "infinite",
								"earnedRewards(address)": "infinite",
								"myStakes(address)": "infinite",
								"owner()": "1100",
								"renounceOwnership()": "24396",
								"stake(uint256)": "infinite",
								"stakerInfo(address)": "7072",
								"stakers(uint256)": "2099",
								"totalChampsStaked()": "1027",
								"totalStakers()": "1044",
								"transferOwnership(address)": "infinite",
								"unstake(uint256)": "infinite",
								"withdraw()": "infinite"
							},
							"internal": {
								"calculateRewards(uint256,uint256)": "infinite",
								"getHoursFromTimestamp(uint256)": "58"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10791,
									"end": 19175,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9618,
									"end": 9635,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9638,
									"end": 9650,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 9638,
									"end": 9648,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 9638,
									"end": 9648,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9638,
									"end": 9648,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9638,
									"end": 9650,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9638,
									"end": 9650,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9638,
									"end": 9650,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 9638,
									"end": 9650,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 9638,
									"end": 9650,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9618,
									"end": 9650,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9618,
									"end": 9650,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9670,
									"end": 9679,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9661,
									"end": 9667,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9661,
									"end": 9679,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9728,
									"end": 9737,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9724,
									"end": 9725,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9695,
									"end": 9738,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 9591,
									"end": 9746,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11986,
									"end": 11987,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11944,
									"end": 11988,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11944,
									"end": 11988,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11952,
									"end": 11973,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11944,
									"end": 11988,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11944,
									"end": 11988,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11944,
									"end": 11988,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 11944,
									"end": 11988,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "PUSH",
									"source": 0,
									"value": "43616E6E6F742062652061646472657373207A65726F00000000000000000000"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 11936,
									"end": 12015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12043,
									"end": 12064,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12040,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12026,
									"end": 12040,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12026,
									"end": 12064,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 12072,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8969,
									"end": 9075,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8969,
									"end": 9075,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9022,
									"end": 9037,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9057,
									"end": 9067,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 9050,
									"end": 9067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9050,
									"end": 9067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8969,
									"end": 9075,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8969,
									"end": 9075,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10791,
									"end": 19175,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022886ff4505c0a5ce21a274a57f4473c20803177c64b98c02bfbf4f3e00f793664736f6c63430007050033",
									".code": [
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "86989038"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "EB7FB177"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "EB7FB177"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "EF8BD305"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "FD5E6DD1"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "86989038"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "9BE730DA"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "4E745F1F"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "4E745F1F"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "66837C7E"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "82D366D0"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "2E17DE78"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "372500AB"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 19175,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14838,
											"end": 14839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14829,
											"end": 14835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14829,
											"end": 14839,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "556E7374616B6520616D6F756E74206D757374206265203E2030000000000000"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14821,
											"end": 14870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14883,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14883,
											"end": 14904,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14883,
											"end": 14904,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14883,
											"end": 14904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14918,
											"end": 14928,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14883,
											"end": 14929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14965,
											"end": 14966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14948,
											"end": 14955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14962,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14948,
											"end": 14962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F205374616B65730000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14940,
											"end": 14980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15023,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15009,
											"end": 15023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "PUSH",
											"source": 0,
											"value": "556E7374616B6520616D74203E207374616B656420616D740000000000000000"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14991,
											"end": 15052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15110,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15065,
											"end": 15092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 15197,
											"end": 15204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15197,
											"end": 15224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15197,
											"end": 15224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15197,
											"end": 15224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 15246,
											"end": 15252,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15234,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15241,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15227,
											"end": 15241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 15227,
											"end": 15245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15253,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15227,
											"end": 15253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15227,
											"end": 15253,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 15227,
											"end": 15253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15180,
											"end": 15255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15180,
											"end": 15255,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 15180,
											"end": 15255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15177,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15163,
											"end": 15177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15316,
											"end": 15322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15311,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 15290,
											"end": 15311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15290,
											"end": 15315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15266,
											"end": 15273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15266,
											"end": 15323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15266,
											"end": 15323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15266,
											"end": 15323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15266,
											"end": 15323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15266,
											"end": 15323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15370,
											"end": 15376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15365,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15351,
											"end": 15365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15334,
											"end": 15341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15334,
											"end": 15348,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15334,
											"end": 15348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15334,
											"end": 15377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15334,
											"end": 15377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15334,
											"end": 15377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15334,
											"end": 15377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15334,
											"end": 15377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15410,
											"end": 15439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15432,
											"end": 15438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15410,
											"end": 15427,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15410,
											"end": 15427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15410,
											"end": 15431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 15410,
											"end": 15431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15410,
											"end": 15439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15410,
											"end": 15439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15410,
											"end": 15439,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15410,
											"end": 15439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15410,
											"end": 15439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15410,
											"end": 15439,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15410,
											"end": 15439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15390,
											"end": 15407,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15390,
											"end": 15439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15390,
											"end": 15439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15390,
											"end": 15439,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15390,
											"end": 15439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15477,
											"end": 15484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15463,
											"end": 15473,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15452,
											"end": 15474,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15551,
											"end": 15561,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "PUSH",
											"source": 0,
											"value": "F960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280"
										},
										{
											"begin": 15563,
											"end": 15569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15571,
											"end": 15586,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15587,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14768,
											"end": 15635,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12201,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12201,
											"end": 12222,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12201,
											"end": 12222,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12201,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12236,
											"end": 12246,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12225,
											"end": 12247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12266,
											"end": 12283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12266,
											"end": 12283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12266,
											"end": 12283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F20726577617264733A206E6F742061207374616B65720000000000000000"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12258,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12390,
											"end": 12391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12387,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 12366,
											"end": 12387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12366,
											"end": 12391,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12427,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12365,
											"end": 12427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12397,
											"end": 12404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12421,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12397,
											"end": 12421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12426,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12427,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12365,
											"end": 12427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12361,
											"end": 12842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12361,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12361,
											"end": 12842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12479,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12496,
											"end": 12503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12496,
											"end": 12523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12525,
											"end": 12532,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12525,
											"end": 12539,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12525,
											"end": 12539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12525,
											"end": 12539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12479,
											"end": 12540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12479,
											"end": 12540,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12479,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12474,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12460,
											"end": 12474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12460,
											"end": 12478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12460,
											"end": 12541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12460,
											"end": 12541,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12460,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12444,
											"end": 12541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12444,
											"end": 12541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12361,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12361,
											"end": 12842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12361,
											"end": 12842,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12361,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12563,
											"end": 12570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12563,
											"end": 12587,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12563,
											"end": 12587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12563,
											"end": 12587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12563,
											"end": 12591,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12559,
											"end": 12842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12643,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 12660,
											"end": 12667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12684,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12660,
											"end": 12684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12660,
											"end": 12684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12693,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12700,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12686,
											"end": 12700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12643,
											"end": 12659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12643,
											"end": 12701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12643,
											"end": 12701,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 12643,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12638,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12624,
											"end": 12638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12624,
											"end": 12702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12624,
											"end": 12702,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12624,
											"end": 12702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12608,
											"end": 12702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12608,
											"end": 12702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12559,
											"end": 12842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12842,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12559,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 12830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 12770,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12787,
											"end": 12794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12787,
											"end": 12812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12787,
											"end": 12812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12787,
											"end": 12812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12814,
											"end": 12821,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12814,
											"end": 12828,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12814,
											"end": 12828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12814,
											"end": 12828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12770,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12770,
											"end": 12829,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12770,
											"end": 12829,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12770,
											"end": 12829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 12758,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 12765,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12751,
											"end": 12765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 12765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 12830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 12830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 12830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12751,
											"end": 12830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 12830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12751,
											"end": 12830,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 12751,
											"end": 12830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12735,
											"end": 12830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12735,
											"end": 12830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12842,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12559,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12361,
											"end": 12842,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12361,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12896,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12878,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12854,
											"end": 12878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 12987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12931,
											"end": 12945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12955,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12931,
											"end": 12955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12955,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 12964,
											"end": 12968,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12987,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH data",
											"source": 0,
											"value": "7DD237E5E91540A0B6E997B7F12D98CCF19C520E7525780536278ACE211402FF"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12909,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13099,
											"end": 13109,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13111,
											"end": 13124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13071,
											"end": 13098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13071,
											"end": 13098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13155,
											"end": 13156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13138,
											"end": 13145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13138,
											"end": 13152,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13138,
											"end": 13152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13138,
											"end": 13156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13138,
											"end": 13156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13138,
											"end": 13156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13138,
											"end": 13156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13138,
											"end": 13156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13192,
											"end": 13233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13219,
											"end": 13232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13192,
											"end": 13199,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13192,
											"end": 13214,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13192,
											"end": 13214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13192,
											"end": 13214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13192,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13192,
											"end": 13218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13192,
											"end": 13233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13192,
											"end": 13233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13192,
											"end": 13233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13192,
											"end": 13233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13192,
											"end": 13233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13192,
											"end": 13233,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13192,
											"end": 13233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13189,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13167,
											"end": 13189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13269,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13255,
											"end": 13265,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13266,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13244,
											"end": 13276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13358,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "674A8930D4166CE2352C3DC1E9FF633595DB479F71F3741270A0A73A52CB7B0F"
										},
										{
											"begin": 13360,
											"end": 13373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13390,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13391,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 13439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15683,
											"end": 15704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15683,
											"end": 15704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15683,
											"end": 15704,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15683,
											"end": 15704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15718,
											"end": 15728,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15707,
											"end": 15729,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15683,
											"end": 15729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15764,
											"end": 15771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15785,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 15764,
											"end": 15785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15820,
											"end": 15821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15804,
											"end": 15817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15804,
											"end": 15821,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "PUSH",
											"source": 0,
											"value": "556E7374616B6520616D6F756E74206973203000000000000000000000000000"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15796,
											"end": 15845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15858,
											"end": 15882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15885,
											"end": 15935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15907,
											"end": 15914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15907,
											"end": 15934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15885,
											"end": 15906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15885,
											"end": 15935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15885,
											"end": 15935,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15885,
											"end": 15935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15858,
											"end": 15935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15858,
											"end": 15935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16042,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16019,
											"end": 16035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16019,
											"end": 16042,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16019,
											"end": 16042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH data",
											"source": 0,
											"value": "16064F896419BD3D07D09364BBD3ACD13403E7A150A445F4EEA16EAA67BC36C4"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16011,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16115,
											"end": 16139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16139,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 16148,
											"end": 16152,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16171,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16171,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH data",
											"source": 0,
											"value": "BFCA188C10CCBCD10108D0D17745E5C7C1A1E3F9FCCB2C999DACBD65EEAFACAE"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 16093,
											"end": 16238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16279,
											"end": 16289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16291,
											"end": 16304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16251,
											"end": 16265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16278,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16251,
											"end": 16278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 16251,
											"end": 16278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16251,
											"end": 16305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16251,
											"end": 16305,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16251,
											"end": 16305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16342,
											"end": 16343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16318,
											"end": 16325,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16318,
											"end": 16339,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 16318,
											"end": 16339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16318,
											"end": 16343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16318,
											"end": 16343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16318,
											"end": 16343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16318,
											"end": 16343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16318,
											"end": 16343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16379,
											"end": 16386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16365,
											"end": 16375,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16354,
											"end": 16376,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16464,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 16466,
											"end": 16479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16481,
											"end": 16496,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16497,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15643,
											"end": 16545,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11531,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10058,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10058,
											"end": 10070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10058,
											"end": 10070,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10058,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10047,
											"end": 10070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10047,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 10047,
											"end": 10054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10047,
											"end": 10054,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10047,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10047,
											"end": 10070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10070,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10244,
											"end": 10245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10247,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10275,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10258,
											"end": 10264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10258,
											"end": 10277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10137,
											"end": 10285,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 17880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17893,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 17893,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17893,
											"end": 17914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17893,
											"end": 17914,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 17893,
											"end": 17914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17928,
											"end": 17934,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17977,
											"end": 17978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17953,
											"end": 17960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17974,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 17953,
											"end": 17974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17978,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 18014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 18014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 18014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17952,
											"end": 18014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 18014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18012,
											"end": 18013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17984,
											"end": 17991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17984,
											"end": 18008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17984,
											"end": 18013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 18014,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17952,
											"end": 18014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17948,
											"end": 18402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17948,
											"end": 18402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17948,
											"end": 18402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18057,
											"end": 18118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18074,
											"end": 18081,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18074,
											"end": 18101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18074,
											"end": 18101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18074,
											"end": 18101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18103,
											"end": 18110,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18103,
											"end": 18117,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18103,
											"end": 18117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18103,
											"end": 18117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18057,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18057,
											"end": 18118,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18057,
											"end": 18118,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18057,
											"end": 18118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18052,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18038,
											"end": 18052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18038,
											"end": 18119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18038,
											"end": 18119,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18038,
											"end": 18119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18031,
											"end": 18119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18031,
											"end": 18119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18031,
											"end": 18119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18031,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18031,
											"end": 18119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17948,
											"end": 18402,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17948,
											"end": 18402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18141,
											"end": 18148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18165,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18141,
											"end": 18165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18169,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18137,
											"end": 18402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18137,
											"end": 18402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 18137,
											"end": 18402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 18212,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 18229,
											"end": 18236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18253,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18229,
											"end": 18253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18255,
											"end": 18262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18255,
											"end": 18269,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18255,
											"end": 18269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18255,
											"end": 18269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18212,
											"end": 18228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18212,
											"end": 18270,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18212,
											"end": 18270,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 18212,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18207,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18193,
											"end": 18207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18193,
											"end": 18211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18193,
											"end": 18271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18193,
											"end": 18271,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 18193,
											"end": 18271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18186,
											"end": 18271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18186,
											"end": 18271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18186,
											"end": 18271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18186,
											"end": 18271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18186,
											"end": 18271,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18137,
											"end": 18402,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 18137,
											"end": 18402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18311,
											"end": 18390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 18330,
											"end": 18389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 18347,
											"end": 18354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18347,
											"end": 18372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18347,
											"end": 18372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18347,
											"end": 18372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18388,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18374,
											"end": 18388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18330,
											"end": 18389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18330,
											"end": 18389,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 18330,
											"end": 18389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18311,
											"end": 18318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18311,
											"end": 18325,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18311,
											"end": 18325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18311,
											"end": 18325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18311,
											"end": 18329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18311,
											"end": 18329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18311,
											"end": 18390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18311,
											"end": 18390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18311,
											"end": 18390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18311,
											"end": 18390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18311,
											"end": 18390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18311,
											"end": 18390,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 18311,
											"end": 18390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18304,
											"end": 18390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18304,
											"end": 18390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18304,
											"end": 18390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 18409,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17753,
											"end": 17760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17780,
											"end": 17787,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17780,
											"end": 17794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17780,
											"end": 17794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17780,
											"end": 17794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17780,
											"end": 17794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17773,
											"end": 17794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17773,
											"end": 17794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17802,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9873,
											"end": 9880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9914,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16654,
											"end": 16674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16689,
											"end": 16711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16726,
											"end": 16753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16768,
											"end": 16782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16797,
											"end": 16818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16833,
											"end": 16855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 16883,
											"end": 16905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16883,
											"end": 16905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16883,
											"end": 16905,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 16883,
											"end": 16905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16919,
											"end": 16926,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16883,
											"end": 16927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16953,
											"end": 16961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16953,
											"end": 16968,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16953,
											"end": 16968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16953,
											"end": 16968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16938,
											"end": 16968,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 16938,
											"end": 16968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16996,
											"end": 17045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 17018,
											"end": 17026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17018,
											"end": 17044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17018,
											"end": 17044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17018,
											"end": 17044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16996,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16996,
											"end": 17045,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16996,
											"end": 17045,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 16996,
											"end": 17045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16979,
											"end": 17045,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 16979,
											"end": 17045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17078,
											"end": 17086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17078,
											"end": 17106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17078,
											"end": 17106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17078,
											"end": 17106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17056,
											"end": 17106,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17056,
											"end": 17106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17147,
											"end": 17148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17122,
											"end": 17130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17122,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 17122,
											"end": 17144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17122,
											"end": 17144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17122,
											"end": 17148,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17121,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17154,
											"end": 17162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17179,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17154,
											"end": 17179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17185,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17121,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 17117,
											"end": 17589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17231,
											"end": 17294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17248,
											"end": 17276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17278,
											"end": 17286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17278,
											"end": 17293,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17278,
											"end": 17293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17278,
											"end": 17293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17231,
											"end": 17247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17231,
											"end": 17294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17231,
											"end": 17294,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 17231,
											"end": 17294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17211,
											"end": 17230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17295,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17211,
											"end": 17295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17211,
											"end": 17295,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17211,
											"end": 17295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17202,
											"end": 17295,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17202,
											"end": 17295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 17117,
											"end": 17589,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17589,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 17117,
											"end": 17589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17317,
											"end": 17325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17342,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17317,
											"end": 17342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17313,
											"end": 17589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17313,
											"end": 17589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17313,
											"end": 17589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 17392,
											"end": 17452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17409,
											"end": 17417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17409,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17409,
											"end": 17434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17409,
											"end": 17434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17436,
											"end": 17444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17436,
											"end": 17451,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17436,
											"end": 17451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17436,
											"end": 17451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17392,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17392,
											"end": 17452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17392,
											"end": 17452,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17392,
											"end": 17452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17387,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17372,
											"end": 17387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17372,
											"end": 17391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17372,
											"end": 17453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17372,
											"end": 17453,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 17372,
											"end": 17453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17363,
											"end": 17453,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17363,
											"end": 17453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17313,
											"end": 17589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17313,
											"end": 17589,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17313,
											"end": 17589,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17313,
											"end": 17589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17515,
											"end": 17576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 17532,
											"end": 17540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17532,
											"end": 17558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17532,
											"end": 17558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17532,
											"end": 17558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17560,
											"end": 17568,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17560,
											"end": 17575,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17560,
											"end": 17575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17560,
											"end": 17575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17515,
											"end": 17531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17515,
											"end": 17576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17515,
											"end": 17576,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 17515,
											"end": 17576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17510,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17495,
											"end": 17510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17495,
											"end": 17514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17495,
											"end": 17577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17495,
											"end": 17577,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17495,
											"end": 17577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17486,
											"end": 17577,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17486,
											"end": 17577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17313,
											"end": 17589,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17313,
											"end": 17589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17589,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 17117,
											"end": 17589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17637,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 17615,
											"end": 17637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17599,
											"end": 17637,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17599,
											"end": 17637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 17673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 17688,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 17665,
											"end": 17688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 17688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17648,
											"end": 17688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17648,
											"end": 17688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 16555,
											"end": 17696,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13517,
											"end": 13518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13508,
											"end": 13514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13508,
											"end": 13518,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "5374616B6520616D6F756E74206D757374206265203E20300000000000000000"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13500,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13560,
											"end": 13587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13590,
											"end": 13604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13590,
											"end": 13614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13614,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 13615,
											"end": 13625,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13560,
											"end": 13626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13560,
											"end": 13626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13668,
											"end": 13674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13645,
											"end": 13664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13645,
											"end": 13674,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13645,
											"end": 13674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "PUSH",
											"source": 0,
											"value": "7374616B653A20496E73756666696369656E7420757365722062616C616E6365"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 13637,
											"end": 13711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13724,
											"end": 13745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13724,
											"end": 13745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13724,
											"end": 13745,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13724,
											"end": 13745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13759,
											"end": 13769,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13748,
											"end": 13770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13786,
											"end": 13793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13786,
											"end": 13803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13786,
											"end": 13803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13786,
											"end": 13803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13781,
											"end": 14011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 13781,
											"end": 14011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13844,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13820,
											"end": 13827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13820,
											"end": 13837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13866,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13872,
											"end": 13882,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13984,
											"end": 13999,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 13956,
											"end": 13963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13956,
											"end": 13981,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13956,
											"end": 13981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13956,
											"end": 13999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13956,
											"end": 13999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13956,
											"end": 13999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13956,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13956,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13781,
											"end": 14011,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 13781,
											"end": 14011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14025,
											"end": 14046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14049,
											"end": 14056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14063,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14049,
											"end": 14063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14025,
											"end": 14063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14025,
											"end": 14063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14078,
											"end": 14091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14095,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14074,
											"end": 14363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14074,
											"end": 14363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14074,
											"end": 14363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14177,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14194,
											"end": 14201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14194,
											"end": 14219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14221,
											"end": 14234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14177,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14177,
											"end": 14235,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14177,
											"end": 14235,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14177,
											"end": 14235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14174,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14160,
											"end": 14174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14351,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14308,
											"end": 14333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14074,
											"end": 14363,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14074,
											"end": 14363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14407,
											"end": 14417,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14431,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 14440,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14375,
											"end": 14406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 14375,
											"end": 14406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14441,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14441,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14441,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14375,
											"end": 14441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14375,
											"end": 14441,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14375,
											"end": 14441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14496,
											"end": 14502,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14491,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14474,
											"end": 14491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14474,
											"end": 14495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14474,
											"end": 14503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14471,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14454,
											"end": 14503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14503,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 14591,
											"end": 14597,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14586,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14572,
											"end": 14586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14572,
											"end": 14590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14572,
											"end": 14598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14572,
											"end": 14598,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 14572,
											"end": 14598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14569,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14555,
											"end": 14569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14620,
											"end": 14630,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14609,
											"end": 14631,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14716,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6"
										},
										{
											"begin": 14718,
											"end": 14724,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14726,
											"end": 14733,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14726,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14726,
											"end": 14751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14726,
											"end": 14751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 14752,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 14760,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11448,
											"end": 11480,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11157,
											"end": 11160,
											"name": "PUSH",
											"source": 0,
											"value": "FA"
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11127,
											"end": 11160,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 10058,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10058,
											"end": 10070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10058,
											"end": 10070,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 10058,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10047,
											"end": 10070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10047,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 10047,
											"end": 10054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10047,
											"end": 10054,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10047,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10047,
											"end": 10070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10070,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 10039,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10549,
											"end": 10550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10529,
											"end": 10551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10529,
											"end": 10551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10529,
											"end": 10551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10521,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10639,
											"end": 10647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 10665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10684,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1901,
											"end": 2059,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1901,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1979,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 2059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 2059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 2059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 2059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 2059,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18479,
											"end": 18876,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18479,
											"end": 18876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18563,
											"end": 18577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18590,
											"end": 18612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18615,
											"end": 18647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18637,
											"end": 18646,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18615,
											"end": 18636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 18615,
											"end": 18647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18615,
											"end": 18647,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18615,
											"end": 18647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18590,
											"end": 18647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18590,
											"end": 18647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18660,
											"end": 18680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18683,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 18705,
											"end": 18708,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18684,
											"end": 18699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11157,
											"end": 11160,
											"name": "PUSH",
											"source": 0,
											"value": "FA"
										},
										{
											"begin": 18684,
											"end": 18690,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18684,
											"end": 18694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 18684,
											"end": 18694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18684,
											"end": 18699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18684,
											"end": 18699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18684,
											"end": 18699,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18684,
											"end": 18699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18684,
											"end": 18699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18684,
											"end": 18699,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 18684,
											"end": 18699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18683,
											"end": 18709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18683,
											"end": 18709,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 18683,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18660,
											"end": 18709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18660,
											"end": 18709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18720,
											"end": 18739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18742,
											"end": 18763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 18759,
											"end": 18762,
											"name": "PUSH",
											"source": 0,
											"value": "16D"
										},
										{
											"begin": 18742,
											"end": 18754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18742,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 18742,
											"end": 18758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18742,
											"end": 18763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18742,
											"end": 18763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18742,
											"end": 18763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18742,
											"end": 18763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18742,
											"end": 18763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18742,
											"end": 18763,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 18742,
											"end": 18763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18720,
											"end": 18763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18720,
											"end": 18763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18774,
											"end": 18794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18797,
											"end": 18816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 18813,
											"end": 18815,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 18797,
											"end": 18808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 18797,
											"end": 18812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18816,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18797,
											"end": 18816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18816,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18797,
											"end": 18816,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 18797,
											"end": 18816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18774,
											"end": 18816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18774,
											"end": 18816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18836,
											"end": 18868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 18853,
											"end": 18867,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18836,
											"end": 18848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18836,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 18836,
											"end": 18852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18836,
											"end": 18868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18836,
											"end": 18868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18836,
											"end": 18868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18836,
											"end": 18868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18836,
											"end": 18868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18836,
											"end": 18868,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 18836,
											"end": 18868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18829,
											"end": 18868,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18829,
											"end": 18868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18829,
											"end": 18868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18829,
											"end": 18868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18829,
											"end": 18868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18829,
											"end": 18868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18876,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18876,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1712,
											"end": 1891,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1712,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1770,
											"end": 1777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1803,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1818,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1891,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7111,
											"end": 7288,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7111,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7194,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 7214,
											"end": 7219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7267,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 7244,
											"end": 7267,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7244,
											"end": 7267,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7269,
											"end": 7271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7273,
											"end": 7278,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7194,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7194,
											"end": 7280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7194,
											"end": 7280,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 7194,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7288,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18971,
											"end": 19172,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 18971,
											"end": 19172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19044,
											"end": 19051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19157,
											"end": 19164,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 19144,
											"end": 19153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19141,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 19125,
											"end": 19164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19164,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19164,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 19125,
											"end": 19164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19164,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19118,
											"end": 19164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19118,
											"end": 19164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18971,
											"end": 19172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18971,
											"end": 19172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18971,
											"end": 19172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18971,
											"end": 19172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8969,
											"end": 9075,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8969,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9057,
											"end": 9067,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9050,
											"end": 9067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9050,
											"end": 9067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9075,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7296,
											"end": 7501,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7296,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 7417,
											"end": 7422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7474,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 7447,
											"end": 7474,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7447,
											"end": 7474,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7480,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7482,
											"end": 7484,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7486,
											"end": 7491,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7397,
											"end": 7493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7397,
											"end": 7493,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 7397,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7296,
											"end": 7501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7296,
											"end": 7501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7296,
											"end": 7501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7296,
											"end": 7501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7296,
											"end": 7501,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2067,
											"end": 2287,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2067,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2157,
											"end": 2165,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2193,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2222,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2287,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2067,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2287,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2287,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2297,
											"end": 2450,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2297,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2375,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2450,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2450,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8502,
											"end": 8927,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 8502,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8590,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8624,
											"end": 8629,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8616,
											"end": 8643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 8616,
											"end": 8643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8616,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8590,
											"end": 8685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8590,
											"end": 8685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8720,
											"end": 8721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8700,
											"end": 8710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 8717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 8721,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8696,
											"end": 8920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8696,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8696,
											"end": 8920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH data",
											"source": 0,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 8823,
											"end": 8908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8696,
											"end": 8920,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8696,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8927,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4007,
											"end": 4202,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4007,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4122,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4176,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4193,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4202,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4202,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4202,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4448,
											"end": 4978,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4448,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4587,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4633,
											"end": 4638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4629,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4638,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH data",
											"source": 0,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4600,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4711,
											"end": 4717,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4700,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4692,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4867,
											"end": 4873,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4895,
											"end": 4899,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 4936,
											"end": 4943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4945,
											"end": 4955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4957,
											"end": 4969,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4918,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4970,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4911,
											"end": 4970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4978,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4978,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4978,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3171,
											"end": 3407,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3171,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3407,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6268,
											"end": 7010,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6268,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6395,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6412,
											"end": 6419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 7003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6408,
											"end": 7003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6436,
											"end": 6453,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 7003,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6408,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6577,
											"end": 6578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6557,
											"end": 6567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6578,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6553,
											"end": 6992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6553,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6553,
											"end": 6992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6814,
											"end": 6831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6881,
											"end": 6896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6878,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6860,
											"end": 6879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6853,
											"end": 6897,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6916,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6768,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6963,
											"end": 6975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6976,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6268,
											"end": 7010,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6268,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6268,
											"end": 7010,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6268,
											"end": 7010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6268,
											"end": 7010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6268,
											"end": 7010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6268,
											"end": 7010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6268,
											"end": 7010,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"16064F896419BD3D07D09364BBD3ACD13403E7A150A445F4EEA16EAA67BC36C4": "43616e6e6f7420756e7374616b6520696e20636f6f6c646f776e20706572696f64",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"7DD237E5E91540A0B6E997B7F12D98CCF19C520E7525780536278ACE211402FF": "636c61696d526577617264733a20496e73756666696369656e7420636f6e74726163742062616c616e6365",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"BFCA188C10CCBCD10108D0D17745E5C7C1A1E3F9FCCB2C999DACBD65EEAFACAE": "77697468647261773a20496e73756666696369656e7420636f6e74726163742062616c616e6365",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"APY()": "ef8bd305",
							"ChampsContract()": "66837c7e",
							"claimRewards()": "372500ab",
							"earnedRewards(address)": "82d366d0",
							"myStakes(address)": "9be730da",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256)": "a694fc3a",
							"stakerInfo(address)": "4e745f1f",
							"stakers(uint256)": "fd5e6dd1",
							"totalChampsStaked()": "eb7fb177",
							"totalStakers()": "86989038",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"champsContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemedAt\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAtTimestamp\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakedAtTimestamp\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnAt\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"APY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ChampsContract\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"earnedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"myStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedChamps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hoursStakedFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPresent\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakedAtTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRedeemedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalChampsStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"StakeChamps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The stake Champs contract for staking and unstaking Champs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oatstake.sol\":\"StakeChamps\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oatstake.sol\":{\"keccak256\":\"0x74ec0ec4db89d2645237dce1dc4d6e1c307471b160447b45135722f7d49aaec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5921abb7fa968c0af22fe88593e89968d1f85038901230cec5185343af2d2a9\",\"dweb:/ipfs/QmYBcJjw2rdckJfgVkMbj9E1GVZU1Tcm3Utkhp3MuPvJWD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 920,
								"contract": "contracts/oatstake.sol:StakeChamps",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1032,
								"contract": "contracts/oatstake.sol:StakeChamps",
								"label": "ChampsContract",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)68"
							},
							{
								"astId": 1035,
								"contract": "contracts/oatstake.sol:StakeChamps",
								"label": "stakers",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1057,
								"contract": "contracts/oatstake.sol:StakeChamps",
								"label": "totalChampsStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1061,
								"contract": "contracts/oatstake.sol:StakeChamps",
								"label": "stakerInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(Staker)1055_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)68": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)1055_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakeChamps.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1055_storage"
							},
							"t_struct(Staker)1055_storage": {
								"encoding": "inplace",
								"label": "struct StakeChamps.Staker",
								"members": [
									{
										"astId": 1040,
										"contract": "contracts/oatstake.sol:StakeChamps",
										"label": "isPresent",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1042,
										"contract": "contracts/oatstake.sol:StakeChamps",
										"label": "stakedAtTimestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1044,
										"contract": "contracts/oatstake.sol:StakeChamps",
										"label": "unstakedAtTimestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1046,
										"contract": "contracts/oatstake.sol:StakeChamps",
										"label": "rewardRedeemedAt",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1048,
										"contract": "contracts/oatstake.sol:StakeChamps",
										"label": "reward",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1050,
										"contract": "contracts/oatstake.sol:StakeChamps",
										"label": "claimedRewards",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1052,
										"contract": "contracts/oatstake.sol:StakeChamps",
										"label": "unstakeAmount",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1054,
										"contract": "contracts/oatstake.sol:StakeChamps",
										"label": "amount",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "The stake Champs contract for staking and unstaking Champs",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/oatstake.sol": {
				"ast": {
					"absolutePath": "contracts/oatstake.sol",
					"exportedSymbols": {
						"Address": [
							690
						],
						"Context": [
							916
						],
						"IERC20": [
							68
						],
						"Ownable": [
							1021
						],
						"SafeERC20": [
							895
						],
						"SafeMath": [
							407
						],
						"StakeChamps": [
							1824
						]
					},
					"id": 1825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "137:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:0"
									},
									"scope": 68,
									"src": "91:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "175:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "215:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:9:0"
									},
									"scope": 68,
									"src": "156:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "252:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "271:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:35:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "305:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "305:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "304:6:0"
									},
									"scope": 68,
									"src": "234:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "338:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:32:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "393:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:9:0"
									},
									"scope": 68,
									"src": "319:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "433:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "450:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:33:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "484:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "484:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:6:0"
									},
									"scope": 68,
									"src": "416:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "522:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "538:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "557:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:51:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "591:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "591:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:6:0"
									},
									"scope": 68,
									"src": "500:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 59,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "622:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "644:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "664:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:57:0"
									},
									"src": "607:72:0"
								},
								{
									"anonymous": false,
									"id": 67,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "702:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "725:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "750:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:63:0"
									},
									"src": "687:78:0"
								}
							],
							"scope": 1825,
							"src": "65:703:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 407,
							"linearizedBaseContracts": [
								407
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "876:102:0",
										"statements": [
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 97,
														"src": "887:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 79,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 84,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 81,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "899:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 82,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "903:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "899:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "887:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 85,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "919:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 86,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "919:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "IfStatement",
												"src": "915:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "934:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "941:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 90,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "933:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 78,
													"id": 91,
													"nodeType": "Return",
													"src": "926:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "962:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 94,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "968:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 95,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "961:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 78,
												"id": 96,
												"nodeType": "Return",
												"src": "954:16:0"
											}
										]
									},
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "827:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:22:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "861:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 74,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "867:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:15:0"
									},
									"scope": 407,
									"src": "800:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "1062:78:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 109,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1077:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1081:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1077:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 116,
												"nodeType": "IfStatement",
												"src": "1073:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1092:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1099:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 114,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1091:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 108,
													"id": 115,
													"nodeType": "Return",
													"src": "1084:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1120:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 118,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "1126:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 119,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "1130:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1126:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 121,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1119:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 108,
												"id": 122,
												"nodeType": "Return",
												"src": "1112:20:0"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1002:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1013:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:22:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1047:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1053:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:15:0"
									},
									"scope": 407,
									"src": "986:154:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1224:148:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 135,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1241:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1246:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1241:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 142,
												"nodeType": "IfStatement",
												"src": "1237:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1263:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 140,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1256:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 134,
													"id": 141,
													"nodeType": "Return",
													"src": "1249:16:0"
												}
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "1276:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1288:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "1292:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1288:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1276:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 149,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "1308:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 150,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "1312:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1308:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 152,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "1317:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1308:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "1304:33:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1328:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1335:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 156,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1327:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 134,
													"id": 157,
													"nodeType": "Return",
													"src": "1320:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1356:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 160,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "1362:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 161,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1355:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 134,
												"id": 162,
												"nodeType": "Return",
												"src": "1348:16:0"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1164:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1163:22:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1209:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1215:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:15:0"
									},
									"scope": 407,
									"src": "1148:224:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1458:79:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1478:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1473:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "1469:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1489:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1496:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 180,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1488:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 174,
													"id": 181,
													"nodeType": "Return",
													"src": "1481:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 184,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1523:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 185,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "1527:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1523:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 187,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1516:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 174,
												"id": 188,
												"nodeType": "Return",
												"src": "1509:20:0"
											}
										]
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1397:22:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1443:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1443:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1449:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:15:0"
									},
									"scope": 407,
									"src": "1382:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1623:79:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1638:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1643:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 208,
												"nodeType": "IfStatement",
												"src": "1634:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1654:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1661:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 206,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1653:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 200,
													"id": 207,
													"nodeType": "Return",
													"src": "1646:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1682:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 210,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 211,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1692:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1688:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 213,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1681:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 200,
												"id": 214,
												"nodeType": "Return",
												"src": "1674:20:0"
											}
										]
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1563:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1574:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1562:22:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1608:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1608:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1614:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1607:15:0"
									},
									"scope": 407,
									"src": "1547:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "1779:112:0",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 240,
														"src": "1790:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1790:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 227,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1802:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1806:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1802:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1790:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 232,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "1826:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 233,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "1831:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1826:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1834:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1818:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1818:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1818:46:0"
											},
											{
												"expression": {
													"id": 238,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 226,
													"src": "1882:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 239,
												"nodeType": "Return",
												"src": "1875:8:0"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1725:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1736:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1724:22:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1770:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:9:0"
									},
									"scope": 407,
									"src": "1712:179:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1968:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "1987:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 252,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "1992:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1987:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1995:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1979:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1979:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "1979:49:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 257,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2046:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 258,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "2050:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2046:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 249,
												"id": 260,
												"nodeType": "Return",
												"src": "2039:12:0"
											}
										]
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1914:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1925:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1959:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:9:0"
									},
									"scope": 407,
									"src": "1901:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2134:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 271,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2149:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2154:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2149:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 276,
												"nodeType": "IfStatement",
												"src": "2145:20:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2164:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 270,
													"id": 275,
													"nodeType": "Return",
													"src": "2157:8:0"
												}
											},
											{
												"assignments": [
													278
												],
												"declarations": [
													{
														"constant": false,
														"id": 278,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 294,
														"src": "2176:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 277,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2176:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 282,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 279,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 280,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2188:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2176:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 284,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "2212:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 285,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "2216:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2212:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 287,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "2221:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2212:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2224:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2204:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2204:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "2204:56:0"
											},
											{
												"expression": {
													"id": 292,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 278,
													"src": "2278:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 293,
												"nodeType": "Return",
												"src": "2271:8:0"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2080:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2091:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:22:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2125:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:9:0"
									},
									"scope": 407,
									"src": "2067:220:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "2364:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "2383:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2387:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2383:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2390:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "2375:44:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 311,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "2437:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 312,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "2441:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2437:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 303,
												"id": 314,
												"nodeType": "Return",
												"src": "2430:12:0"
											}
										]
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2310:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2321:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2309:22:0"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2355:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2354:9:0"
									},
									"scope": 407,
									"src": "2297:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2527:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 326,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 320,
																"src": "2546:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2550:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2546:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2553:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "2538:42:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 332,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "2598:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 333,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "2602:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 324,
												"id": 335,
												"nodeType": "Return",
												"src": "2591:12:0"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2473:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2484:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:22:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2518:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2517:9:0"
									},
									"scope": 407,
									"src": "2460:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2716:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2735:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 350,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "2740:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2735:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 352,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "2743:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2727:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2727:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "2727:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 355,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "2774:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 356,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2778:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2774:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 358,
												"nodeType": "Return",
												"src": "2767:12:0"
											}
										]
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2634:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2645:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2656:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2656:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:50:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2707:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:9:0"
									},
									"scope": 407,
									"src": "2621:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "2892:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 372,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "2911:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2915:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2911:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 375,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "2918:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2903:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2903:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "2903:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 378,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "2949:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 379,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2953:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 370,
												"id": 381,
												"nodeType": "Return",
												"src": "2942:12:0"
											}
										]
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2810:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2821:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2832:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 365,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2832:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:50:0"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2883:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2882:9:0"
									},
									"scope": 407,
									"src": "2797:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "3067:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "3086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3090:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3086:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 398,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "3093:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3078:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3078:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "3078:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 401,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 402,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3128:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3124:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 404,
												"nodeType": "Return",
												"src": "3117:12:0"
											}
										]
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "2985:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "2996:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3007:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3007:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2984:50:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3058:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:9:0"
									},
									"scope": 407,
									"src": "2972:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1825,
							"src": "774:2366:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "3237:170:0",
										"statements": [
											{
												"assignments": [
													415
												],
												"declarations": [
													{
														"constant": false,
														"id": 415,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "3253:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 414,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"nodeType": "VariableDeclarationStatement",
												"src": "3253:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3342:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3344:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "3364:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "3352:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3344:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "3364:7:0",
														"valueSize": 1
													},
													{
														"declaration": 415,
														"isOffset": false,
														"isSlot": false,
														"src": "3344:4:0",
														"valueSize": 1
													}
												],
												"id": 417,
												"nodeType": "InlineAssembly",
												"src": "3333:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 418,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3391:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3398:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3391:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 413,
												"id": 421,
												"nodeType": "Return",
												"src": "3384:15:0"
											}
										]
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3191:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3190:17:0"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3231:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3231:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3230:6:0"
									},
									"scope": 690,
									"src": "3171:236:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3488:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 433,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "3515:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$690",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$690",
																				"typeString": "library Address"
																			}
																		],
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3507:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 431,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3507:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3507:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3507:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 436,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "3532:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3507:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3540:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3499:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3499:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "3499:73:0"
											},
											{
												"assignments": [
													442,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "3664:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 441,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3664:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 449,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 443,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "3682:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3682:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 445,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "3705:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3682:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3682:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3663:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 451,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "3736:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3745:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3728:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3728:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "3728:78:0"
											}
										]
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3436:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3436:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3463:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:43:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3488:0:0"
									},
									"scope": 690,
									"src": "3417:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3913:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3942:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "3950:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3956:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 465,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															472,
															491
														],
														"referencedDeclaration": 491,
														"src": "3929:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3929:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 464,
												"id": 470,
												"nodeType": "Return",
												"src": "3922:67:0"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3846:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3862:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3862:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3845:35:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3899:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3899:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3898:14:0"
									},
									"scope": 690,
									"src": "3824:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "4124:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "4164:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "4172:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4178:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 487,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4181:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 483,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															510,
															559
														],
														"referencedDeclaration": 559,
														"src": "4142:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4142:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 482,
												"id": 489,
												"nodeType": "Return",
												"src": "4135:59:0"
											}
										]
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "4029:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "4045:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "4064:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:63:0"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "4110:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4109:14:0"
									},
									"scope": 690,
									"src": "4007:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "4325:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 503,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "4365:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "4373:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 505,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "4379:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4386:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 502,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															510,
															559
														],
														"referencedDeclaration": 559,
														"src": "4343:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 501,
												"id": 508,
												"nodeType": "Return",
												"src": "4336:94:0"
											}
										]
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4243:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4259:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4259:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4278:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:50:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4311:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4311:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4310:14:0"
									},
									"scope": 690,
									"src": "4212:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "4589:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 526,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4616:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$690",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$690",
																				"typeString": "library Address"
																			}
																		],
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4608:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 524,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4608:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4608:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4608:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 529,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "4633:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4608:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4640:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4600:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4600:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 536,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "4711:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 535,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "4700:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4700:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4720:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4692:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4692:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "4692:60:0"
											},
											{
												"assignments": [
													542,
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 558,
														"src": "4826:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 541,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4826:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 558,
														"src": "4840:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 543,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4840:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 551,
												"initialValue": {
													"arguments": [
														{
															"id": 549,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "4895:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 545,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "4867:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4867:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 547,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "4887:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4867:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4867:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4825:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4936:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 554,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4945:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 555,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4957:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 552,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "4918:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 522,
												"id": 557,
												"nodeType": "Return",
												"src": "4911:59:0"
											}
										]
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 513,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4514:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4529:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4529:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:78:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4575:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:0"
									},
									"scope": 690,
									"src": "4448:530:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "5088:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5125:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "5133:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5139:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 568,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															575,
															609
														],
														"referencedDeclaration": 609,
														"src": "5106:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5106:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 567,
												"id": 573,
												"nodeType": "Return",
												"src": "5099:80:0"
											}
										]
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5016:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5032:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5032:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5015:35:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5074:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5074:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5073:14:0"
									},
									"scope": 690,
									"src": "4988:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "5323:294:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 588,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "5353:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 587,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "5342:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5342:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5362:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5334:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5334:67:0"
											},
											{
												"assignments": [
													594,
													596
												],
												"declarations": [
													{
														"constant": false,
														"id": 594,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "5475:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 593,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "5489:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 595,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5489:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 601,
												"initialValue": {
													"arguments": [
														{
															"id": 599,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5534:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 597,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5516:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5516:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5516:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5474:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 603,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "5575:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 604,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "5584:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 605,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5596:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 602,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "5557:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5557:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 585,
												"id": 607,
												"nodeType": "Return",
												"src": "5550:59:0"
											}
										]
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5239:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5258:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5258:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5222:63:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5309:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:0"
									},
									"scope": 690,
									"src": "5195:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "5724:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "5763:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "5771:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5777:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 618,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															625,
															659
														],
														"referencedDeclaration": 659,
														"src": "5742:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 623,
												"nodeType": "Return",
												"src": "5735:84:0"
											}
										]
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "5657:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "5673:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5673:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:35:0"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "5710:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:0"
									},
									"scope": 690,
									"src": "5627:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "5962:298:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 638,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "5992:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 637,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "5981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5981:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6001:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5973:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "5973:69:0"
											},
											{
												"assignments": [
													644,
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "6116:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 643,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6116:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "6130:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 645,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6130:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 651,
												"initialValue": {
													"arguments": [
														{
															"id": 649,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "6177:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 647,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "6157:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6157:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6157:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6115:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 653,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "6218:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 654,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "6227:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 655,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "6239:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 652,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "6200:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6200:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 635,
												"id": 657,
												"nodeType": "Return",
												"src": "6193:59:0"
											}
										]
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5883:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5902:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 630,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5902:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5866:63:0"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5948:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 633,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5947:14:0"
									},
									"scope": 690,
									"src": "5837:423:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "6397:613:0",
										"statements": [
											{
												"condition": {
													"id": 670,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 661,
													"src": "6412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 686,
													"nodeType": "Block",
													"src": "6471:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 674,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "6557:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6557:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6577:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6557:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 684,
																"nodeType": "Block",
																"src": "6937:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 681,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 665,
																					"src": "6963:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 680,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6956:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6956:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 683,
																		"nodeType": "ExpressionStatement",
																		"src": "6956:20:0"
																	}
																]
															},
															"id": 685,
															"nodeType": "IfStatement",
															"src": "6553:439:0",
															"trueBody": {
																"id": 679,
																"nodeType": "Block",
																"src": "6580:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6768:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6791:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6820:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6814:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6814:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6795:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6864:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6868:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6860:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6860:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6881:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6853:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6853:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6853:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 663,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6820:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 663,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6868:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 678,
																		"nodeType": "InlineAssembly",
																		"src": "6759:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 687,
												"nodeType": "IfStatement",
												"src": "6408:595:0",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "6421:44:0",
													"statements": [
														{
															"expression": {
																"id": 671,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "6443:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 669,
															"id": 672,
															"nodeType": "Return",
															"src": "6436:17:0"
														}
													]
												}
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6295:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6295:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6309:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6309:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6334:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 664,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6334:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6294:67:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6383:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6383:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6382:14:0"
									},
									"scope": 690,
									"src": "6268:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1825,
							"src": "3146:3867:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 895,
							"linearizedBaseContracts": [
								895
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 693,
									"libraryName": {
										"id": 691,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 407,
										"src": "7050:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$407",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "7044:27:0",
									"typeName": {
										"id": 692,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7063:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 696,
									"libraryName": {
										"id": 694,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 690,
										"src": "7083:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$690",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "7077:26:0",
									"typeName": {
										"id": 695,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7095:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "7183:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 706,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "7214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 709,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 698,
																			"src": "7244:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$68",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7244:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7244:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 712,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "7269:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "7273:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 707,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "7221:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7221:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7221:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 705,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "7194:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7194:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "7194:86:0"
											}
										]
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "7133:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$68",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 697,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 68,
													"src": "7133:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$68",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "7147:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "7159:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7132:41:0"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7183:0:0"
									},
									"scope": 895,
									"src": "7111:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "7386:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "7417:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 733,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 720,
																			"src": "7447:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$68",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 51,
																		"src": "7447:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7447:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 736,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7476:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 737,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7482:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 738,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7486:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 731,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "7424:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7424:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7424:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 729,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "7397:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7397:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "7397:96:0"
											}
										]
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7322:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$68",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 719,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 68,
													"src": "7322:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$68",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7336:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7350:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7362:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7321:55:0"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7386:0:0"
									},
									"scope": 895,
									"src": "7296:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "7585:274:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 753,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "7607:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7616:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7607:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 756,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7606:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 761,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "7647:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$895",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$895",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 760,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7639:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 759,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "7639:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 762,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7639:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 763,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "7654:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 757,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 745,
																					"src": "7623:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$68",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 31,
																				"src": "7623:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7623:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7666:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7623:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 767,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7622:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7606:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7683:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7598:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "7598:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "7781:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 776,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 745,
																			"src": "7811:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$68",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 40,
																		"src": "7811:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7811:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 779,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "7835:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 780,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "7844:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 774,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "7788:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7788:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7788:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 772,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "7761:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7761:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "7761:90:0"
											}
										]
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "7530:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$68",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 744,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 68,
													"src": "7530:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$68",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "7544:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "7561:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7529:46:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7585:0:0"
									},
									"scope": 895,
									"src": "7509:350:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "7953:200:0",
										"statements": [
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "7964:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7964:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"arguments": [
														{
															"id": 805,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8031:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 800,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "8011:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$895",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$895",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8003:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 798,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8003:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8003:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 802,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "8018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 796,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "7987:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$68",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 31,
																"src": "7987:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7987:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "7987:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7987:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7964:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 809,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "8068:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 812,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 787,
																			"src": "8098:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$68",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 40,
																		"src": "8098:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "8098:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 815,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "8122:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 816,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "8131:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 810,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "8075:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "8075:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8075:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 808,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "8048:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8048:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "8048:97:0"
											}
										]
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "7898:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$68",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 786,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 68,
													"src": "7898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$68",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "7912:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "7929:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7897:46:0"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7953:0:0"
									},
									"scope": 895,
									"src": "7867:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "8247:245:0",
										"statements": [
											{
												"assignments": [
													831
												],
												"declarations": [
													{
														"constant": false,
														"id": 831,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "8258:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 830,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8258:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "8325:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8332:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 836,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "8305:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$895",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$895",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8297:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 834,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8297:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8297:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 838,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "8312:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 832,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "8281:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$68",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 31,
																"src": "8281:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8281:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "8281:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8281:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8258:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "8407:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 849,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "8437:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$68",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 40,
																		"src": "8437:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "8437:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 852,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "8461:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 853,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "8470:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 847,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "8414:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "8414:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8414:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 845,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "8387:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8387:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "8387:97:0"
											}
										]
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "8192:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$68",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 822,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 68,
													"src": "8192:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$68",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "8206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "8223:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8191:46:0"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8247:0:0"
									},
									"scope": 895,
									"src": "8161:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "8572:355:0",
										"statements": [
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "8590:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 865,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8590:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 875,
												"initialValue": {
													"arguments": [
														{
															"id": 872,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "8644:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8650:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 869,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "8624:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$68",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$68",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8616:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 867,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8616:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8616:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 491,
														"src": "8616:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8616:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8590:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 876,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "8700:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8700:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8720:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8700:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8696:224:0",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8723:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 883,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 866,
																				"src": "8842:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 885,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "8855:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 884,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "8855:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 886,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8854:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 881,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "8831:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "8831:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8831:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8863:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 880,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "8823:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8823:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "ExpressionStatement",
															"src": "8823:85:0"
														}
													]
												}
											}
										]
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "8531:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$68",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 859,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 68,
													"src": "8531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$68",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "8545:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 861,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8545:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8530:33:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8572:0:0"
									},
									"scope": 895,
									"src": "8502:425:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1825,
							"src": "7019:1911:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "9039:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 900,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "9057:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9057:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 899,
												"id": 902,
												"nodeType": "Return",
												"src": "9050:17:0"
											}
										]
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8988:2:0"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "9022:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9021:17:0"
									},
									"scope": 916,
									"src": "8969:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "9148:168:0",
										"statements": [
											{
												"expression": {
													"id": 909,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "9159:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$916",
														"typeString": "contract Context"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "9159:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "9300:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "9300:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 908,
												"id": 913,
												"nodeType": "Return",
												"src": "9293:15:0"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9100:2:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "9134:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 906,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9134:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9133:14:0"
									},
									"scope": 916,
									"src": "9083:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1825,
							"src": "8936:383:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 917,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 916,
										"src": "9354:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$916",
											"typeString": "contract Context"
										}
									},
									"id": 918,
									"nodeType": "InheritanceSpecifier",
									"src": "9354:7:0"
								}
							],
							"contractDependencies": [
								916
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1021,
							"linearizedBaseContracts": [
								1021,
								916
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 920,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 1021,
									"src": "9369:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 919,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9369:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 926,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "9427:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "9458:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9426:57:0"
									},
									"src": "9400:84:0"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "9607:139:0",
										"statements": [
											{
												"assignments": [
													931
												],
												"declarations": [
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 947,
														"src": "9618:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 930,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9618:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 932,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "9638:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9638:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9618:32:0"
											},
											{
												"expression": {
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 935,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "9661:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 936,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "9670:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9661:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "9661:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9724:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9716:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 940,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9716:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9716:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 944,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "9728:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 939,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "9695:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9695:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "EmitStatement",
												"src": "9690:48:0"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "9492:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 948,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9603:2:0"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9607:0:0"
									},
									"scope": 1021,
									"src": "9591:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "9882:32:0",
										"statements": [
											{
												"expression": {
													"id": 954,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 920,
													"src": "9900:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 953,
												"id": 955,
												"nodeType": "Return",
												"src": "9893:13:0"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "9754:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9841:2:0"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "9873:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9872:9:0"
									},
									"scope": 1021,
									"src": "9827:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "10028:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 961,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "10047:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10047:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 963,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "10058:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10058:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10047:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10072:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 960,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10039:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "10039:68:0"
											},
											{
												"id": 969,
												"nodeType": "PlaceholderStatement",
												"src": "10118:1:0"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "9922:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 971,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10025:2:0"
									},
									"src": "10007:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "10191:94:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 977,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "10228:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10244:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10236:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 978,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10236:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10236:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 976,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "10207:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10207:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "EmitStatement",
												"src": "10202:45:0"
											},
											{
												"expression": {
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 984,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "10258:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10275:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10267:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10267:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10267:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10258:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "10258:19:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 974,
											"modifierName": {
												"id": 973,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 971,
												"src": "10181:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10181:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10163:2:0"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10191:0:0"
									},
									"scope": 1021,
									"src": "10137:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "10510:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1001,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "10529:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10549:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10541:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1002,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10541:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10541:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10529:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10553:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10521:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10521:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "10521:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1011,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "10631:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "10639:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1010,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "10610:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10610:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "EmitStatement",
												"src": "10605:43:0"
											},
											{
												"expression": {
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1015,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "10659:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1016,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "10668:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10659:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "10659:17:0"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "10293:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 998,
											"modifierName": {
												"id": 997,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 971,
												"src": "10500:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10500:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "10467:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10466:18:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10510:0:0"
									},
									"scope": 1021,
									"src": "10440:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1825,
							"src": "9325:1362:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1023,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1021,
										"src": "10815:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1021",
											"typeString": "contract Ownable"
										}
									},
									"id": 1024,
									"nodeType": "InheritanceSpecifier",
									"src": "10815:7:0"
								}
							],
							"contractDependencies": [
								916,
								1021
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1022,
								"nodeType": "StructuredDocumentation",
								"src": "10695:96:0",
								"text": "@title StakeChamps\n @notice The stake Champs contract for staking and unstaking Champs"
							},
							"fullyImplemented": true,
							"id": 1824,
							"linearizedBaseContracts": [
								1824,
								1021,
								916
							],
							"name": "StakeChamps",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1027,
									"libraryName": {
										"id": 1025,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 895,
										"src": "10836:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$895",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "10830:27:0",
									"typeName": {
										"id": 1026,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 68,
										"src": "10850:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$68",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 1030,
									"libraryName": {
										"id": 1028,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 407,
										"src": "10869:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$407",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "10863:27:0",
									"typeName": {
										"id": 1029,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10882:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "66837c7e",
									"id": 1032,
									"mutability": "mutable",
									"name": "ChampsContract",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "10983:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$68",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1031,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 68,
										"src": "10983:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$68",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fd5e6dd1",
									"id": 1035,
									"mutability": "mutable",
									"name": "stakers",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "11082:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1033,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11082:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1034,
										"nodeType": "ArrayTypeName",
										"src": "11082:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ef8bd305",
									"id": 1038,
									"mutability": "constant",
									"name": "APY",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "11127:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1036,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11127:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323530",
										"id": 1037,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11157:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_250_by_1",
											"typeString": "int_const 250"
										},
										"value": "250"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakeChamps.Staker",
									"id": 1055,
									"members": [
										{
											"constant": false,
											"id": 1040,
											"mutability": "mutable",
											"name": "isPresent",
											"nodeType": "VariableDeclaration",
											"scope": 1055,
											"src": "11194:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1039,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "11194:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1042,
											"mutability": "mutable",
											"name": "stakedAtTimestamp",
											"nodeType": "VariableDeclaration",
											"scope": 1055,
											"src": "11219:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1041,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11219:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1044,
											"mutability": "mutable",
											"name": "unstakedAtTimestamp",
											"nodeType": "VariableDeclaration",
											"scope": 1055,
											"src": "11255:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1043,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11255:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1046,
											"mutability": "mutable",
											"name": "rewardRedeemedAt",
											"nodeType": "VariableDeclaration",
											"scope": 1055,
											"src": "11293:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1045,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11293:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1048,
											"mutability": "mutable",
											"name": "reward",
											"nodeType": "VariableDeclaration",
											"scope": 1055,
											"src": "11328:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1047,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11328:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1050,
											"mutability": "mutable",
											"name": "claimedRewards",
											"nodeType": "VariableDeclaration",
											"scope": 1055,
											"src": "11353:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1049,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11353:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1052,
											"mutability": "mutable",
											"name": "unstakeAmount",
											"nodeType": "VariableDeclaration",
											"scope": 1055,
											"src": "11386:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1051,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11386:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1054,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1055,
											"src": "11418:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1053,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11418:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nodeType": "StructDefinition",
									"scope": 1824,
									"src": "11169:271:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eb7fb177",
									"id": 1057,
									"mutability": "mutable",
									"name": "totalChampsStaked",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "11448:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1056,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11448:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4e745f1f",
									"id": 1061,
									"mutability": "mutable",
									"name": "stakerInfo",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "11487:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
										"typeString": "mapping(address => struct StakeChamps.Staker)"
									},
									"typeName": {
										"id": 1060,
										"keyType": {
											"id": 1058,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11495:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11487:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
											"typeString": "mapping(address => struct StakeChamps.Staker)"
										},
										"valueType": {
											"id": 1059,
											"name": "Staker",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1055,
											"src": "11506:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1055_storage_ptr",
												"typeString": "struct StakeChamps.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1069,
									"name": "Stake",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "11552:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "11576:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakedAtTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "11592:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11551:67:0"
									},
									"src": "11540:79:0"
								},
								{
									"anonymous": false,
									"id": 1077,
									"name": "Unstake",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "11639:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "11663:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakedAtTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "11679:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11638:69:0"
									},
									"src": "11625:83:0"
								},
								{
									"anonymous": false,
									"id": 1085,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "11729:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "11753:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawnAt",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "11769:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11728:61:0"
									},
									"src": "11714:76:0"
								},
								{
									"anonymous": false,
									"id": 1093,
									"name": "ClaimRewards",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "11815:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "11839:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"indexed": false,
												"mutability": "mutable",
												"name": "redeemedAt",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "11855:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11814:60:0"
									},
									"src": "11796:79:0"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "11925:147:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1101,
																		"name": "champsContractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "11952:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$68",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$68",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11944:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1099,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11944:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11944:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11986:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11978:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1103,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11978:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11978:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11944:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742062652061646472657373207a65726f",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11990:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5",
																"typeString": "literal_string \"Cannot be address zero\""
															},
															"value": "Cannot be address zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5",
																"typeString": "literal_string \"Cannot be address zero\""
															}
														],
														"id": 1098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11936:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "11936:79:0"
											},
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1111,
														"name": "ChampsContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12026:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$68",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1112,
														"name": "champsContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "12043:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$68",
															"typeString": "contract IERC20"
														}
													},
													"src": "12026:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$68",
														"typeString": "contract IERC20"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "12026:38:0"
											}
										]
									},
									"id": 1116,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "champsContractAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "11895:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$68",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1094,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 68,
													"src": "11895:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$68",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11894:30:0"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11925:0:0"
									},
									"scope": 1824,
									"src": "11883:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "12107:2:0",
										"statements": []
									},
									"id": 1120,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12087:2:0"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12107:0:0"
									},
									"scope": 1824,
									"src": "12080:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "12145:2:0",
										"statements": []
									},
									"id": 1124,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12125:2:0"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12145:0:0"
									},
									"scope": 1824,
									"src": "12117:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "12190:1249:0",
										"statements": [
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "_staker",
														"nodeType": "VariableDeclaration",
														"scope": 1262,
														"src": "12201:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker"
														},
														"typeName": {
															"id": 1127,
															"name": "Staker",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1055,
															"src": "12201:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_storage_ptr",
																"typeString": "struct StakeChamps.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1133,
												"initialValue": {
													"baseExpression": {
														"id": 1129,
														"name": "stakerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "12225:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
															"typeString": "mapping(address => struct StakeChamps.Staker storage ref)"
														}
													},
													"id": 1132,
													"indexExpression": {
														"expression": {
															"id": 1130,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "12236:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12236:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12225:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1055_storage",
														"typeString": "struct StakeChamps.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12201:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1135,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "12266:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																	"typeString": "struct StakeChamps.Staker memory"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isPresent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1040,
															"src": "12266:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20726577617264733a206e6f742061207374616b6572",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12285:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10058e3150d230f439bfc369d56a0ec6afd8e3a2a052c1693960ef2cb1473093",
																"typeString": "literal_string \"No rewards: not a staker\""
															},
															"value": "No rewards: not a staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10058e3150d230f439bfc369d56a0ec6afd8e3a2a052c1693960ef2cb1473093",
																"typeString": "literal_string \"No rewards: not a staker\""
															}
														],
														"id": 1134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12258:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12258:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "12258:54:0"
											},
											{
												"assignments": [
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1141,
														"mutability": "mutable",
														"name": "rewardsEarned",
														"nodeType": "VariableDeclaration",
														"scope": 1262,
														"src": "12325:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1140,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1143,
												"initialValue": {
													"hexValue": "30",
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12349:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12325:25:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1144,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1128,
																		"src": "12366:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																			"typeString": "struct StakeChamps.Staker memory"
																		}
																	},
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "unstakeAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1052,
																	"src": "12366:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12390:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12366:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1148,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12365:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1149,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1128,
																		"src": "12397:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																			"typeString": "struct StakeChamps.Staker memory"
																		}
																	},
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardRedeemedAt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1046,
																	"src": "12397:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12397:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1153,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12396:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12365:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1169,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "12563:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																	"typeString": "struct StakeChamps.Staker memory"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardRedeemedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1046,
															"src": "12563:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12590:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12563:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1200,
														"nodeType": "Block",
														"src": "12720:122:0",
														"statements": [
															{
																"expression": {
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1187,
																		"name": "rewardsEarned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "12735:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 1192,
																							"name": "_staker",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1128,
																							"src": "12787:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																								"typeString": "struct StakeChamps.Staker memory"
																							}
																						},
																						"id": 1193,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "stakedAtTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1042,
																						"src": "12787:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1194,
																							"name": "_staker",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1128,
																							"src": "12814:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																								"typeString": "struct StakeChamps.Staker memory"
																							}
																						},
																						"id": 1195,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1054,
																						"src": "12814:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1191,
																					"name": "calculateRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1806,
																					"src": "12770:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) view returns (uint256)"
																					}
																				},
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12770:59:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1188,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1128,
																					"src": "12751:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																						"typeString": "struct StakeChamps.Staker memory"
																					}
																				},
																				"id": 1189,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "reward",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1048,
																				"src": "12751:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 241,
																			"src": "12751:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12751:79:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12735:95:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1199,
																"nodeType": "ExpressionStatement",
																"src": "12735:95:0"
															}
														]
													},
													"id": 1201,
													"nodeType": "IfStatement",
													"src": "12559:283:0",
													"trueBody": {
														"id": 1186,
														"nodeType": "Block",
														"src": "12593:121:0",
														"statements": [
															{
																"expression": {
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1173,
																		"name": "rewardsEarned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "12608:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 1178,
																							"name": "_staker",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1128,
																							"src": "12660:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																								"typeString": "struct StakeChamps.Staker memory"
																							}
																						},
																						"id": 1179,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "rewardRedeemedAt",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1046,
																						"src": "12660:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1180,
																							"name": "_staker",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1128,
																							"src": "12686:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																								"typeString": "struct StakeChamps.Staker memory"
																							}
																						},
																						"id": 1181,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1054,
																						"src": "12686:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1177,
																					"name": "calculateRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1806,
																					"src": "12643:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) view returns (uint256)"
																					}
																				},
																				"id": 1182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12643:58:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1174,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1128,
																					"src": "12624:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																						"typeString": "struct StakeChamps.Staker memory"
																					}
																				},
																				"id": 1175,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "reward",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1048,
																				"src": "12624:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 241,
																			"src": "12624:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12624:78:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12608:94:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1185,
																"nodeType": "ExpressionStatement",
																"src": "12608:94:0"
															}
														]
													}
												},
												"id": 1202,
												"nodeType": "IfStatement",
												"src": "12361:481:0",
												"trueBody": {
													"id": 1168,
													"nodeType": "Block",
													"src": "12429:124:0",
													"statements": [
														{
															"expression": {
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1155,
																	"name": "rewardsEarned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "12444:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1160,
																						"name": "_staker",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1128,
																						"src": "12496:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																							"typeString": "struct StakeChamps.Staker memory"
																						}
																					},
																					"id": 1161,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "unstakedAtTimestamp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1044,
																					"src": "12496:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1162,
																						"name": "_staker",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1128,
																						"src": "12525:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																							"typeString": "struct StakeChamps.Staker memory"
																						}
																					},
																					"id": 1163,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1054,
																					"src": "12525:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1159,
																				"name": "calculateRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1806,
																				"src": "12479:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12479:61:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1156,
																				"name": "_staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1128,
																				"src": "12460:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																					"typeString": "struct StakeChamps.Staker memory"
																				}
																			},
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "reward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1048,
																			"src": "12460:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 241,
																		"src": "12460:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12460:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12444:97:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1167,
															"nodeType": "ExpressionStatement",
															"src": "12444:97:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1203,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "12854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardRedeemedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1046,
														"src": "12854:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1206,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "12881:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12881:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12854:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "12854:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1215,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "12964:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakeChamps_$1824",
																					"typeString": "contract StakeChamps"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakeChamps_$1824",
																					"typeString": "contract StakeChamps"
																				}
																			],
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12956:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1213,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12956:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12956:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"id": 1211,
																		"name": "ChampsContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "12931:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$68",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 13,
																	"src": "12931:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12931:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1218,
																"name": "rewardsEarned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "12974:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12931:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636c61696d526577617264733a20496e73756666696369656e7420636f6e74726163742062616c616e6365",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13002:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7dd237e5e91540a0b6e997b7f12d98ccf19c520e7525780536278ace211402ff",
																"typeString": "literal_string \"claimRewards: Insufficient contract balance\""
															},
															"value": "claimRewards: Insufficient contract balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7dd237e5e91540a0b6e997b7f12d98ccf19c520e7525780536278ace211402ff",
																"typeString": "literal_string \"claimRewards: Insufficient contract balance\""
															}
														],
														"id": 1210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12909:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12909:149:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "12909:149:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1226,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13099:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13099:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1228,
															"name": "rewardsEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "13111:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1223,
															"name": "ChampsContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "13071:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 718,
														"src": "13071:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$68_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13071:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "13071:54:0"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1231,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "13138:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1048,
														"src": "13138:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13155:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13138:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "13138:18:0"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1237,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "13167:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1050,
														"src": "13167:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1243,
																"name": "rewardsEarned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "13219:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1240,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "13192:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																		"typeString": "struct StakeChamps.Staker memory"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "claimedRewards",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1050,
																"src": "13192:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 241,
															"src": "13192:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13192:41:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13167:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "13167:66:0"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1247,
															"name": "stakerInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13244:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
																"typeString": "mapping(address => struct StakeChamps.Staker storage ref)"
															}
														},
														"id": 1250,
														"indexExpression": {
															"expression": {
																"id": 1248,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13255:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13255:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13244:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_storage",
															"typeString": "struct StakeChamps.Staker storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1251,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "13269:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker memory"
														}
													},
													"src": "13244:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1055_storage",
														"typeString": "struct StakeChamps.Staker storage ref"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "13244:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1255,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13348:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13348:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1257,
															"name": "rewardsEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "13360:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1258,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "13375:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "13375:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1254,
														"name": "ClaimRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "13335:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13335:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "EmitStatement",
												"src": "13330:61:0"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12178:2:0"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12190:0:0"
									},
									"scope": 1824,
									"src": "12157:1282:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "13489:1271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1269,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "13508:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13517:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13508:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520616d6f756e74206d757374206265203e2030",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13520:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2",
																"typeString": "literal_string \"Stake amount must be > 0\""
															},
															"value": "Stake amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2",
																"typeString": "literal_string \"Stake amount must be > 0\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13500:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "13500:47:0"
											},
											{
												"assignments": [
													1276
												],
												"declarations": [
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "stakerChampsBalance",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "13560:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13560:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1279,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13615:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13615:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 1277,
															"name": "ChampsContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "13590:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "13590:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13590:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13560:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1284,
																"name": "stakerChampsBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "13645:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1285,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "13668:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13645:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7374616b653a20496e73756666696369656e7420757365722062616c616e6365",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13676:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_136374a0fa99af39e566025e75c1bc91cbc21557e5c7bc21280df9c3b2e857f1",
																"typeString": "literal_string \"stake: Insufficient user balance\""
															},
															"value": "stake: Insufficient user balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_136374a0fa99af39e566025e75c1bc91cbc21557e5c7bc21280df9c3b2e857f1",
																"typeString": "literal_string \"stake: Insufficient user balance\""
															}
														],
														"id": 1283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13637:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "13637:74:0"
											},
											{
												"assignments": [
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "_staker",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "13724:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker"
														},
														"typeName": {
															"id": 1290,
															"name": "Staker",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1055,
															"src": "13724:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_storage_ptr",
																"typeString": "struct StakeChamps.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"baseExpression": {
														"id": 1292,
														"name": "stakerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "13748:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
															"typeString": "mapping(address => struct StakeChamps.Staker storage ref)"
														}
													},
													"id": 1295,
													"indexExpression": {
														"expression": {
															"id": 1293,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "13759:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "13759:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13748:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1055_storage",
														"typeString": "struct StakeChamps.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13724:46:0"
											},
											{
												"condition": {
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13785:18:0",
													"subExpression": {
														"expression": {
															"id": 1297,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "13786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isPresent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1040,
														"src": "13786:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1321,
												"nodeType": "IfStatement",
												"src": "13781:230:0",
												"trueBody": {
													"id": 1320,
													"nodeType": "Block",
													"src": "13805:206:0",
													"statements": [
														{
															"expression": {
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1300,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "13820:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																			"typeString": "struct StakeChamps.Staker memory"
																		}
																	},
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "isPresent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1040,
																	"src": "13820:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13840:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "13820:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1305,
															"nodeType": "ExpressionStatement",
															"src": "13820:24:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1309,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "13872:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13872:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"id": 1306,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "13859:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "13859:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13859:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1312,
															"nodeType": "ExpressionStatement",
															"src": "13859:24:0"
														},
														{
															"expression": {
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1313,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "13956:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																			"typeString": "struct StakeChamps.Staker memory"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "stakedAtTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1042,
																	"src": "13956:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1316,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "13984:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "13984:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13956:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1319,
															"nodeType": "ExpressionStatement",
															"src": "13956:43:0"
														}
													]
												}
											},
											{
												"assignments": [
													1323
												],
												"declarations": [
													{
														"constant": false,
														"id": 1323,
														"mutability": "mutable",
														"name": "previousStake",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "14025:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14025:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1326,
												"initialValue": {
													"expression": {
														"id": 1324,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "14049:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker memory"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1054,
													"src": "14049:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14025:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "previousStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "14078:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14094:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14078:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1348,
												"nodeType": "IfStatement",
												"src": "14074:289:0",
												"trueBody": {
													"id": 1347,
													"nodeType": "Block",
													"src": "14097:266:0",
													"statements": [
														{
															"expression": {
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1330,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "14160:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																			"typeString": "struct StakeChamps.Staker memory"
																		}
																	},
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1048,
																	"src": "14160:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1334,
																				"name": "_staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "14194:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																					"typeString": "struct StakeChamps.Staker memory"
																				}
																			},
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakedAtTimestamp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1042,
																			"src": "14194:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1336,
																			"name": "previousStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "14221:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1333,
																		"name": "calculateRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1806,
																		"src": "14177:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) view returns (uint256)"
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14177:58:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14160:75:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1339,
															"nodeType": "ExpressionStatement",
															"src": "14160:75:0"
														},
														{
															"expression": {
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1340,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "14308:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																			"typeString": "struct StakeChamps.Staker memory"
																		}
																	},
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "stakedAtTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1042,
																	"src": "14308:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1343,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "14336:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "14336:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14308:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1346,
															"nodeType": "ExpressionStatement",
															"src": "14308:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1352,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14407:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14407:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1356,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "14427:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeChamps_$1824",
																		"typeString": "contract StakeChamps"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeChamps_$1824",
																		"typeString": "contract StakeChamps"
																	}
																],
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14419:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1354,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14419:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14419:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1358,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "14434:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1349,
															"name": "ChampsContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "14375:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 743,
														"src": "14375:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$68_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14375:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "14375:66:0"
											},
											{
												"expression": {
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1361,
														"name": "totalChampsStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "14454:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1364,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "14496:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1362,
																"name": "totalChampsStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "14474:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 241,
															"src": "14474:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14474:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14454:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "14454:49:0"
											},
											{
												"expression": {
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1368,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "14555:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1054,
														"src": "14555:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1374,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "14591:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1371,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "14572:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																		"typeString": "struct StakeChamps.Staker memory"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1054,
																"src": "14572:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 241,
															"src": "14572:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14572:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14555:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "14555:43:0"
											},
											{
												"expression": {
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1378,
															"name": "stakerInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "14609:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
																"typeString": "mapping(address => struct StakeChamps.Staker storage ref)"
															}
														},
														"id": 1381,
														"indexExpression": {
															"expression": {
																"id": 1379,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14620:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14620:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14609:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_storage",
															"typeString": "struct StakeChamps.Staker storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1382,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "14634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker memory"
														}
													},
													"src": "14609:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1055_storage",
														"typeString": "struct StakeChamps.Staker storage ref"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "14609:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1386,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14706:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14706:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1388,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "14718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1389,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "14726:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																	"typeString": "struct StakeChamps.Staker memory"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakedAtTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1042,
															"src": "14726:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1385,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "14700:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14700:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "EmitStatement",
												"src": "14695:57:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "13464:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13463:16:0"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13489:0:0"
									},
									"scope": 1824,
									"src": "13449:1311:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "14810:825:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1400,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "14829:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14838:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14829:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7374616b6520616d6f756e74206d757374206265203e2030",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14841:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4aba50fc5153577a4969133b247c91dac72df1be451d514eb3976a6bc86c324b",
																"typeString": "literal_string \"Unstake amount must be > 0\""
															},
															"value": "Unstake amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4aba50fc5153577a4969133b247c91dac72df1be451d514eb3976a6bc86c324b",
																"typeString": "literal_string \"Unstake amount must be > 0\""
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14821:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "14821:49:0"
											},
											{
												"assignments": [
													1407
												],
												"declarations": [
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "_staker",
														"nodeType": "VariableDeclaration",
														"scope": 1493,
														"src": "14883:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker"
														},
														"typeName": {
															"id": 1406,
															"name": "Staker",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1055,
															"src": "14883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_storage_ptr",
																"typeString": "struct StakeChamps.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1412,
												"initialValue": {
													"baseExpression": {
														"id": 1408,
														"name": "stakerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "14907:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
															"typeString": "mapping(address => struct StakeChamps.Staker storage ref)"
														}
													},
													"id": 1411,
													"indexExpression": {
														"expression": {
															"id": 1409,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "14918:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "14918:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14907:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1055_storage",
														"typeString": "struct StakeChamps.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14883:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1414,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "14948:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																		"typeString": "struct StakeChamps.Staker memory"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1054,
																"src": "14948:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14965:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14948:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f205374616b6573",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14968:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed",
																"typeString": "literal_string \"No Stakes\""
															},
															"value": "No Stakes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed",
																"typeString": "literal_string \"No Stakes\""
															}
														],
														"id": 1413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14940:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "14940:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1422,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "14999:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1423,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "15009:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																		"typeString": "struct StakeChamps.Staker memory"
																	}
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1054,
																"src": "15009:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14999:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7374616b6520616d74203e207374616b656420616d74",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15025:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b",
																"typeString": "literal_string \"Unstake amt > staked amt\""
															},
															"value": "Unstake amt > staked amt"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b",
																"typeString": "literal_string \"Unstake amt > staked amt\""
															}
														],
														"id": 1421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14991:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14991:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "14991:61:0"
											},
											{
												"expression": {
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1429,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "15065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unstakedAtTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1044,
														"src": "15065:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1432,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "15095:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "15095:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15065:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "15065:45:0"
											},
											{
												"expression": {
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1436,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "15163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1048,
														"src": "15163:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1440,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "15197:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																		"typeString": "struct StakeChamps.Staker memory"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "unstakedAtTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1044,
																"src": "15197:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 1445,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1396,
																				"src": "15246:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1442,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1407,
																					"src": "15227:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																						"typeString": "struct StakeChamps.Staker memory"
																					}
																				},
																				"id": 1443,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1054,
																				"src": "15227:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 262,
																			"src": "15227:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15227:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1447,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15226:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1439,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "15180:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) view returns (uint256)"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15180:75:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15163:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "15163:92:0"
											},
											{
												"expression": {
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1451,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "15266:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unstakeAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "15266:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1457,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "15316:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1454,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "15290:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																		"typeString": "struct StakeChamps.Staker memory"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "unstakeAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1052,
																"src": "15290:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 241,
															"src": "15290:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15290:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15266:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "15266:57:0"
											},
											{
												"expression": {
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1461,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "15334:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1054,
														"src": "15334:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1467,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "15370:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1464,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "15351:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																		"typeString": "struct StakeChamps.Staker memory"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1054,
																"src": "15351:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 262,
															"src": "15351:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15351:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15334:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "15334:43:0"
											},
											{
												"expression": {
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1471,
														"name": "totalChampsStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "15390:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1474,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "15432:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1472,
																"name": "totalChampsStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "15410:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 262,
															"src": "15410:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15410:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15390:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "15390:49:0"
											},
											{
												"expression": {
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1478,
															"name": "stakerInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "15452:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
																"typeString": "mapping(address => struct StakeChamps.Staker storage ref)"
															}
														},
														"id": 1481,
														"indexExpression": {
															"expression": {
																"id": 1479,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15463:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15452:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_storage",
															"typeString": "struct StakeChamps.Staker storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1482,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "15477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker memory"
														}
													},
													"src": "15452:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1055_storage",
														"typeString": "struct StakeChamps.Staker storage ref"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "15452:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1486,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15551:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15551:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1488,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "15563:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1489,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "15571:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "15571:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1485,
														"name": "Unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "15543:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15543:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "EmitStatement",
												"src": "15538:49:0"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "14785:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14784:16:0"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14810:0:0"
									},
									"scope": 1824,
									"src": "14768:867:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "15672:873:0",
										"statements": [
											{
												"assignments": [
													1498
												],
												"declarations": [
													{
														"constant": false,
														"id": 1498,
														"mutability": "mutable",
														"name": "_staker",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "15683:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker"
														},
														"typeName": {
															"id": 1497,
															"name": "Staker",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1055,
															"src": "15683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_storage_ptr",
																"typeString": "struct StakeChamps.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1503,
												"initialValue": {
													"baseExpression": {
														"id": 1499,
														"name": "stakerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "15707:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
															"typeString": "mapping(address => struct StakeChamps.Staker storage ref)"
														}
													},
													"id": 1502,
													"indexExpression": {
														"expression": {
															"id": 1500,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "15718:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "15718:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15707:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1055_storage",
														"typeString": "struct StakeChamps.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15683:46:0"
											},
											{
												"assignments": [
													1505
												],
												"declarations": [
													{
														"constant": false,
														"id": 1505,
														"mutability": "mutable",
														"name": "unstakeAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "15740:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15740:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1508,
												"initialValue": {
													"expression": {
														"id": 1506,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "15764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker memory"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "unstakeAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1052,
													"src": "15764:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15740:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1510,
																"name": "unstakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "15804:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15820:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15804:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7374616b6520616d6f756e742069732030",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15823:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c272f4caeddc0311756af9e990d57d2a307599607c51621646c762257948882",
																"typeString": "literal_string \"Unstake amount is 0\""
															},
															"value": "Unstake amount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c272f4caeddc0311756af9e990d57d2a307599607c51621646c762257948882",
																"typeString": "literal_string \"Unstake amount is 0\""
															}
														],
														"id": 1509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15796:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15796:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "15796:49:0"
											},
											{
												"assignments": [
													1517
												],
												"declarations": [
													{
														"constant": false,
														"id": 1517,
														"mutability": "mutable",
														"name": "hoursUnstakedFor",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "15858:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15858:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1522,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1519,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "15907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																	"typeString": "struct StakeChamps.Staker memory"
																}
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "unstakedAtTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1044,
															"src": "15907:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "getHoursFromTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "15885:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15885:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15858:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1524,
																"name": "hoursUnstakedFor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "16019:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "313230",
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16039:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_120_by_1",
																	"typeString": "int_const 120"
																},
																"value": "120"
															},
															"src": "16019:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420756e7374616b6520696e20636f6f6c646f776e20706572696f64",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16044:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4",
																"typeString": "literal_string \"Cannot unstake in cooldown period\""
															},
															"value": "Cannot unstake in cooldown period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4",
																"typeString": "literal_string \"Cannot unstake in cooldown period\""
															}
														],
														"id": 1523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16011:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16011:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "16011:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1535,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "16148:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakeChamps_$1824",
																					"typeString": "contract StakeChamps"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakeChamps_$1824",
																					"typeString": "contract StakeChamps"
																				}
																			],
																			"id": 1534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16140:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1533,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16140:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16140:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"id": 1531,
																		"name": "ChampsContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "16115:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$68",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 13,
																	"src": "16115:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16115:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1538,
																"name": "unstakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "16158:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16115:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a20496e73756666696369656e7420636f6e74726163742062616c616e6365",
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16186:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfca188c10ccbcd10108d0d17745e5c7c1a1e3f9fccb2c999dacbd65eeafacae",
																"typeString": "literal_string \"withdraw: Insufficient contract balance\""
															},
															"value": "withdraw: Insufficient contract balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfca188c10ccbcd10108d0d17745e5c7c1a1e3f9fccb2c999dacbd65eeafacae",
																"typeString": "literal_string \"withdraw: Insufficient contract balance\""
															}
														],
														"id": 1530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16093:145:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "16093:145:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1546,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "16279:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16279:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1548,
															"name": "unstakeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "16291:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1543,
															"name": "ChampsContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "16251:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 718,
														"src": "16251:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$68_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16251:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "16251:54:0"
											},
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1551,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "16318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unstakeAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "16318:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16342:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16318:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "16318:25:0"
											},
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1557,
															"name": "stakerInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "16354:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
																"typeString": "mapping(address => struct StakeChamps.Staker storage ref)"
															}
														},
														"id": 1560,
														"indexExpression": {
															"expression": {
																"id": 1558,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "16365:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16365:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16354:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_storage",
															"typeString": "struct StakeChamps.Staker storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1561,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "16379:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker memory"
														}
													},
													"src": "16354:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1055_storage",
														"typeString": "struct StakeChamps.Staker storage ref"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "16354:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1565,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "16454:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16454:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1567,
															"name": "unstakeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "16466:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1568,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "16481:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "16481:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1564,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "16445:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16445:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "EmitStatement",
												"src": "16440:57:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15660:2:0"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15672:0:0"
									},
									"scope": 1824,
									"src": "15643:902:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "16872:824:0",
										"statements": [
											{
												"assignments": [
													1591
												],
												"declarations": [
													{
														"constant": false,
														"id": 1591,
														"mutability": "mutable",
														"name": "_stakers",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "16883:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker"
														},
														"typeName": {
															"id": 1590,
															"name": "Staker",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1055,
															"src": "16883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_storage_ptr",
																"typeString": "struct StakeChamps.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1595,
												"initialValue": {
													"baseExpression": {
														"id": 1592,
														"name": "stakerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "16908:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
															"typeString": "mapping(address => struct StakeChamps.Staker storage ref)"
														}
													},
													"id": 1594,
													"indexExpression": {
														"id": 1593,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "16919:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16908:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1055_storage",
														"typeString": "struct StakeChamps.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16883:44:0"
											},
											{
												"expression": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1596,
														"name": "stakedChamps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "16938:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1597,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "16953:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1054,
														"src": "16953:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16938:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "16938:30:0"
											},
											{
												"expression": {
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1601,
														"name": "hoursStakedFor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "16979:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1603,
																	"name": "_stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "17018:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																		"typeString": "struct StakeChamps.Staker memory"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAtTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1042,
																"src": "17018:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1602,
															"name": "getHoursFromTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "16996:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16996:49:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16979:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "16979:66:0"
											},
											{
												"expression": {
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1608,
														"name": "unstakedAtTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "17056:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1609,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "17078:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "unstakedAtTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1044,
														"src": "17078:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17056:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "17056:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1613,
																		"name": "_stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "17122:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																			"typeString": "struct StakeChamps.Staker memory"
																		}
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "unstakeAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1052,
																	"src": "17122:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17147:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17122:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1617,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17121:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1618,
																		"name": "_stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "17154:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																			"typeString": "struct StakeChamps.Staker memory"
																		}
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardRedeemedAt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1046,
																	"src": "17154:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17183:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17154:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1622,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17153:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17121:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1638,
																"name": "_stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "17317:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																	"typeString": "struct StakeChamps.Staker memory"
																}
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardRedeemedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1046,
															"src": "17317:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17345:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17317:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1669,
														"nodeType": "Block",
														"src": "17471:118:0",
														"statements": [
															{
																"expression": {
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1656,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1584,
																		"src": "17486:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 1661,
																							"name": "_stakers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1591,
																							"src": "17532:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																								"typeString": "struct StakeChamps.Staker memory"
																							}
																						},
																						"id": 1662,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "stakedAtTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1042,
																						"src": "17532:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1663,
																							"name": "_stakers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1591,
																							"src": "17560:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																								"typeString": "struct StakeChamps.Staker memory"
																							}
																						},
																						"id": 1664,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1054,
																						"src": "17560:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1660,
																					"name": "calculateRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1806,
																					"src": "17515:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) view returns (uint256)"
																					}
																				},
																				"id": 1665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17515:61:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1657,
																					"name": "_stakers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1591,
																					"src": "17495:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																						"typeString": "struct StakeChamps.Staker memory"
																					}
																				},
																				"id": 1658,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "reward",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1048,
																				"src": "17495:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 241,
																			"src": "17495:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17495:82:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17486:91:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1668,
																"nodeType": "ExpressionStatement",
																"src": "17486:91:0"
															}
														]
													},
													"id": 1670,
													"nodeType": "IfStatement",
													"src": "17313:276:0",
													"trueBody": {
														"id": 1655,
														"nodeType": "Block",
														"src": "17348:117:0",
														"statements": [
															{
																"expression": {
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1642,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1584,
																		"src": "17363:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 1647,
																							"name": "_stakers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1591,
																							"src": "17409:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																								"typeString": "struct StakeChamps.Staker memory"
																							}
																						},
																						"id": 1648,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "rewardRedeemedAt",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1046,
																						"src": "17409:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1649,
																							"name": "_stakers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1591,
																							"src": "17436:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																								"typeString": "struct StakeChamps.Staker memory"
																							}
																						},
																						"id": 1650,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1054,
																						"src": "17436:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1646,
																					"name": "calculateRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1806,
																					"src": "17392:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) view returns (uint256)"
																					}
																				},
																				"id": 1651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17392:60:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1643,
																					"name": "_stakers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1591,
																					"src": "17372:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																						"typeString": "struct StakeChamps.Staker memory"
																					}
																				},
																				"id": 1644,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "reward",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1048,
																				"src": "17372:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 241,
																			"src": "17372:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17372:81:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17363:90:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1654,
																"nodeType": "ExpressionStatement",
																"src": "17363:90:0"
															}
														]
													}
												},
												"id": 1671,
												"nodeType": "IfStatement",
												"src": "17117:472:0",
												"trueBody": {
													"id": 1637,
													"nodeType": "Block",
													"src": "17187:120:0",
													"statements": [
														{
															"expression": {
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1624,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "17202:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1629,
																						"name": "_stakers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1591,
																						"src": "17248:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																							"typeString": "struct StakeChamps.Staker memory"
																						}
																					},
																					"id": 1630,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "unstakedAtTimestamp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1044,
																					"src": "17248:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1631,
																						"name": "_stakers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1591,
																						"src": "17278:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																							"typeString": "struct StakeChamps.Staker memory"
																						}
																					},
																					"id": 1632,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1054,
																					"src": "17278:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1628,
																				"name": "calculateRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1806,
																				"src": "17231:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17231:63:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1625,
																				"name": "_stakers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1591,
																				"src": "17211:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																					"typeString": "struct StakeChamps.Staker memory"
																				}
																			},
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "reward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1048,
																			"src": "17211:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 241,
																		"src": "17211:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17211:84:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17202:93:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1636,
															"nodeType": "ExpressionStatement",
															"src": "17202:93:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1672,
														"name": "unstakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "17599:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1673,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "17615:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "unstakeAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "17615:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17599:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "17599:38:0"
											},
											{
												"expression": {
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1677,
														"name": "claimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "17648:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1678,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "17665:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																"typeString": "struct StakeChamps.Staker memory"
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "claimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1050,
														"src": "17665:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17648:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "17648:40:0"
											}
										]
									},
									"functionSelector": "9be730da",
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myStakes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "_staker",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "16573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16572:17:0"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "stakedChamps",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "16654:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "hoursStakedFor",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "16689:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "unstakedAtTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "16726:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "16768:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "unstakeAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "16797:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "claimedRewards",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "16833:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:227:0"
									},
									"scope": 1824,
									"src": "16555:1141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "17762:40:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1688,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "17780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "17780:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1687,
												"id": 1690,
												"nodeType": "Return",
												"src": "17773:21:0"
											}
										]
									},
									"functionSelector": "86989038",
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalStakers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17727:2:0"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "17753:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17752:9:0"
									},
									"scope": 1824,
									"src": "17706:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "17882:527:0",
										"statements": [
											{
												"assignments": [
													1700
												],
												"declarations": [
													{
														"constant": false,
														"id": 1700,
														"mutability": "mutable",
														"name": "_staker",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "17893:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
															"typeString": "struct StakeChamps.Staker"
														},
														"typeName": {
															"id": 1699,
															"name": "Staker",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1055,
															"src": "17893:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1055_storage_ptr",
																"typeString": "struct StakeChamps.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1704,
												"initialValue": {
													"baseExpression": {
														"id": 1701,
														"name": "stakerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "17917:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1055_storage_$",
															"typeString": "mapping(address => struct StakeChamps.Staker storage ref)"
														}
													},
													"id": 1703,
													"indexExpression": {
														"id": 1702,
														"name": "staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "17928:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17917:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1055_storage",
														"typeString": "struct StakeChamps.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17893:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1705,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "17953:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																			"typeString": "struct StakeChamps.Staker memory"
																		}
																	},
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "unstakeAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1052,
																	"src": "17953:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17977:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17953:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1709,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17952:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1710,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "17984:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																			"typeString": "struct StakeChamps.Staker memory"
																		}
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardRedeemedAt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1046,
																	"src": "17984:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18012:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17984:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1714,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17983:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17952:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1728,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1700,
																"src": "18141:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																	"typeString": "struct StakeChamps.Staker memory"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardRedeemedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1046,
															"src": "18141:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18168:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18141:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1755,
														"nodeType": "Block",
														"src": "18289:113:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1748,
																						"name": "_staker",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1700,
																						"src": "18347:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																							"typeString": "struct StakeChamps.Staker memory"
																						}
																					},
																					"id": 1749,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedAtTimestamp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1042,
																					"src": "18347:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1750,
																						"name": "_staker",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1700,
																						"src": "18374:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																							"typeString": "struct StakeChamps.Staker memory"
																						}
																					},
																					"id": 1751,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1054,
																					"src": "18374:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1747,
																				"name": "calculateRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1806,
																				"src": "18330:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18330:59:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1744,
																				"name": "_staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1700,
																				"src": "18311:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																					"typeString": "struct StakeChamps.Staker memory"
																				}
																			},
																			"id": 1745,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "reward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1048,
																			"src": "18311:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 241,
																		"src": "18311:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18311:79:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1698,
																"id": 1754,
																"nodeType": "Return",
																"src": "18304:86:0"
															}
														]
													},
													"id": 1756,
													"nodeType": "IfStatement",
													"src": "18137:265:0",
													"trueBody": {
														"id": 1743,
														"nodeType": "Block",
														"src": "18171:112:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1736,
																						"name": "_staker",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1700,
																						"src": "18229:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																							"typeString": "struct StakeChamps.Staker memory"
																						}
																					},
																					"id": 1737,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "rewardRedeemedAt",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1046,
																					"src": "18229:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1738,
																						"name": "_staker",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1700,
																						"src": "18255:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																							"typeString": "struct StakeChamps.Staker memory"
																						}
																					},
																					"id": 1739,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1054,
																					"src": "18255:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1735,
																				"name": "calculateRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1806,
																				"src": "18212:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18212:58:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1732,
																				"name": "_staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1700,
																				"src": "18193:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																					"typeString": "struct StakeChamps.Staker memory"
																				}
																			},
																			"id": 1733,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "reward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1048,
																			"src": "18193:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 241,
																		"src": "18193:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18193:78:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1698,
																"id": 1742,
																"nodeType": "Return",
																"src": "18186:85:0"
															}
														]
													}
												},
												"id": 1757,
												"nodeType": "IfStatement",
												"src": "17948:454:0",
												"trueBody": {
													"id": 1727,
													"nodeType": "Block",
													"src": "18016:115:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1720,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1700,
																					"src": "18074:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																						"typeString": "struct StakeChamps.Staker memory"
																					}
																				},
																				"id": 1721,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "unstakedAtTimestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1044,
																				"src": "18074:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 1722,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1700,
																					"src": "18103:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																						"typeString": "struct StakeChamps.Staker memory"
																					}
																				},
																				"id": 1723,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1054,
																				"src": "18103:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1719,
																			"name": "calculateRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1806,
																			"src": "18057:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) view returns (uint256)"
																			}
																		},
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18057:61:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1716,
																			"name": "_staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1700,
																			"src": "18038:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1055_memory_ptr",
																				"typeString": "struct StakeChamps.Staker memory"
																			}
																		},
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "reward",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1048,
																		"src": "18038:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 241,
																	"src": "18038:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18038:81:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1698,
															"id": 1726,
															"nodeType": "Return",
															"src": "18031:88:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "82d366d0",
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earnedRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "staker",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "17836:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17835:16:0"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "17873:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17872:9:0"
									},
									"scope": 1824,
									"src": "17813:596:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "18579:297:0",
										"statements": [
											{
												"assignments": [
													1770
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "hoursStakedFor",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "18590:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18590:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1774,
												"initialValue": {
													"arguments": [
														{
															"id": 1772,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "18637:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1771,
														"name": "getHoursFromTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "18615:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18615:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18590:57:0"
											},
											{
												"assignments": [
													1776
												],
												"declarations": [
													{
														"constant": false,
														"id": 1776,
														"mutability": "mutable",
														"name": "tokenPerYear",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "18660:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1775,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1785,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18705:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"id": 1779,
																			"name": "APY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1038,
																			"src": "18695:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1777,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1764,
																			"src": "18684:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 295,
																		"src": "18684:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18684:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1781,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "18683:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 316,
														"src": "18683:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18683:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18660:49:0"
											},
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "tokenPerDay",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "18720:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18720:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "333635",
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18759:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_365_by_1",
																"typeString": "int_const 365"
															},
															"value": "365"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_365_by_1",
																"typeString": "int_const 365"
															}
														],
														"expression": {
															"id": 1788,
															"name": "tokenPerYear",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "18742:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 316,
														"src": "18742:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18742:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18720:43:0"
											},
											{
												"assignments": [
													1794
												],
												"declarations": [
													{
														"constant": false,
														"id": 1794,
														"mutability": "mutable",
														"name": "tokenPerHour",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "18774:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1793,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1799,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3234",
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18813:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_24_by_1",
																"typeString": "int_const 24"
															},
															"value": "24"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_24_by_1",
																"typeString": "int_const 24"
															}
														],
														"expression": {
															"id": 1795,
															"name": "tokenPerDay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "18797:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 316,
														"src": "18797:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18797:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18774:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1802,
															"name": "hoursStakedFor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "18853:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1800,
															"name": "tokenPerHour",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "18836:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 295,
														"src": "18836:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18836:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1768,
												"id": 1804,
												"nodeType": "Return",
												"src": "18829:39:0"
											}
										]
									},
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "18417:56:0",
										"text": " @dev Returns the calculated rewards"
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "18505:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "18524:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18504:35:0"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "18563:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18562:16:0"
									},
									"scope": 1824,
									"src": "18479:397:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "19053:119:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1814,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "19126:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "19126:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1816,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1809,
																	"src": "19144:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19126:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1818,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19125:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19157:7:0",
														"subdenomination": "hours",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "1"
													},
													"src": "19125:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1813,
												"id": 1821,
												"nodeType": "Return",
												"src": "19118:46:0"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "18884:81:0",
										"text": " @dev Returns the number of hours for which Champs was staked"
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHoursFromTimestamp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "19002:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19001:19:0"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "19044:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19043:9:0"
									},
									"scope": 1824,
									"src": "18971:201:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1825,
							"src": "10791:8384:0"
						}
					],
					"src": "37:19138:0"
				},
				"id": 0
			}
		}
	}
}