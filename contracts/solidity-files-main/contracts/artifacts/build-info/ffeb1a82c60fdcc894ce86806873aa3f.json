{
	"id": "ffeb1a82c60fdcc894ce86806873aa3f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/krav.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2023-08-01\r\n*/\r\n\r\n// Sources flattened with hardhat v2.15.0 https://hardhat.org\r\n\r\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v4.3.3\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol@v4.3.3\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/Context.sol@v4.3.3\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/ERC20.sol@v4.3.3\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\npragma solidity 0.8.14;\r\n\r\ncontract KravToken is ERC20 {\r\n\r\n    constructor() ERC20(\"KRAV\", \"KRAV\") {\r\n        ERC20._mint(msg.sender, 10000000000 ether);\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/krav.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/krav.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/krav.sol\":{\"keccak256\":\"0x144bf8555fa2f827369957f5d29614be8bf0ccc54fd287048975f7a6fc309dbd\",\"urls\":[\"bzz-raw://3eb5cc69974c7f82a8daca94c5697871cc517addd9c6692ddb12a1c944081aae\",\"dweb:/ipfs/QmWXLoWiJdiuVRREGesFJ5DmHa7VCNwAdkTn4Pt484F5Md\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/krav.sol\":5788:16525  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/krav.sol\":6382:6498  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/krav.sol\":6449:6462  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/krav.sol\":6449:6454  _name */\n  0x03\n  swap1\n    /* \"contracts/krav.sol\":6449:6462  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/krav.sol\":6473:6490  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"contracts/krav.sol\":6473:6480  _symbol */\n  0x04\n  swap1\n    /* \"contracts/krav.sol\":6473:6490  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/krav.sol\":6382:6498  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/krav.sol\":5788:16525  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"contracts/krav.sol\":5788:16525  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/krav.sol\":5788:16525  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/krav.sol\":6568:6668  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/krav.sol\":8735:8904  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"contracts/krav.sol\":8735:8904  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"contracts/krav.sol\":7688:7796  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/krav.sol\":7776:7788  _totalSupply */\n      sload(0x02)\n        /* \"contracts/krav.sol\":7688:7796  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/krav.sol\":7688:7796  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/krav.sol\":9386:9878  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/krav.sol\":7530:7623  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/krav.sol\":7613:7615  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"contracts/krav.sol\":7530:7623  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"contracts/krav.sol\":10287:10502  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/krav.sol\":7859:7986  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":7960:7978  _balances[account] */\n      and\n        /* \"contracts/krav.sol\":7933:7940  uint256 */\n      0x00\n        /* \"contracts/krav.sol\":7960:7978  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/krav.sol\":7859:7986  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/krav.sol\":6787:6891  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/krav.sol\":11005:11418  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/krav.sol\":8199:8374  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/krav.sol\":8437:8588  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":8553:8571  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/krav.sol\":8526:8533  uint256 */\n      0x00\n        /* \"contracts/krav.sol\":8553:8571  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":8553:8564  _allowances */\n      0x01\n        /* \"contracts/krav.sol\":8553:8571  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/krav.sol\":8553:8580  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/krav.sol\":8437:8588  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/krav.sol\":6568:6668  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"contracts/krav.sol\":6622:6635  string memory */\n      0x60\n        /* \"contracts/krav.sol\":6655:6660  _name */\n      0x03\n        /* \"contracts/krav.sol\":6648:6660  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/krav.sol\":6568:6668  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/krav.sol\":8735:8904  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"contracts/krav.sol\":8818:8822  bool */\n      0x00\n        /* \"contracts/krav.sol\":8835:8874  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":8858:8865  spender */\n      dup5\n        /* \"contracts/krav.sol\":8867:8873  amount */\n      dup5\n        /* \"contracts/krav.sol\":8835:8843  _approve */\n      tag_74\n        /* \"contracts/krav.sol\":8835:8874  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"contracts/krav.sol\":8892:8896  true */\n      0x01\n        /* \"contracts/krav.sol\":8735:8904  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/krav.sol\":9386:9878  function transferFrom(... */\n    tag_32:\n        /* \"contracts/krav.sol\":9526:9530  bool */\n      0x00\n        /* \"contracts/krav.sol\":9543:9579  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"contracts/krav.sol\":9553:9559  sender */\n      dup5\n        /* \"contracts/krav.sol\":9561:9570  recipient */\n      dup5\n        /* \"contracts/krav.sol\":9572:9578  amount */\n      dup5\n        /* \"contracts/krav.sol\":9543:9552  _transfer */\n      tag_78\n        /* \"contracts/krav.sol\":9543:9579  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":9619:9638  _allowances[sender] */\n      dup5\n      and\n        /* \"contracts/krav.sol\":9592:9616  uint256 currentAllowance */\n      0x00\n        /* \"contracts/krav.sol\":9619:9638  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":9619:9630  _allowances */\n      0x01\n        /* \"contracts/krav.sol\":9619:9638  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":9619:9652  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/krav.sol\":9671:9697  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/krav.sol\":9663:9742  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2992:2994   */\n      0x20\n        /* \"contracts/krav.sol\":9663:9742  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2974:2995   */\n      mstore\n        /* \"#utility.yul\":3031:3033   */\n      0x28\n        /* \"#utility.yul\":3011:3029   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3004:3034   */\n      mstore\n        /* \"#utility.yul\":3070:3104   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3050:3068   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3043:3105   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3121:3139   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3114:3152   */\n      mstore\n        /* \"#utility.yul\":3169:3188   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":9663:9742  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/krav.sol\":9778:9835  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"contracts/krav.sol\":9787:9793  sender */\n      dup6\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":9828:9834  amount */\n      dup6\n        /* \"contracts/krav.sol\":9809:9825  currentAllowance */\n      dup5\n        /* \"contracts/krav.sol\":9809:9834  currentAllowance - amount */\n      sub\n        /* \"contracts/krav.sol\":9778:9786  _approve */\n      tag_74\n        /* \"contracts/krav.sol\":9778:9835  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/krav.sol\":9866:9870  true */\n      0x01\n      swap5\n        /* \"contracts/krav.sol\":9386:9878  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/krav.sol\":10287:10502  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":10375:10379  bool */\n      0x00\n        /* \"contracts/krav.sol\":10424:10449  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":10424:10435  _allowances */\n      0x01\n        /* \"contracts/krav.sol\":10424:10449  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":10424:10458  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/krav.sol\":10375:10379  bool */\n      swap1\n      swap2\n        /* \"contracts/krav.sol\":10392:10472  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"contracts/krav.sol\":10415:10422  spender */\n      dup6\n      swap1\n        /* \"contracts/krav.sol\":10424:10471  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"contracts/krav.sol\":10461:10471  addedValue */\n      dup7\n      swap1\n        /* \"contracts/krav.sol\":10424:10471  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"contracts/krav.sol\":10392:10400  _approve */\n      tag_74\n        /* \"contracts/krav.sol\":10392:10472  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"contracts/krav.sol\":6787:6891  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"contracts/krav.sol\":6843:6856  string memory */\n      0x60\n        /* \"contracts/krav.sol\":6876:6883  _symbol */\n      0x04\n        /* \"contracts/krav.sol\":6869:6883  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/krav.sol\":11005:11418  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":11098:11102  bool */\n      0x00\n        /* \"contracts/krav.sol\":11142:11167  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":11142:11153  _allowances */\n      0x01\n        /* \"contracts/krav.sol\":11142:11167  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":11142:11176  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/krav.sol\":11195:11230  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/krav.sol\":11187:11272  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3631:3633   */\n      0x20\n        /* \"contracts/krav.sol\":11187:11272  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3613:3634   */\n      mstore\n        /* \"#utility.yul\":3670:3672   */\n      0x25\n        /* \"#utility.yul\":3650:3668   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3643:3673   */\n      mstore\n        /* \"#utility.yul\":3709:3743   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3689:3707   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3682:3744   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3760:3778   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3753:3788   */\n      mstore\n        /* \"#utility.yul\":3805:3824   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":11187:11272  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":3429:3830   */\n      jump\n        /* \"contracts/krav.sol\":11187:11272  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_101:\n        /* \"contracts/krav.sol\":11308:11375  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":11331:11338  spender */\n      dup6\n        /* \"contracts/krav.sol\":11359:11374  subtractedValue */\n      dup6\n        /* \"contracts/krav.sol\":11340:11356  currentAllowance */\n      dup5\n        /* \"contracts/krav.sol\":11340:11374  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/krav.sol\":11308:11316  _approve */\n      tag_74\n        /* \"contracts/krav.sol\":11308:11375  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"contracts/krav.sol\":11406:11410  true */\n      0x01\n      swap4\n        /* \"contracts/krav.sol\":11005:11418  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/krav.sol\":8199:8374  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"contracts/krav.sol\":8285:8289  bool */\n      0x00\n        /* \"contracts/krav.sol\":8302:8344  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":8326:8335  recipient */\n      dup5\n        /* \"contracts/krav.sol\":8337:8343  amount */\n      dup5\n        /* \"contracts/krav.sol\":8302:8311  _transfer */\n      tag_78\n        /* \"contracts/krav.sol\":8302:8344  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/krav.sol\":14689:15069  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":14825:14844  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/krav.sol\":14817:14885  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4037:4039   */\n      0x20\n        /* \"contracts/krav.sol\":14817:14885  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4019:4040   */\n      mstore\n        /* \"#utility.yul\":4076:4078   */\n      0x24\n        /* \"#utility.yul\":4056:4074   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4049:4079   */\n      mstore\n        /* \"#utility.yul\":4115:4149   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4095:4113   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4088:4150   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4166:4184   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4159:4193   */\n      mstore\n        /* \"#utility.yul\":4210:4229   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":14817:14885  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3835:4235   */\n      jump\n        /* \"contracts/krav.sol\":14817:14885  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":14904:14925  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/krav.sol\":14896:14964  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4442:4444   */\n      0x20\n        /* \"contracts/krav.sol\":14896:14964  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4424:4445   */\n      mstore\n        /* \"#utility.yul\":4481:4483   */\n      0x22\n        /* \"#utility.yul\":4461:4479   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4454:4484   */\n      mstore\n        /* \"#utility.yul\":4520:4554   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4500:4518   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4493:4555   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4571:4589   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4564:4596   */\n      mstore\n        /* \"#utility.yul\":4613:4632   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":14896:14964  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4240:4638   */\n      jump\n        /* \"contracts/krav.sol\":14896:14964  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":14977:14995  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":14977:14988  _allowances */\n      0x01\n        /* \"contracts/krav.sol\":14977:14995  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/krav.sol\":14977:15004  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/krav.sol\":14977:15013  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/krav.sol\":15029:15061  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":15029:15061  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/krav.sol\":15029:15061  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/krav.sol\":14689:15069  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/krav.sol\":11908:12641  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12048:12068  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/krav.sol\":12040:12110  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4845:4847   */\n      0x20\n        /* \"contracts/krav.sol\":12040:12110  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4827:4848   */\n      mstore\n        /* \"#utility.yul\":4884:4886   */\n      0x25\n        /* \"#utility.yul\":4864:4882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4857:4887   */\n      mstore\n        /* \"#utility.yul\":4923:4957   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4903:4921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4896:4958   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4974:4992   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4967:5002   */\n      mstore\n        /* \"#utility.yul\":5019:5038   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":12040:12110  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4643:5044   */\n      jump\n        /* \"contracts/krav.sol\":12040:12110  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12129:12152  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/krav.sol\":12121:12192  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5251:5253   */\n      0x20\n        /* \"contracts/krav.sol\":12121:12192  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5233:5254   */\n      mstore\n        /* \"#utility.yul\":5290:5292   */\n      0x23\n        /* \"#utility.yul\":5270:5288   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5263:5293   */\n      mstore\n        /* \"#utility.yul\":5329:5363   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5309:5327   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5302:5364   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5380:5398   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5373:5406   */\n      mstore\n        /* \"#utility.yul\":5423:5442   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":12121:12192  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":5049:5448   */\n      jump\n        /* \"contracts/krav.sol\":12121:12192  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12289:12306  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/krav.sol\":12265:12286  uint256 senderBalance */\n      0x00\n        /* \"contracts/krav.sol\":12289:12306  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/krav.sol\":12325:12348  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/krav.sol\":12317:12391  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5655:5657   */\n      0x20\n        /* \"contracts/krav.sol\":12317:12391  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5637:5658   */\n      mstore\n        /* \"#utility.yul\":5694:5696   */\n      0x26\n        /* \"#utility.yul\":5674:5692   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5667:5697   */\n      mstore\n        /* \"#utility.yul\":5733:5767   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5713:5731   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5706:5768   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5784:5802   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5777:5813   */\n      mstore\n        /* \"#utility.yul\":5830:5849   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":12317:12391  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":5453:5855   */\n      jump\n        /* \"contracts/krav.sol\":12317:12391  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12427:12444  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/krav.sol\":12427:12436  _balances */\n      0x00\n        /* \"contracts/krav.sol\":12427:12444  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/krav.sol\":12447:12469  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/krav.sol\":12427:12469  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/krav.sol\":12491:12511  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/krav.sol\":12491:12521  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"contracts/krav.sol\":12463:12469  amount */\n      dup5\n      swap3\n        /* \"contracts/krav.sol\":12427:12436  _balances */\n      swap1\n        /* \"contracts/krav.sol\":12491:12521  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"contracts/krav.sol\":12463:12469  amount */\n      dup5\n      swap1\n        /* \"contracts/krav.sol\":12491:12521  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/krav.sol\":12556:12565  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12539:12574  Transfer(sender, recipient, amount) */\n      and\n        /* \"contracts/krav.sol\":12548:12554  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12539:12574  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/krav.sol\":12567:12573  amount */\n      dup5\n        /* \"contracts/krav.sol\":12539:12574  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/krav.sol\":12539:12574  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/krav.sol\":12029:12641  {... */\n      pop\n        /* \"contracts/krav.sol\":11908:12641  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_140:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_140)\n    tag_142:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_143:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_137:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_145:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_147:\n        /* \"#utility.yul\":962:991   */\n      tag_148\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_137\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_152:\n        /* \"#utility.yul\":1612:1641   */\n      tag_153\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_137\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_154\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_137\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_157:\n        /* \"#utility.yul\":2100:2129   */\n      tag_158\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_160:\n        /* \"#utility.yul\":2308:2337   */\n      tag_161\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_137\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_162\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_137\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_164:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_165:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3199:3424   */\n    tag_91:\n        /* \"#utility.yul\":3239:3242   */\n      0x00\n        /* \"#utility.yul\":3270:3271   */\n      dup3\n        /* \"#utility.yul\":3266:3272   */\n      not\n        /* \"#utility.yul\":3263:3264   */\n      dup3\n        /* \"#utility.yul\":3260:3273   */\n      gt\n        /* \"#utility.yul\":3257:3393   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":3315:3325   */\n      0x4e487b71\n        /* \"#utility.yul\":3310:3313   */\n      0xe0\n        /* \"#utility.yul\":3306:3326   */\n      shl\n        /* \"#utility.yul\":3303:3304   */\n      0x00\n        /* \"#utility.yul\":3296:3327   */\n      mstore\n        /* \"#utility.yul\":3350:3354   */\n      0x11\n        /* \"#utility.yul\":3347:3348   */\n      0x04\n        /* \"#utility.yul\":3340:3355   */\n      mstore\n        /* \"#utility.yul\":3378:3382   */\n      0x24\n        /* \"#utility.yul\":3375:3376   */\n      0x00\n        /* \"#utility.yul\":3368:3383   */\n      revert\n        /* \"#utility.yul\":3257:3393   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":3409:3418   */\n      add\n      swap1\n        /* \"#utility.yul\":3199:3424   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122037bc0648aacf450e92e80a1268e931c890b7be340a447f8ba5e6c8a07bdc19bc64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:1"
															},
															"nodeType": "YulIf",
															"src": "921:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:1"
															},
															"nodeType": "YulIf",
															"src": "1164:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:1"
															},
															"nodeType": "YulIf",
															"src": "1301:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:1"
															},
															"nodeType": "YulIf",
															"src": "1474:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:1",
														"type": ""
													}
												],
												"src": "1036:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:1"
															},
															"nodeType": "YulIf",
															"src": "1746:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:1"
															},
															"nodeType": "YulIf",
															"src": "1816:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:1",
														"type": ""
													}
												],
												"src": "1603:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5438038062000b548339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b6108c380620002916000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610867565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610867565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b60208210810361086157634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088857634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122037bc0648aacf450e92e80a1268e931c890b7be340a447f8ba5e6c8a07bdc19bc64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB54 CODESIZE SUB DUP1 PUSH3 0xB54 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x281 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x27B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C3 DUP1 PUSH3 0x291 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x867 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x861 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xBC MOD BASEFEE 0xAA 0xCF GASLIMIT 0xE SWAP3 0xE8 EXP SLT PUSH9 0xE931C890B7BE340A44 PUSH32 0x8BA5E6C8A07BDC19BC64736F6C634300080E0033000000000000000000000000 ",
							"sourceMap": "5788:10737:0:-:0;;;6382:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6449:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6473:17:0;;;;:7;;:17;;;;;:::i;:::-;;6382:116;;5788:10737;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5788:10737:0;;;-1:-1:-1;5788:10737:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:1:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:1;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;5788:10737:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_640": {
									"entryPoint": 1038,
									"id": 640,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_651": {
									"entryPoint": null,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_467": {
									"entryPoint": 1330,
									"id": 467,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_276": {
									"entryPoint": 600,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_390": {
									"entryPoint": 872,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_351": {
									"entryPoint": 797,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_172": {
									"entryPoint": 454,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 857,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_324": {
									"entryPoint": 622,
									"id": 324,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_237": {
									"entryPoint": 1025,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5857:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:1"
															},
															"nodeType": "YulIf",
															"src": "2237:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:1",
														"type": ""
													}
												],
												"src": "2140:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:1"
															},
															"nodeType": "YulIf",
															"src": "2548:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:1"
															},
															"nodeType": "YulIf",
															"src": "2618:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:1",
														"type": ""
													}
												],
												"src": "2405:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2964:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2981:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2974:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2974:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3015:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3026:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3011:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3004:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3054:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3065:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3050:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3070:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3043:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3136:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:18:1"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3141:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3161:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3173:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3184:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3169:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3169:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3161:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2941:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2955:4:1",
														"type": ""
													}
												],
												"src": "2790:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3247:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3282:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3303:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3310:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3315:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3306:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3296:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3296:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3296:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3347:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3350:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3340:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3340:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3340:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3378:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3368:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3368:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3368:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3263:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3270:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3260:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3260:13:1"
															},
															"nodeType": "YulIf",
															"src": "3257:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3402:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3413:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3416:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3230:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3233:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3239:3:1",
														"type": ""
													}
												],
												"src": "3199:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3631:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3665:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3643:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3693:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3704:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3689:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3689:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3709:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3682:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3775:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3760:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3780:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3753:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3797:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3809:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3820:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3805:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3805:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3797:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3580:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3594:4:1",
														"type": ""
													}
												],
												"src": "3429:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4026:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4037:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4019:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4060:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4056:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4056:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4076:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4099:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4110:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4115:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4088:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4088:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4170:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4181:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4166:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4166:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4186:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4159:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4159:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4202:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4214:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4225:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4210:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4202:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3986:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4000:4:1",
														"type": ""
													}
												],
												"src": "3835:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4414:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4431:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4442:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4424:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4424:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4465:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4476:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4461:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4481:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4454:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4504:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4515:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4500:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4500:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4520:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4493:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4591:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4564:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4564:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4605:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4628:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4613:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4605:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4391:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4405:4:1",
														"type": ""
													}
												],
												"src": "4240:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4817:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4834:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4845:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4827:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4879:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4884:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4857:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4857:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4907:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4918:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4903:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4903:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4923:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4896:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4989:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4994:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4967:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5011:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5023:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5034:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5011:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4794:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4808:4:1",
														"type": ""
													}
												],
												"src": "4643:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5223:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5240:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5251:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5233:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5274:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5285:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5270:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5270:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5290:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5313:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5324:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5309:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5329:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5302:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5302:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5395:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5380:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5400:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5373:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5373:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5415:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5427:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5438:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5423:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5415:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5200:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5214:4:1",
														"type": ""
													}
												],
												"src": "5049:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5627:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5644:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5655:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5637:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5678:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5689:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5674:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5674:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5694:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5667:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5717:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5728:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5713:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5733:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5804:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5777:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5822:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5834:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5845:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5830:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5830:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5822:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5604:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5618:4:1",
														"type": ""
													}
												],
												"src": "5453:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610867565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610867565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b60208210810361086157634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088857634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122037bc0648aacf450e92e80a1268e931c890b7be340a447f8ba5e6c8a07bdc19bc64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x867 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x861 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xBC MOD BASEFEE 0xAA 0xCF GASLIMIT 0xE SWAP3 0xE8 EXP SLT PUSH9 0xE931C890B7BE340A44 PUSH32 0x8BA5E6C8A07BDC19BC64736F6C634300080E0033000000000000000000000000 ",
							"sourceMap": "5788:10737:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6568:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8735:169;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;8735:169:0;1053:187:1;7688:108:0;7776:12;;7688:108;;;1391:25:1;;;1379:2;1364:18;7688:108:0;1245:177:1;9386:492:0;;;;;;:::i;:::-;;:::i;7530:93::-;;;7613:2;1902:36:1;;1890:2;1875:18;7530:93:0;1760:184:1;10287:215:0;;;;;;:::i;:::-;;:::i;7859:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7960:18:0;7933:7;7960:18;;;;;;;;;;;;7859:127;6787:104;;;:::i;11005:413::-;;;;;;:::i;:::-;;:::i;8199:175::-;;;;;;:::i;:::-;;:::i;8437:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8553:18:0;;;8526:7;8553:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8437:151;6568:100;6622:13;6655:5;6648:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6568:100;:::o;8735:169::-;8818:4;8835:39;4355:10;8858:7;8867:6;8835:8;:39::i;:::-;-1:-1:-1;8892:4:0;8735:169;;;;:::o;9386:492::-;9526:4;9543:36;9553:6;9561:9;9572:6;9543:9;:36::i;:::-;-1:-1:-1;;;;;9619:19:0;;9592:24;9619:19;;;:11;:19;;;;;;;;4355:10;9619:33;;;;;;;;9671:26;;;;9663:79;;;;-1:-1:-1;;;9663:79:0;;2992:2:1;9663:79:0;;;2974:21:1;3031:2;3011:18;;;3004:30;3070:34;3050:18;;;3043:62;-1:-1:-1;;;3121:18:1;;;3114:38;3169:19;;9663:79:0;;;;;;;;;9778:57;9787:6;4355:10;9828:6;9809:16;:25;9778:8;:57::i;:::-;-1:-1:-1;9866:4:0;;9386:492;-1:-1:-1;;;;9386:492:0:o;10287:215::-;4355:10;10375:4;10424:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10424:34:0;;;;;;;;;;10375:4;;10392:80;;10415:7;;10424:47;;10461:10;;10424:47;:::i;:::-;10392:8;:80::i;6787:104::-;6843:13;6876:7;6869:14;;;;;:::i;11005:413::-;4355:10;11098:4;11142:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;11142:34:0;;;;;;;;;;11195:35;;;;11187:85;;;;-1:-1:-1;;;11187:85:0;;3631:2:1;11187:85:0;;;3613:21:1;3670:2;3650:18;;;3643:30;3709:34;3689:18;;;3682:62;-1:-1:-1;;;3760:18:1;;;3753:35;3805:19;;11187:85:0;3429:401:1;11187:85:0;11308:67;4355:10;11331:7;11359:15;11340:16;:34;11308:8;:67::i;:::-;-1:-1:-1;11406:4:0;;11005:413;-1:-1:-1;;;11005:413:0:o;8199:175::-;8285:4;8302:42;4355:10;8326:9;8337:6;8302:9;:42::i;14689:380::-;-1:-1:-1;;;;;14825:19:0;;14817:68;;;;-1:-1:-1;;;14817:68:0;;4037:2:1;14817:68:0;;;4019:21:1;4076:2;4056:18;;;4049:30;4115:34;4095:18;;;4088:62;-1:-1:-1;;;4166:18:1;;;4159:34;4210:19;;14817:68:0;3835:400:1;14817:68:0;-1:-1:-1;;;;;14904:21:0;;14896:68;;;;-1:-1:-1;;;14896:68:0;;4442:2:1;14896:68:0;;;4424:21:1;4481:2;4461:18;;;4454:30;4520:34;4500:18;;;4493:62;-1:-1:-1;;;4571:18:1;;;4564:32;4613:19;;14896:68:0;4240:398:1;14896:68:0;-1:-1:-1;;;;;14977:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15029:32;;1391:25:1;;;15029:32:0;;1364:18:1;15029:32:0;;;;;;;14689:380;;;:::o;11908:733::-;-1:-1:-1;;;;;12048:20:0;;12040:70;;;;-1:-1:-1;;;12040:70:0;;4845:2:1;12040:70:0;;;4827:21:1;4884:2;4864:18;;;4857:30;4923:34;4903:18;;;4896:62;-1:-1:-1;;;4974:18:1;;;4967:35;5019:19;;12040:70:0;4643:401:1;12040:70:0;-1:-1:-1;;;;;12129:23:0;;12121:71;;;;-1:-1:-1;;;12121:71:0;;5251:2:1;12121:71:0;;;5233:21:1;5290:2;5270:18;;;5263:30;5329:34;5309:18;;;5302:62;-1:-1:-1;;;5380:18:1;;;5373:33;5423:19;;12121:71:0;5049:399:1;12121:71:0;-1:-1:-1;;;;;12289:17:0;;12265:21;12289:17;;;;;;;;;;;12325:23;;;;12317:74;;;;-1:-1:-1;;;12317:74:0;;5655:2:1;12317:74:0;;;5637:21:1;5694:2;5674:18;;;5667:30;5733:34;5713:18;;;5706:62;-1:-1:-1;;;5784:18:1;;;5777:36;5830:19;;12317:74:0;5453:402:1;12317:74:0;-1:-1:-1;;;;;12427:17:0;;;:9;:17;;;;;;;;;;;12447:22;;;12427:42;;12491:20;;;;;;;;:30;;12463:6;;12427:9;12491:30;;12463:6;;12491:30;:::i;:::-;;;;;;;;12556:9;-1:-1:-1;;;;;12539:35:0;12548:6;-1:-1:-1;;;;;12539:35:0;;12567:6;12539:35;;;;1391:25:1;;1379:2;1364:18;;1245:177;12539:35:0;;;;;;;;12029:612;11908:733;;;:::o;14:597:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;3199:225::-;3239:3;3270:1;3266:6;3263:1;3260:13;3257:136;;;3315:10;3310:3;3306:20;3303:1;3296:31;3350:4;3347:1;3340:15;3378:4;3375:1;3368:15;3257:136;-1:-1:-1;3409:9:1;;3199:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6382,
									"end": 6498,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6449,
									"end": 6462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6480,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6473,
									"end": 6480,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6473,
									"end": 6490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5788,
									"end": 16525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5788,
									"end": 16525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5788,
									"end": 16525,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122037bc0648aacf450e92e80a1268e931c890b7be340a447f8ba5e6c8a07bdc19bc64736f6c634300080e0033",
									".code": [
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5788,
											"end": 16525,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6568,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6568,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8735,
											"end": 8904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8735,
											"end": 8904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7788,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7776,
											"end": 7788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9386,
											"end": 9878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9386,
											"end": 9878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7615,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10287,
											"end": 10502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10287,
											"end": 10502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7859,
											"end": 7986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6787,
											"end": 6891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11005,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11005,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8199,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8199,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8437,
											"end": 8588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8526,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6635,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6655,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6648,
											"end": 6660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6648,
											"end": 6660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8818,
											"end": 8822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8835,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 8873,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8835,
											"end": 8874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8874,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8835,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8892,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9526,
											"end": 9530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9570,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9572,
											"end": 9578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9543,
											"end": 9579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9592,
											"end": 9616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9630,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9697,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2994,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 2995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3104,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3114,
											"end": 3152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3169,
											"end": 3188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9778,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9787,
											"end": 9793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9828,
											"end": 9834,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9809,
											"end": 9825,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9809,
											"end": 9834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9778,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9778,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9778,
											"end": 9835,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9778,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9386,
											"end": 9878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10392,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10392,
											"end": 10472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10422,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10424,
											"end": 10471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10471,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10424,
											"end": 10471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10471,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10424,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10392,
											"end": 10472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6876,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6869,
											"end": 6883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6869,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6869,
											"end": 6883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11098,
											"end": 11102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3631,
											"end": 3633,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3643,
											"end": 3673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3743,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3429,
											"end": 3830,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11331,
											"end": 11338,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11374,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11308,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11375,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 11308,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11406,
											"end": 11410,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11406,
											"end": 11410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11005,
											"end": 11418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8302,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8326,
											"end": 8335,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8302,
											"end": 8344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 15069,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14689,
											"end": 15069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14825,
											"end": 14844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4149,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4159,
											"end": 4193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4229,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4210,
											"end": 4229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3835,
											"end": 4235,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14904,
											"end": 14925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4442,
											"end": 4444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4483,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4554,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4632,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4613,
											"end": 4632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4240,
											"end": 4638,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15013,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15013,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 15069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 15069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 15069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 15069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 12641,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 11908,
											"end": 12641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12048,
											"end": 12068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12048,
											"end": 12068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4827,
											"end": 4848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4886,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4864,
											"end": 4882,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4864,
											"end": 4882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5038,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5019,
											"end": 5038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4643,
											"end": 5044,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12129,
											"end": 12152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5251,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5442,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5423,
											"end": 5442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5049,
											"end": 5448,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5674,
											"end": 5692,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5674,
											"end": 5692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5697,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5830,
											"end": 5849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5453,
											"end": 5855,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12447,
											"end": 12469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12447,
											"end": 12469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12447,
											"end": 12469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12469,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12491,
											"end": 12521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12556,
											"end": 12565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12548,
											"end": 12554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12567,
											"end": 12573,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 12641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 12641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 12641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 12641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 962,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1612,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1660,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2100,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2308,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2356,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3424,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3199,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3273,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3310,
											"end": 3313,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3306,
											"end": 3326,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3340,
											"end": 3355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3383,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/krav.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/krav.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/krav.sol\":{\"keccak256\":\"0x144bf8555fa2f827369957f5d29614be8bf0ccc54fd287048975f7a6fc309dbd\",\"urls\":[\"bzz-raw://3eb5cc69974c7f82a8daca94c5697871cc517addd9c6692ddb12a1c944081aae\",\"dweb:/ipfs/QmWXLoWiJdiuVRREGesFJ5DmHa7VCNwAdkTn4Pt484F5Md\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "contracts/krav.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "contracts/krav.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "contracts/krav.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/krav.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "contracts/krav.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/krav.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/krav.sol\":{\"keccak256\":\"0x144bf8555fa2f827369957f5d29614be8bf0ccc54fd287048975f7a6fc309dbd\",\"urls\":[\"bzz-raw://3eb5cc69974c7f82a8daca94c5697871cc517addd9c6692ddb12a1c944081aae\",\"dweb:/ipfs/QmWXLoWiJdiuVRREGesFJ5DmHa7VCNwAdkTn4Pt484F5Md\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/krav.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/krav.sol\":{\"keccak256\":\"0x144bf8555fa2f827369957f5d29614be8bf0ccc54fd287048975f7a6fc309dbd\",\"urls\":[\"bzz-raw://3eb5cc69974c7f82a8daca94c5697871cc517addd9c6692ddb12a1c944081aae\",\"dweb:/ipfs/QmWXLoWiJdiuVRREGesFJ5DmHa7VCNwAdkTn4Pt484F5Md\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"KravToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/krav.sol\":16556:16695  contract KravToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/krav.sol\":16593:16690  constructor() ERC20(\"KRAV\", \"KRAV\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/krav.sol\":6382:6498  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe1, 0x25a920ab)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  dup2\n  mstore\n  dup6\n  mload\n  dup1\n  dup8\n  add\n  swap1\n  swap7\n  mstore\n  swap3\n  dup6\n  mstore\n  dup5\n  add\n  mstore\n    /* \"contracts/krav.sol\":6449:6462  _name = name_ */\n  dup2\n  mload\n    /* \"contracts/krav.sol\":6382:6498  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"contracts/krav.sol\":6449:6462  _name = name_ */\n  tag_5\n  swap2\n    /* \"contracts/krav.sol\":6449:6454  _name */\n  0x03\n  swap2\n    /* \"contracts/krav.sol\":6449:6462  _name = name_ */\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/krav.sol\":6473:6490  _symbol = symbol_ */\n  dup1\n  mload\n  tag_7\n  swap1\n    /* \"contracts/krav.sol\":6473:6480  _symbol */\n  0x04\n  swap1\n    /* \"contracts/krav.sol\":6473:6490  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/krav.sol\":6382:6498  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/krav.sol\":16640:16682  ERC20._mint(msg.sender, 10000000000 ether) */\n  tag_9\n    /* \"contracts/krav.sol\":16652:16662  msg.sender */\n  caller\n    /* \"contracts/krav.sol\":16664:16681  10000000000 ether */\n  0x204fce5e3e25026110000000\n    /* \"contracts/krav.sol\":16640:16651  ERC20._mint */\n  or(tag_0_63, shl(0x20, tag_10))\n    /* \"contracts/krav.sol\":16640:16682  ERC20._mint(msg.sender, 10000000000 ether) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/krav.sol\":16556:16695  contract KravToken is ERC20 {... */\n  jump(tag_38)\n    /* \"contracts/krav.sol\":12928:13327  function _mint(address account, uint256 amount) internal virtual {... */\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/krav.sol\":13012:13033  account != address(0) */\n  dup3\n  and\n    /* \"contracts/krav.sol\":13004:13069  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"contracts/krav.sol\":13004:13069  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1f\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:327   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:328   */\n  mstore\n    /* \"#utility.yul\":345:363   */\n  0x64\n  add\n    /* \"contracts/krav.sol\":13004:13069  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"contracts/krav.sol\":13160:13166  amount */\n  dup1\n    /* \"contracts/krav.sol\":13144:13156  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/krav.sol\":13144:13166  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/krav.sol\":13177:13195  _balances[account] */\n  dup3\n  and\n    /* \"contracts/krav.sol\":13177:13186  _balances */\n  0x00\n    /* \"contracts/krav.sol\":13177:13195  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/krav.sol\":13177:13205  _balances[account] += amount */\n  dup1\n  sload\n    /* \"contracts/krav.sol\":13199:13205  amount */\n  dup4\n  swap3\n    /* \"contracts/krav.sol\":13177:13186  _balances */\n  swap1\n    /* \"contracts/krav.sol\":13177:13205  _balances[account] += amount */\n  tag_20\n  swap1\n    /* \"contracts/krav.sol\":13199:13205  amount */\n  dup5\n  swap1\n    /* \"contracts/krav.sol\":13177:13205  _balances[account] += amount */\n  tag_19\n  jump\t// in\ntag_20:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"contracts/krav.sol\":13221:13258  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":750:775   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/krav.sol\":13221:13258  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"contracts/krav.sol\":13238:13239  0 */\n  0x00\n  swap1\n    /* \"contracts/krav.sol\":13221:13258  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":738:740   */\n  0x20\n    /* \"#utility.yul\":723:741   */\n  add\n    /* \"contracts/krav.sol\":13221:13258  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/krav.sol\":12928:13327  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/krav.sol\":16556:16695  contract KravToken is ERC20 {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_27\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_30\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_33)\ntag_30:\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_33)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_33\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\n  pop\n  tag_34\n  swap3\n  swap2\n  pop\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\ntag_36:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_36)\n    /* \"#utility.yul\":374:599   */\ntag_19:\n    /* \"#utility.yul\":414:417   */\n  0x00\n    /* \"#utility.yul\":445:446   */\n  dup3\n    /* \"#utility.yul\":441:447   */\n  not\n    /* \"#utility.yul\":438:439   */\n  dup3\n    /* \"#utility.yul\":435:448   */\n  gt\n    /* \"#utility.yul\":432:568   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":490:500   */\n  0x4e487b71\n    /* \"#utility.yul\":485:488   */\n  0xe0\n    /* \"#utility.yul\":481:501   */\n  shl\n    /* \"#utility.yul\":478:479   */\n  0x00\n    /* \"#utility.yul\":471:502   */\n  mstore\n    /* \"#utility.yul\":525:529   */\n  0x11\n    /* \"#utility.yul\":522:523   */\n  0x04\n    /* \"#utility.yul\":515:530   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x24\n    /* \"#utility.yul\":550:551   */\n  0x00\n    /* \"#utility.yul\":543:558   */\n  revert\n    /* \"#utility.yul\":432:568   */\ntag_41:\n  pop\n    /* \"#utility.yul\":584:593   */\n  add\n  swap1\n    /* \"#utility.yul\":374:599   */\n  jump\t// out\n    /* \"#utility.yul\":786:1166   */\ntag_28:\n    /* \"#utility.yul\":865:866   */\n  0x01\n    /* \"#utility.yul\":861:873   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":908:920   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":929:990   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":983:987   */\n  0x7f\n    /* \"#utility.yul\":975:981   */\n  dup3\n    /* \"#utility.yul\":971:988   */\n  and\n    /* \"#utility.yul\":961:988   */\n  swap2\n  pop\n    /* \"#utility.yul\":929:990   */\ntag_44:\n    /* \"#utility.yul\":1036:1038   */\n  0x20\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1025:1039   */\n  lt\n    /* \"#utility.yul\":1005:1023   */\n  dup2\n    /* \"#utility.yul\":1002:1040   */\n  sub\n    /* \"#utility.yul\":999:1160   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1082:1092   */\n  0x4e487b71\n    /* \"#utility.yul\":1077:1080   */\n  0xe0\n    /* \"#utility.yul\":1073:1093   */\n  shl\n    /* \"#utility.yul\":1070:1071   */\n  0x00\n    /* \"#utility.yul\":1063:1094   */\n  mstore\n    /* \"#utility.yul\":1117:1121   */\n  0x22\n    /* \"#utility.yul\":1114:1115   */\n  0x04\n    /* \"#utility.yul\":1107:1122   */\n  mstore\n    /* \"#utility.yul\":1145:1149   */\n  0x24\n    /* \"#utility.yul\":1142:1143   */\n  0x00\n    /* \"#utility.yul\":1135:1150   */\n  revert\n    /* \"#utility.yul\":999:1160   */\ntag_45:\n  pop\n    /* \"#utility.yul\":786:1166   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_38:\n    /* \"contracts/krav.sol\":16556:16695  contract KravToken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/krav.sol\":16556:16695  contract KravToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/krav.sol\":6568:6668  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/krav.sol\":8735:8904  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"contracts/krav.sol\":8735:8904  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"contracts/krav.sol\":7688:7796  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/krav.sol\":7776:7788  _totalSupply */\n      sload(0x02)\n        /* \"contracts/krav.sol\":7688:7796  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/krav.sol\":7688:7796  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/krav.sol\":9386:9878  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/krav.sol\":7530:7623  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/krav.sol\":7613:7615  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"contracts/krav.sol\":7530:7623  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"contracts/krav.sol\":10287:10502  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/krav.sol\":7859:7986  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":7960:7978  _balances[account] */\n      and\n        /* \"contracts/krav.sol\":7933:7940  uint256 */\n      0x00\n        /* \"contracts/krav.sol\":7960:7978  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/krav.sol\":7859:7986  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/krav.sol\":6787:6891  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/krav.sol\":11005:11418  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/krav.sol\":8199:8374  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/krav.sol\":8437:8588  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":8553:8571  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/krav.sol\":8526:8533  uint256 */\n      0x00\n        /* \"contracts/krav.sol\":8553:8571  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":8553:8564  _allowances */\n      0x01\n        /* \"contracts/krav.sol\":8553:8571  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/krav.sol\":8553:8580  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/krav.sol\":8437:8588  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/krav.sol\":6568:6668  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"contracts/krav.sol\":6622:6635  string memory */\n      0x60\n        /* \"contracts/krav.sol\":6655:6660  _name */\n      0x03\n        /* \"contracts/krav.sol\":6648:6660  return _name */\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_67\n      swap1\n      tag_66\n      jump\t// in\n    tag_67:\n      dup1\n      iszero\n      tag_68\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_69\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_68)\n    tag_69:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_70:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_70\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/krav.sol\":6568:6668  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/krav.sol\":8735:8904  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"contracts/krav.sol\":8818:8822  bool */\n      0x00\n        /* \"contracts/krav.sol\":8835:8874  _approve(_msgSender(), spender, amount) */\n      tag_72\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":8858:8865  spender */\n      dup5\n        /* \"contracts/krav.sol\":8867:8873  amount */\n      dup5\n        /* \"contracts/krav.sol\":8835:8843  _approve */\n      tag_75\n        /* \"contracts/krav.sol\":8835:8874  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_72:\n      pop\n        /* \"contracts/krav.sol\":8892:8896  true */\n      0x01\n        /* \"contracts/krav.sol\":8735:8904  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/krav.sol\":9386:9878  function transferFrom(... */\n    tag_32:\n        /* \"contracts/krav.sol\":9526:9530  bool */\n      0x00\n        /* \"contracts/krav.sol\":9543:9579  _transfer(sender, recipient, amount) */\n      tag_78\n        /* \"contracts/krav.sol\":9553:9559  sender */\n      dup5\n        /* \"contracts/krav.sol\":9561:9570  recipient */\n      dup5\n        /* \"contracts/krav.sol\":9572:9578  amount */\n      dup5\n        /* \"contracts/krav.sol\":9543:9552  _transfer */\n      tag_79\n        /* \"contracts/krav.sol\":9543:9579  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":9619:9638  _allowances[sender] */\n      dup5\n      and\n        /* \"contracts/krav.sol\":9592:9616  uint256 currentAllowance */\n      0x00\n        /* \"contracts/krav.sol\":9619:9638  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":9619:9630  _allowances */\n      0x01\n        /* \"contracts/krav.sol\":9619:9638  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":9619:9652  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/krav.sol\":9671:9697  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/krav.sol\":9663:9742  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2992:2994   */\n      0x20\n        /* \"contracts/krav.sol\":9663:9742  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2974:2995   */\n      mstore\n        /* \"#utility.yul\":3031:3033   */\n      0x28\n        /* \"#utility.yul\":3011:3029   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3004:3034   */\n      mstore\n        /* \"#utility.yul\":3070:3104   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3050:3068   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3043:3105   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3121:3139   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3114:3152   */\n      mstore\n        /* \"#utility.yul\":3169:3188   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":9663:9742  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/krav.sol\":9778:9835  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_84\n        /* \"contracts/krav.sol\":9787:9793  sender */\n      dup6\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":9828:9834  amount */\n      dup6\n        /* \"contracts/krav.sol\":9809:9825  currentAllowance */\n      dup5\n        /* \"contracts/krav.sol\":9809:9834  currentAllowance - amount */\n      sub\n        /* \"contracts/krav.sol\":9778:9786  _approve */\n      tag_75\n        /* \"contracts/krav.sol\":9778:9835  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_84:\n      pop\n        /* \"contracts/krav.sol\":9866:9870  true */\n      0x01\n      swap5\n        /* \"contracts/krav.sol\":9386:9878  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/krav.sol\":10287:10502  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":10375:10379  bool */\n      0x00\n        /* \"contracts/krav.sol\":10424:10449  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":10424:10435  _allowances */\n      0x01\n        /* \"contracts/krav.sol\":10424:10449  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":10424:10458  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/krav.sol\":10375:10379  bool */\n      swap1\n      swap2\n        /* \"contracts/krav.sol\":10392:10472  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_72\n      swap2\n        /* \"contracts/krav.sol\":10415:10422  spender */\n      dup6\n      swap1\n        /* \"contracts/krav.sol\":10424:10471  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      swap1\n        /* \"contracts/krav.sol\":10461:10471  addedValue */\n      dup7\n      swap1\n        /* \"contracts/krav.sol\":10424:10471  _allowances[_msgSender()][spender] + addedValue */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"contracts/krav.sol\":10392:10400  _approve */\n      tag_75\n        /* \"contracts/krav.sol\":10392:10472  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"contracts/krav.sol\":6787:6891  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"contracts/krav.sol\":6843:6856  string memory */\n      0x60\n        /* \"contracts/krav.sol\":6876:6883  _symbol */\n      0x04\n        /* \"contracts/krav.sol\":6869:6883  return _symbol */\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n        /* \"contracts/krav.sol\":11005:11418  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":11098:11102  bool */\n      0x00\n        /* \"contracts/krav.sol\":11142:11167  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":11142:11153  _allowances */\n      0x01\n        /* \"contracts/krav.sol\":11142:11167  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":11142:11176  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/krav.sol\":11195:11230  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/krav.sol\":11187:11272  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3631:3633   */\n      0x20\n        /* \"contracts/krav.sol\":11187:11272  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3613:3634   */\n      mstore\n        /* \"#utility.yul\":3670:3672   */\n      0x25\n        /* \"#utility.yul\":3650:3668   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3643:3673   */\n      mstore\n        /* \"#utility.yul\":3709:3743   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3689:3707   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3682:3744   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3760:3778   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3753:3788   */\n      mstore\n        /* \"#utility.yul\":3805:3824   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":11187:11272  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_82\n        /* \"#utility.yul\":3429:3830   */\n      jump\n        /* \"contracts/krav.sol\":11187:11272  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_102:\n        /* \"contracts/krav.sol\":11308:11375  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_105\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":11331:11338  spender */\n      dup6\n        /* \"contracts/krav.sol\":11359:11374  subtractedValue */\n      dup6\n        /* \"contracts/krav.sol\":11340:11356  currentAllowance */\n      dup5\n        /* \"contracts/krav.sol\":11340:11374  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/krav.sol\":11308:11316  _approve */\n      tag_75\n        /* \"contracts/krav.sol\":11308:11375  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_105:\n      pop\n        /* \"contracts/krav.sol\":11406:11410  true */\n      0x01\n      swap4\n        /* \"contracts/krav.sol\":11005:11418  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/krav.sol\":8199:8374  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"contracts/krav.sol\":8285:8289  bool */\n      0x00\n        /* \"contracts/krav.sol\":8302:8344  _transfer(_msgSender(), recipient, amount) */\n      tag_72\n        /* \"contracts/krav.sol\":4355:4365  msg.sender */\n      caller\n        /* \"contracts/krav.sol\":8326:8335  recipient */\n      dup5\n        /* \"contracts/krav.sol\":8337:8343  amount */\n      dup5\n        /* \"contracts/krav.sol\":8302:8311  _transfer */\n      tag_79\n        /* \"contracts/krav.sol\":8302:8344  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/krav.sol\":12928:13327  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":13012:13033  account != address(0) */\n      dup3\n      and\n        /* \"contracts/krav.sol\":13004:13069  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4037:4039   */\n      0x20\n        /* \"contracts/krav.sol\":13004:13069  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4019:4040   */\n      mstore\n        /* \"#utility.yul\":4076:4078   */\n      0x1f\n        /* \"#utility.yul\":4056:4074   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4049:4079   */\n      mstore\n        /* \"#utility.yul\":4115:4148   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":4095:4113   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4088:4149   */\n      mstore\n        /* \"#utility.yul\":4166:4184   */\n      0x64\n      add\n        /* \"contracts/krav.sol\":13004:13069  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_82\n        /* \"#utility.yul\":3835:4190   */\n      jump\n        /* \"contracts/krav.sol\":13004:13069  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_112:\n        /* \"contracts/krav.sol\":13160:13166  amount */\n      dup1\n        /* \"contracts/krav.sol\":13144:13156  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/krav.sol\":13144:13166  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_117\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_117:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":13177:13195  _balances[account] */\n      dup3\n      and\n        /* \"contracts/krav.sol\":13177:13186  _balances */\n      0x00\n        /* \"contracts/krav.sol\":13177:13195  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/krav.sol\":13177:13205  _balances[account] += amount */\n      dup1\n      sload\n        /* \"contracts/krav.sol\":13199:13205  amount */\n      dup4\n      swap3\n        /* \"contracts/krav.sol\":13177:13186  _balances */\n      swap1\n        /* \"contracts/krav.sol\":13177:13205  _balances[account] += amount */\n      tag_118\n      swap1\n        /* \"contracts/krav.sol\":13199:13205  amount */\n      dup5\n      swap1\n        /* \"contracts/krav.sol\":13177:13205  _balances[account] += amount */\n      tag_92\n      jump\t// in\n    tag_118:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/krav.sol\":13221:13258  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":13221:13258  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"contracts/krav.sol\":13238:13239  0 */\n      0x00\n      swap1\n        /* \"contracts/krav.sol\":13221:13258  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/krav.sol\":13221:13258  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/krav.sol\":12928:13327  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/krav.sol\":14689:15069  function _approve(... */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":14825:14844  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/krav.sol\":14817:14885  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4397:4399   */\n      0x20\n        /* \"contracts/krav.sol\":14817:14885  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4379:4400   */\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x24\n        /* \"#utility.yul\":4416:4434   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4409:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4509   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4455:4473   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4448:4510   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4526:4544   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4519:4553   */\n      mstore\n        /* \"#utility.yul\":4570:4589   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":14817:14885  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_82\n        /* \"#utility.yul\":4195:4595   */\n      jump\n        /* \"contracts/krav.sol\":14817:14885  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":14904:14925  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/krav.sol\":14896:14964  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4802:4804   */\n      0x20\n        /* \"contracts/krav.sol\":14896:14964  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4784:4805   */\n      mstore\n        /* \"#utility.yul\":4841:4843   */\n      0x22\n        /* \"#utility.yul\":4821:4839   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4814:4844   */\n      mstore\n        /* \"#utility.yul\":4880:4914   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4860:4878   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4853:4915   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4931:4949   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4924:4956   */\n      mstore\n        /* \"#utility.yul\":4973:4992   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":14896:14964  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_82\n        /* \"#utility.yul\":4600:4998   */\n      jump\n        /* \"contracts/krav.sol\":14896:14964  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":14977:14995  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":14977:14988  _allowances */\n      0x01\n        /* \"contracts/krav.sol\":14977:14995  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/krav.sol\":14977:15004  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/krav.sol\":14977:15013  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/krav.sol\":15029:15061  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/krav.sol\":15029:15061  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/krav.sol\":15029:15061  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/krav.sol\":14689:15069  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/krav.sol\":11908:12641  function _transfer(... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12048:12068  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/krav.sol\":12040:12110  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5205:5207   */\n      0x20\n        /* \"contracts/krav.sol\":12040:12110  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5187:5208   */\n      mstore\n        /* \"#utility.yul\":5244:5246   */\n      0x25\n        /* \"#utility.yul\":5224:5242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5217:5247   */\n      mstore\n        /* \"#utility.yul\":5283:5317   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5263:5281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5256:5318   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5334:5352   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5327:5362   */\n      mstore\n        /* \"#utility.yul\":5379:5398   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":12040:12110  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_82\n        /* \"#utility.yul\":5003:5404   */\n      jump\n        /* \"contracts/krav.sol\":12040:12110  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12129:12152  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/krav.sol\":12121:12192  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5611:5613   */\n      0x20\n        /* \"contracts/krav.sol\":12121:12192  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5593:5614   */\n      mstore\n        /* \"#utility.yul\":5650:5652   */\n      0x23\n        /* \"#utility.yul\":5630:5648   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5623:5653   */\n      mstore\n        /* \"#utility.yul\":5689:5723   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5669:5687   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5662:5724   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5740:5758   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5733:5766   */\n      mstore\n        /* \"#utility.yul\":5783:5802   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":12121:12192  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_82\n        /* \"#utility.yul\":5409:5808   */\n      jump\n        /* \"contracts/krav.sol\":12121:12192  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12289:12306  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/krav.sol\":12265:12286  uint256 senderBalance */\n      0x00\n        /* \"contracts/krav.sol\":12289:12306  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/krav.sol\":12325:12348  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/krav.sol\":12317:12391  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6015:6017   */\n      0x20\n        /* \"contracts/krav.sol\":12317:12391  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5997:6018   */\n      mstore\n        /* \"#utility.yul\":6054:6056   */\n      0x26\n        /* \"#utility.yul\":6034:6052   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6027:6057   */\n      mstore\n        /* \"#utility.yul\":6093:6127   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6073:6091   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6066:6128   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":6144:6162   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6137:6173   */\n      mstore\n        /* \"#utility.yul\":6190:6209   */\n      0x84\n      add\n        /* \"contracts/krav.sol\":12317:12391  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_82\n        /* \"#utility.yul\":5813:6215   */\n      jump\n        /* \"contracts/krav.sol\":12317:12391  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12427:12444  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/krav.sol\":12427:12436  _balances */\n      0x00\n        /* \"contracts/krav.sol\":12427:12444  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/krav.sol\":12447:12469  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/krav.sol\":12427:12469  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/krav.sol\":12491:12511  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/krav.sol\":12491:12521  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"contracts/krav.sol\":12463:12469  amount */\n      dup5\n      swap3\n        /* \"contracts/krav.sol\":12427:12436  _balances */\n      swap1\n        /* \"contracts/krav.sol\":12491:12521  _balances[recipient] += amount */\n      tag_142\n      swap1\n        /* \"contracts/krav.sol\":12463:12469  amount */\n      dup5\n      swap1\n        /* \"contracts/krav.sol\":12491:12521  _balances[recipient] += amount */\n      tag_92\n      jump\t// in\n    tag_142:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/krav.sol\":12556:12565  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12539:12574  Transfer(sender, recipient, amount) */\n      and\n        /* \"contracts/krav.sol\":12548:12554  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/krav.sol\":12539:12574  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/krav.sol\":12567:12573  amount */\n      dup5\n        /* \"contracts/krav.sol\":12539:12574  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_143\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/krav.sol\":12539:12574  Transfer(sender, recipient, amount) */\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/krav.sol\":12029:12641  {... */\n      pop\n        /* \"contracts/krav.sol\":11908:12641  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_150:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_150)\n    tag_152:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_153:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_147:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_155:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_157:\n        /* \"#utility.yul\":962:991   */\n      tag_158\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_147\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_162:\n        /* \"#utility.yul\":1612:1641   */\n      tag_163\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_147\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_164\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_147\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_167:\n        /* \"#utility.yul\":2100:2129   */\n      tag_168\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_147\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_170:\n        /* \"#utility.yul\":2308:2337   */\n      tag_171\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_147\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_172\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_147\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_66:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_174:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_175:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3199:3424   */\n    tag_92:\n        /* \"#utility.yul\":3239:3242   */\n      0x00\n        /* \"#utility.yul\":3270:3271   */\n      dup3\n        /* \"#utility.yul\":3266:3272   */\n      not\n        /* \"#utility.yul\":3263:3264   */\n      dup3\n        /* \"#utility.yul\":3260:3273   */\n      gt\n        /* \"#utility.yul\":3257:3393   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":3315:3325   */\n      0x4e487b71\n        /* \"#utility.yul\":3310:3313   */\n      0xe0\n        /* \"#utility.yul\":3306:3326   */\n      shl\n        /* \"#utility.yul\":3303:3304   */\n      0x00\n        /* \"#utility.yul\":3296:3327   */\n      mstore\n        /* \"#utility.yul\":3350:3354   */\n      0x11\n        /* \"#utility.yul\":3347:3348   */\n      0x04\n        /* \"#utility.yul\":3340:3355   */\n      mstore\n        /* \"#utility.yul\":3378:3382   */\n      0x24\n        /* \"#utility.yul\":3375:3376   */\n      0x00\n        /* \"#utility.yul\":3368:3383   */\n      revert\n        /* \"#utility.yul\":3257:3393   */\n    tag_178:\n      pop\n        /* \"#utility.yul\":3409:3418   */\n      add\n      swap1\n        /* \"#utility.yul\":3199:3424   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122080389554c06b5f1bf2bd89b824191c7367db2a352e349347fb8494b00f0be96364736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_682": {
									"entryPoint": null,
									"id": 682,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_651": {
									"entryPoint": null,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_523": {
									"entryPoint": 147,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1168:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "360:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "337:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "422:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "457:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "478:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "485:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "490:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "481:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "481:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "471:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "471:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "471:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "515:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "515:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "550:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "553:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "543:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "543:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "543:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "438:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "445:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "441:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "441:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "435:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:13:1"
															},
															"nodeType": "YulIf",
															"src": "432:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "577:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "588:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "591:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "584:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "577:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "405:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "408:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "414:3:1",
														"type": ""
													}
												],
												"src": "374:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "705:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "715:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "727:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "723:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "715:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "757:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "768:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "750:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "674:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "685:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "696:4:1",
														"type": ""
													}
												],
												"src": "604:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "841:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "851:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "868:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "851:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "882:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "912:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "886:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "959:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "961:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "975:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "983:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "971:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "939:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:26:1"
															},
															"nodeType": "YulIf",
															"src": "929:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1049:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1070:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1077:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1082:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1073:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1073:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1063:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1063:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1063:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1117:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1107:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1107:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1142:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1145:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1135:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1135:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1135:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1005:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1028:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1025:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1002:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:38:1"
															},
															"nodeType": "YulIf",
															"src": "999:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "821:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "830:6:1",
														"type": ""
													}
												],
												"src": "786:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060408051808201825260048082526325a920ab60e11b60208084018281528551808701909652928552840152815191929162000051916003916200017b565b508051620000679060049060208401906200017b565b5050506200008d336b204fce5e3e250261100000006200009360201b6200040e1760201c565b62000284565b6001600160a01b038216620000ee5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000102919062000221565b90915550506001600160a01b038216600090815260208190526040812080548392906200013190849062000221565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001899062000248565b90600052602060002090601f016020900481019282620001ad5760008555620001f8565b82601f10620001c857805160ff1916838001178555620001f8565b82800160010185558215620001f8579182015b82811115620001f8578251825591602001919060010190620001db565b50620002069291506200020a565b5090565b5b808211156200020657600081556001016200020b565b600082198211156200024357634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200025d57607f821691505b6020821081036200027e57634e487b7160e01b600052602260045260246000fd5b50919050565b6109a280620002946000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107e0565b60405180910390f35b6100df6100da366004610851565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461087b565b61026e565b604051601281526020016100c3565b6100df610131366004610851565b61031d565b6100f36101443660046108b7565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610851565b610368565b6100df610188366004610851565b610401565b6100f361019b3660046108d9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061090c565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061090c565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b60006102653384846104ed565b50600192915050565b600061027b848484610611565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61031285338584036104ed565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610946565b6104ed565b6060600480546101d59061090c565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f733858584036104ed565b5060019392505050565b6000610265338484610611565b6001600160a01b0382166104645760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016102fc565b80600260008282546104769190610946565b90915550506001600160a01b038216600090815260208190526040812080548392906104a3908490610946565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03831661054f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166105b05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106755760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166106d75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b0383166000908152602081905260409020548181101561074f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610786908490610946565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107d291815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561080d578581018301518582016040015282016107f1565b8181111561081f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461084c57600080fd5b919050565b6000806040838503121561086457600080fd5b61086d83610835565b946020939093013593505050565b60008060006060848603121561089057600080fd5b61089984610835565b92506108a760208501610835565b9150604084013590509250925092565b6000602082840312156108c957600080fd5b6108d282610835565b9392505050565b600080604083850312156108ec57600080fd5b6108f583610835565b915061090360208401610835565b90509250929050565b600181811c9082168061092057607f821691505b60208210810361094057634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561096757634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122080389554c06b5f1bf2bd89b824191c7367db2a352e349347fb8494b00f0be96364736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x25A920AB PUSH1 0xE1 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 DUP8 ADD SWAP1 SWAP7 MSTORE SWAP3 DUP6 MSTORE DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x51 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x17B JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x67 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x17B JUMP JUMPDEST POP POP POP PUSH3 0x8D CALLER PUSH12 0x204FCE5E3E25026110000000 PUSH3 0x93 PUSH1 0x20 SHL PUSH3 0x40E OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x102 SWAP2 SWAP1 PUSH3 0x221 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x131 SWAP1 DUP5 SWAP1 PUSH3 0x221 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x189 SWAP1 PUSH3 0x248 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1AD JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1F8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1C8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1F8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1F8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1F8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1DB JUMP JUMPDEST POP PUSH3 0x206 SWAP3 SWAP2 POP PUSH3 0x20A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x206 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x20B JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x243 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x27E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A2 DUP1 PUSH3 0x294 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x90C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x90C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x4ED JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x90C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4A3 SWAP1 DUP5 SWAP1 PUSH2 0x946 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x786 SWAP1 DUP5 SWAP1 PUSH2 0x946 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86D DUP4 PUSH2 0x835 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x899 DUP5 PUSH2 0x835 JUMP JUMPDEST SWAP3 POP PUSH2 0x8A7 PUSH1 0x20 DUP6 ADD PUSH2 0x835 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D2 DUP3 PUSH2 0x835 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F5 DUP4 PUSH2 0x835 JUMP JUMPDEST SWAP2 POP PUSH2 0x903 PUSH1 0x20 DUP5 ADD PUSH2 0x835 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x920 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x940 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x967 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 CODESIZE SWAP6 SLOAD 0xC0 PUSH12 0x5F1BF2BD89B824191C7367DB 0x2A CALLDATALOAD 0x2E CALLVALUE SWAP4 SELFBALANCE 0xFB DUP5 SWAP5 0xB0 0xF SIGNEXTEND 0xE9 PUSH4 0x64736F6C PUSH4 0x4300080E STOP CALLER ",
							"sourceMap": "16556:139:0:-:0;;;16593:97;;;;;;;;;-1:-1:-1;6382:116:0;;;;;;;;;;;;-1:-1:-1;;;6382:116:0;;;;;;;;;;;;;;;;;;;;;6449:13;;6382:116;;;6449:13;;:5;;:13;:::i;:::-;-1:-1:-1;6473:17:0;;;;:7;;:17;;;;;:::i;:::-;;6382:116;;16640:42:::1;16652:10;16664:17;16640:11;;;;;:42;;:::i;:::-;16556:139:::0;;12928:399;-1:-1:-1;;;;;13012:21:0;;13004:65;;;;-1:-1:-1;;;13004:65:0;;216:2:1;13004:65:0;;;198:21:1;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;13004:65:0;;;;;;;;13160:6;13144:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13177:18:0;;:9;:18;;;;;;;;;;:28;;13199:6;;13177:9;:28;;13199:6;;13177:28;:::i;:::-;;;;-1:-1:-1;;13221:37:0;;750:25:1;;;-1:-1:-1;;;;;13221:37:0;;;13238:1;;13221:37;;738:2:1;723:18;13221:37:0;;;;;;;12928:399;;:::o;16556:139::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16556:139:0;;;-1:-1:-1;16556:139:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;374:225:1;414:3;445:1;441:6;438:1;435:13;432:136;;;490:10;485:3;481:20;478:1;471:31;525:4;522:1;515:15;553:4;550:1;543:15;432:136;-1:-1:-1;584:9:1;;374:225::o;786:380::-;865:1;861:12;;;;908;;;929:61;;983:4;975:6;971:17;961:27;;929:61;1036:2;1028:6;1025:14;1005:18;1002:38;999:161;;1082:10;1077:3;1073:20;1070:1;1063:31;1117:4;1114:1;1107:15;1145:4;1142:1;1135:15;999:161;;786:380;;;:::o;:::-;16556:139:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_640": {
									"entryPoint": 1261,
									"id": 640,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_651": {
									"entryPoint": null,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_523": {
									"entryPoint": 1038,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_467": {
									"entryPoint": 1553,
									"id": 467,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_276": {
									"entryPoint": 600,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_390": {
									"entryPoint": 872,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_351": {
									"entryPoint": 797,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_172": {
									"entryPoint": 454,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 857,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_324": {
									"entryPoint": 622,
									"id": 324,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_237": {
									"entryPoint": 1025,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6217:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:1"
															},
															"nodeType": "YulIf",
															"src": "2237:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:1",
														"type": ""
													}
												],
												"src": "2140:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:1"
															},
															"nodeType": "YulIf",
															"src": "2548:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:1"
															},
															"nodeType": "YulIf",
															"src": "2618:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:1",
														"type": ""
													}
												],
												"src": "2405:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2964:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2981:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2974:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2974:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3015:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3026:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3011:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3004:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3054:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3065:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3050:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3070:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3043:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3136:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:18:1"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3141:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3161:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3173:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3184:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3169:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3169:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3161:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2941:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2955:4:1",
														"type": ""
													}
												],
												"src": "2790:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3247:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3282:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3303:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3310:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3315:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3306:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3296:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3296:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3296:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3347:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3350:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3340:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3340:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3340:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3378:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3368:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3368:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3368:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3263:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3270:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3260:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3260:13:1"
															},
															"nodeType": "YulIf",
															"src": "3257:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3402:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3413:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3416:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3230:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3233:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3239:3:1",
														"type": ""
													}
												],
												"src": "3199:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3631:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3665:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3643:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3693:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3704:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3689:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3689:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3709:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3682:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3775:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3760:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3780:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3753:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3797:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3809:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3820:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3805:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3805:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3797:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3580:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3594:4:1",
														"type": ""
													}
												],
												"src": "3429:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4026:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4037:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4019:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4060:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4056:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4056:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4076:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4099:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4110:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4115:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4088:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4088:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4181:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4158:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3986:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4000:4:1",
														"type": ""
													}
												],
												"src": "3835:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4369:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4386:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4397:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4379:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4379:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4379:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4420:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4431:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4416:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4409:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4409:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4409:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4475:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4530:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4541:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4526:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4526:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4546:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4519:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4519:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4519:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4562:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4574:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4585:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4562:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4346:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4360:4:1",
														"type": ""
													}
												],
												"src": "4195:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4774:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4802:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4784:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4784:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4836:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4821:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4841:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4814:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4814:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4864:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4875:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4860:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4860:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4880:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4853:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4853:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4935:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4946:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4931:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4951:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4924:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4924:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4965:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4988:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4751:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4765:4:1",
														"type": ""
													}
												],
												"src": "4600:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5177:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5205:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5187:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5187:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5228:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5239:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5224:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5224:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5244:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5217:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5217:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5267:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5278:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5263:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5263:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5283:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5256:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5256:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5338:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5349:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5334:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5354:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5327:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5327:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5327:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5371:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5383:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5394:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5379:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5371:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5154:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5168:4:1",
														"type": ""
													}
												],
												"src": "5003:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5583:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5600:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5611:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5593:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5630:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5650:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5623:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5623:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5623:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5673:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5684:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5669:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5689:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5662:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5662:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5744:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5755:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5740:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5740:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5760:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5733:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5733:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5775:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5787:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5798:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5783:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5775:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5560:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5574:4:1",
														"type": ""
													}
												],
												"src": "5409:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5987:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6004:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6015:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5997:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5997:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5997:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6038:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6049:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6034:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6054:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6027:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6027:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6077:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6088:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6073:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6073:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6093:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6066:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6066:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6066:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6148:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6159:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6144:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6164:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6137:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6137:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6182:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6194:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6205:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6190:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6190:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6182:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5964:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5978:4:1",
														"type": ""
													}
												],
												"src": "5813:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107e0565b60405180910390f35b6100df6100da366004610851565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461087b565b61026e565b604051601281526020016100c3565b6100df610131366004610851565b61031d565b6100f36101443660046108b7565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610851565b610368565b6100df610188366004610851565b610401565b6100f361019b3660046108d9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061090c565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061090c565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b60006102653384846104ed565b50600192915050565b600061027b848484610611565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61031285338584036104ed565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610946565b6104ed565b6060600480546101d59061090c565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f733858584036104ed565b5060019392505050565b6000610265338484610611565b6001600160a01b0382166104645760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016102fc565b80600260008282546104769190610946565b90915550506001600160a01b038216600090815260208190526040812080548392906104a3908490610946565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03831661054f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166105b05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106755760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166106d75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b0383166000908152602081905260409020548181101561074f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610786908490610946565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107d291815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561080d578581018301518582016040015282016107f1565b8181111561081f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461084c57600080fd5b919050565b6000806040838503121561086457600080fd5b61086d83610835565b946020939093013593505050565b60008060006060848603121561089057600080fd5b61089984610835565b92506108a760208501610835565b9150604084013590509250925092565b6000602082840312156108c957600080fd5b6108d282610835565b9392505050565b600080604083850312156108ec57600080fd5b6108f583610835565b915061090360208401610835565b90509250929050565b600181811c9082168061092057607f821691505b60208210810361094057634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561096757634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122080389554c06b5f1bf2bd89b824191c7367db2a352e349347fb8494b00f0be96364736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x90C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x90C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x4ED JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x90C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FC JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4A3 SWAP1 DUP5 SWAP1 PUSH2 0x946 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x786 SWAP1 DUP5 SWAP1 PUSH2 0x946 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86D DUP4 PUSH2 0x835 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x899 DUP5 PUSH2 0x835 JUMP JUMPDEST SWAP3 POP PUSH2 0x8A7 PUSH1 0x20 DUP6 ADD PUSH2 0x835 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D2 DUP3 PUSH2 0x835 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F5 DUP4 PUSH2 0x835 JUMP JUMPDEST SWAP2 POP PUSH2 0x903 PUSH1 0x20 DUP5 ADD PUSH2 0x835 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x920 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x940 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x967 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 CODESIZE SWAP6 SLOAD 0xC0 PUSH12 0x5F1BF2BD89B824191C7367DB 0x2A CALLDATALOAD 0x2E CALLVALUE SWAP4 SELFBALANCE 0xFB DUP5 SWAP5 0xB0 0xF SIGNEXTEND 0xE9 PUSH4 0x64736F6C PUSH4 0x4300080E STOP CALLER ",
							"sourceMap": "16556:139:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6568:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8735:169;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;8735:169:0;1053:187:1;7688:108:0;7776:12;;7688:108;;;1391:25:1;;;1379:2;1364:18;7688:108:0;1245:177:1;9386:492:0;;;;;;:::i;:::-;;:::i;7530:93::-;;;7613:2;1902:36:1;;1890:2;1875:18;7530:93:0;1760:184:1;10287:215:0;;;;;;:::i;:::-;;:::i;7859:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7960:18:0;7933:7;7960:18;;;;;;;;;;;;7859:127;6787:104;;;:::i;11005:413::-;;;;;;:::i;:::-;;:::i;8199:175::-;;;;;;:::i;:::-;;:::i;8437:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8553:18:0;;;8526:7;8553:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8437:151;6568:100;6622:13;6655:5;6648:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6568:100;:::o;8735:169::-;8818:4;8835:39;4355:10;8858:7;8867:6;8835:8;:39::i;:::-;-1:-1:-1;8892:4:0;8735:169;;;;:::o;9386:492::-;9526:4;9543:36;9553:6;9561:9;9572:6;9543:9;:36::i;:::-;-1:-1:-1;;;;;9619:19:0;;9592:24;9619:19;;;:11;:19;;;;;;;;4355:10;9619:33;;;;;;;;9671:26;;;;9663:79;;;;-1:-1:-1;;;9663:79:0;;2992:2:1;9663:79:0;;;2974:21:1;3031:2;3011:18;;;3004:30;3070:34;3050:18;;;3043:62;-1:-1:-1;;;3121:18:1;;;3114:38;3169:19;;9663:79:0;;;;;;;;;9778:57;9787:6;4355:10;9828:6;9809:16;:25;9778:8;:57::i;:::-;-1:-1:-1;9866:4:0;;9386:492;-1:-1:-1;;;;9386:492:0:o;10287:215::-;4355:10;10375:4;10424:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10424:34:0;;;;;;;;;;10375:4;;10392:80;;10415:7;;10424:47;;10461:10;;10424:47;:::i;:::-;10392:8;:80::i;6787:104::-;6843:13;6876:7;6869:14;;;;;:::i;11005:413::-;4355:10;11098:4;11142:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;11142:34:0;;;;;;;;;;11195:35;;;;11187:85;;;;-1:-1:-1;;;11187:85:0;;3631:2:1;11187:85:0;;;3613:21:1;3670:2;3650:18;;;3643:30;3709:34;3689:18;;;3682:62;-1:-1:-1;;;3760:18:1;;;3753:35;3805:19;;11187:85:0;3429:401:1;11187:85:0;11308:67;4355:10;11331:7;11359:15;11340:16;:34;11308:8;:67::i;:::-;-1:-1:-1;11406:4:0;;11005:413;-1:-1:-1;;;11005:413:0:o;8199:175::-;8285:4;8302:42;4355:10;8326:9;8337:6;8302:9;:42::i;12928:399::-;-1:-1:-1;;;;;13012:21:0;;13004:65;;;;-1:-1:-1;;;13004:65:0;;4037:2:1;13004:65:0;;;4019:21:1;4076:2;4056:18;;;4049:30;4115:33;4095:18;;;4088:61;4166:18;;13004:65:0;3835:355:1;13004:65:0;13160:6;13144:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13177:18:0;;:9;:18;;;;;;;;;;:28;;13199:6;;13177:9;:28;;13199:6;;13177:28;:::i;:::-;;;;-1:-1:-1;;13221:37:0;;1391:25:1;;;-1:-1:-1;;;;;13221:37:0;;;13238:1;;13221:37;;1379:2:1;1364:18;13221:37:0;;;;;;;12928:399;;:::o;14689:380::-;-1:-1:-1;;;;;14825:19:0;;14817:68;;;;-1:-1:-1;;;14817:68:0;;4397:2:1;14817:68:0;;;4379:21:1;4436:2;4416:18;;;4409:30;4475:34;4455:18;;;4448:62;-1:-1:-1;;;4526:18:1;;;4519:34;4570:19;;14817:68:0;4195:400:1;14817:68:0;-1:-1:-1;;;;;14904:21:0;;14896:68;;;;-1:-1:-1;;;14896:68:0;;4802:2:1;14896:68:0;;;4784:21:1;4841:2;4821:18;;;4814:30;4880:34;4860:18;;;4853:62;-1:-1:-1;;;4931:18:1;;;4924:32;4973:19;;14896:68:0;4600:398:1;14896:68:0;-1:-1:-1;;;;;14977:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15029:32;;1391:25:1;;;15029:32:0;;1364:18:1;15029:32:0;;;;;;;14689:380;;;:::o;11908:733::-;-1:-1:-1;;;;;12048:20:0;;12040:70;;;;-1:-1:-1;;;12040:70:0;;5205:2:1;12040:70:0;;;5187:21:1;5244:2;5224:18;;;5217:30;5283:34;5263:18;;;5256:62;-1:-1:-1;;;5334:18:1;;;5327:35;5379:19;;12040:70:0;5003:401:1;12040:70:0;-1:-1:-1;;;;;12129:23:0;;12121:71;;;;-1:-1:-1;;;12121:71:0;;5611:2:1;12121:71:0;;;5593:21:1;5650:2;5630:18;;;5623:30;5689:34;5669:18;;;5662:62;-1:-1:-1;;;5740:18:1;;;5733:33;5783:19;;12121:71:0;5409:399:1;12121:71:0;-1:-1:-1;;;;;12289:17:0;;12265:21;12289:17;;;;;;;;;;;12325:23;;;;12317:74;;;;-1:-1:-1;;;12317:74:0;;6015:2:1;12317:74:0;;;5997:21:1;6054:2;6034:18;;;6027:30;6093:34;6073:18;;;6066:62;-1:-1:-1;;;6144:18:1;;;6137:36;6190:19;;12317:74:0;5813:402:1;12317:74:0;-1:-1:-1;;;;;12427:17:0;;;:9;:17;;;;;;;;;;;12447:22;;;12427:42;;12491:20;;;;;;;;:30;;12463:6;;12427:9;12491:30;;12463:6;;12491:30;:::i;:::-;;;;;;;;12556:9;-1:-1:-1;;;;;12539:35:0;12548:6;-1:-1:-1;;;;;12539:35:0;;12567:6;12539:35;;;;1391:25:1;;1379:2;1364:18;;1245:177;12539:35:0;;;;;;;;12029:612;11908:733;;;:::o;14:597:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;3199:225::-;3239:3;3270:1;3266:6;3263:1;3260:13;3257:136;;;3315:10;3310:3;3306:20;3303:1;3296:31;3350:4;3347:1;3340:15;3378:4;3375:1;3368:15;3257:136;-1:-1:-1;3409:9:1;;3199:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "493200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16593,
									"end": 16690,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 16593,
									"end": 16690,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16593,
									"end": 16690,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16593,
									"end": 16690,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16593,
									"end": 16690,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16593,
									"end": 16690,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16593,
									"end": 16690,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16593,
									"end": 16690,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16593,
									"end": 16690,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16593,
									"end": 16690,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "25A920AB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6449,
									"end": 6462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6449,
									"end": 6462,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6480,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6473,
									"end": 6480,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6473,
									"end": 6490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6490,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6498,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16640,
									"end": 16682,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 16652,
									"end": 16662,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 16664,
									"end": 16681,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "204FCE5E3E25026110000000"
								},
								{
									"begin": 16640,
									"end": 16651,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 16640,
									"end": 16651,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16640,
									"end": 16651,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 16640,
									"end": 16651,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551679"
								},
								{
									"begin": 16640,
									"end": 16651,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16640,
									"end": 16682,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16640,
									"end": 16682,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 16640,
									"end": 16682,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16640,
									"end": 16682,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 16640,
									"end": 16682,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12928,
									"end": 13327,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12928,
									"end": 13327,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13012,
									"end": 13033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13012,
									"end": 13033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 267,
									"end": 328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 13004,
									"end": 13069,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13160,
									"end": 13166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13144,
									"end": 13156,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13144,
									"end": 13156,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 13144,
									"end": 13166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13144,
									"end": 13166,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13195,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13205,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13205,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13199,
									"end": 13205,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13199,
									"end": 13205,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13205,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13177,
									"end": 13205,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13199,
									"end": 13205,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13199,
									"end": 13205,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13205,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 13177,
									"end": 13205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13205,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13177,
									"end": 13205,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13205,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13205,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13177,
									"end": 13205,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 750,
									"end": 775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 750,
									"end": 775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 750,
									"end": 775,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13238,
									"end": 13239,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13238,
									"end": 13239,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 738,
									"end": 740,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 723,
									"end": 741,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13221,
									"end": 13258,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 12928,
									"end": 13327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12928,
									"end": 13327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12928,
									"end": 13327,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16556,
									"end": 16695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16556,
									"end": 16695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 374,
									"end": 599,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 374,
									"end": 599,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 414,
									"end": 417,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 441,
									"end": 447,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 438,
									"end": 439,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 435,
									"end": 448,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 432,
									"end": 568,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 432,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 432,
									"end": 568,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 490,
									"end": 500,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 485,
									"end": 488,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 481,
									"end": 501,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 478,
									"end": 479,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 502,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 525,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 522,
									"end": 523,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 515,
									"end": 530,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 550,
									"end": 551,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 558,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 432,
									"end": 568,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 432,
									"end": 568,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 584,
									"end": 593,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 584,
									"end": 593,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 374,
									"end": 599,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 865,
									"end": 866,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 861,
									"end": 873,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 929,
									"end": 990,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 983,
									"end": 987,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 975,
									"end": 981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 971,
									"end": 988,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 961,
									"end": 988,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 961,
									"end": 988,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 990,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 929,
									"end": 990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1040,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1092,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1077,
									"end": 1080,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1073,
									"end": 1093,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1094,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1117,
									"end": 1121,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1114,
									"end": 1115,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1107,
									"end": 1122,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1142,
									"end": 1143,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1135,
									"end": 1150,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16556,
									"end": 16695,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080389554c06b5f1bf2bd89b824191c7367db2a352e349347fb8494b00f0be96364736f6c634300080e0033",
									".code": [
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6568,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6568,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8735,
											"end": 8904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8735,
											"end": 8904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7788,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7776,
											"end": 7788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9386,
											"end": 9878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9386,
											"end": 9878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7615,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10287,
											"end": 10502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10287,
											"end": 10502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7859,
											"end": 7986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7986,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6787,
											"end": 6891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11005,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11005,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8199,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8199,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8437,
											"end": 8588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8526,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8437,
											"end": 8588,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6635,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6655,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6648,
											"end": 6660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6648,
											"end": 6660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8818,
											"end": 8822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8835,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 8873,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8835,
											"end": 8874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8874,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8835,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8892,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9526,
											"end": 9530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9570,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9572,
											"end": 9578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9543,
											"end": 9579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9592,
											"end": 9616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9630,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9697,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2994,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 2995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3104,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3114,
											"end": 3152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3169,
											"end": 3188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9663,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9778,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9787,
											"end": 9793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9828,
											"end": 9834,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9809,
											"end": 9825,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9809,
											"end": 9834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9778,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 9778,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9778,
											"end": 9835,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9778,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9878,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9386,
											"end": 9878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10287,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10392,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10392,
											"end": 10472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10422,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10424,
											"end": 10471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10471,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 10424,
											"end": 10471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 10471,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10424,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 10392,
											"end": 10472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6787,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6876,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6869,
											"end": 6883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6869,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6869,
											"end": 6883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11098,
											"end": 11102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11153,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3631,
											"end": 3633,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3643,
											"end": 3673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3743,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3429,
											"end": 3830,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11187,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11331,
											"end": 11338,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11374,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 11308,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11375,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11308,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11406,
											"end": 11410,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11406,
											"end": 11410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11005,
											"end": 11418,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11005,
											"end": 11418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8199,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8302,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4355,
											"end": 4365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8326,
											"end": 8335,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8302,
											"end": 8344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 13327,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 12928,
											"end": 13327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13012,
											"end": 13033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13012,
											"end": 13033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3835,
											"end": 4190,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13004,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13156,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13144,
											"end": 13156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13144,
											"end": 13166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13199,
											"end": 13205,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13199,
											"end": 13205,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13177,
											"end": 13205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13199,
											"end": 13205,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13199,
											"end": 13205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13177,
											"end": 13205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13205,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13177,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13205,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13238,
											"end": 13239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13221,
											"end": 13258,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 13327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 13327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 13327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 15069,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 14689,
											"end": 15069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14825,
											"end": 14844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14825,
											"end": 14844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4509,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4195,
											"end": 4595,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14817,
											"end": 14885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14904,
											"end": 14925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 14925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4843,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 4914,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4924,
											"end": 4956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4600,
											"end": 4998,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14896,
											"end": 14964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15004,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15013,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14977,
											"end": 15013,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15061,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 15069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 15069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 15069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14689,
											"end": 15069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 12641,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11908,
											"end": 12641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12048,
											"end": 12068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12048,
											"end": 12068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5205,
											"end": 5207,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5283,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5334,
											"end": 5352,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5334,
											"end": 5352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5327,
											"end": 5362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5379,
											"end": 5398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5003,
											"end": 5404,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12040,
											"end": 12110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12129,
											"end": 12152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5611,
											"end": 5613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5593,
											"end": 5614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5652,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5630,
											"end": 5648,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5630,
											"end": 5648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5723,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5669,
											"end": 5687,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5669,
											"end": 5687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5783,
											"end": 5802,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5783,
											"end": 5802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5409,
											"end": 5808,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12121,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12306,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12325,
											"end": 12348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5997,
											"end": 6018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6209,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6190,
											"end": 6209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5813,
											"end": 6215,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 12317,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12447,
											"end": 12469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12447,
											"end": 12469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12447,
											"end": 12469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12469,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12491,
											"end": 12521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12556,
											"end": 12565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12548,
											"end": 12554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12567,
											"end": 12573,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 12641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 12641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 12641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11908,
											"end": 12641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 962,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1612,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1660,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2100,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2308,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2356,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3424,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3199,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3273,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3310,
											"end": 3313,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3306,
											"end": 3326,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3340,
											"end": 3355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3383,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/krav.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/krav.sol\":\"KravToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/krav.sol\":{\"keccak256\":\"0x144bf8555fa2f827369957f5d29614be8bf0ccc54fd287048975f7a6fc309dbd\",\"urls\":[\"bzz-raw://3eb5cc69974c7f82a8daca94c5697871cc517addd9c6692ddb12a1c944081aae\",\"dweb:/ipfs/QmWXLoWiJdiuVRREGesFJ5DmHa7VCNwAdkTn4Pt484F5Md\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "contracts/krav.sol:KravToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "contracts/krav.sol:KravToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "contracts/krav.sol:KravToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/krav.sol:KravToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "contracts/krav.sol:KravToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/krav.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/krav.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/krav.sol": {
				"ast": {
					"absolutePath": "contracts/krav.sol",
					"exportedSymbols": {
						"Context": [
							121
						],
						"ERC20": [
							663
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							100
						],
						"KravToken": [
							683
						]
					},
					"id": 684,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "205:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "232:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "316:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "330:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "413:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "450:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:0"
									},
									"scope": 77,
									"src": "404:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "467:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "566:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:0"
									},
									"scope": 77,
									"src": "547:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "623:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "853:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "870:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "862:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "889:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "881:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "915:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "915:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:6:0"
									},
									"scope": 77,
									"src": "844:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "929:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1214:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1232:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1224:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1247:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1239:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:9:0"
									},
									"scope": 77,
									"src": "1205:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1296:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1966:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1982:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1974:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1999:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1991:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2025:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2025:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:6:0"
									},
									"scope": 77,
									"src": "1957:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2039:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2358:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2389:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2381:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2414:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2406:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2370:85:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2474:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2474:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2473:6:0"
									},
									"scope": 77,
									"src": "2349:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2488:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2663:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2688:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2672:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2710:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2694:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2722:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2714:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:57:0"
									},
									"src": "2657:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2737:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 76,
									"name": "Approval",
									"nameLocation": "2900:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2925:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2909:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2932:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2965:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2957:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2908:63:0"
									},
									"src": "2894:78:0"
								}
							],
							"scope": 684,
							"src": "306:2669:0",
							"usedErrors": []
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3069:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3246:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3246:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3096:120:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3228:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3260:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3331:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3335:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3361:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3361:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3360:15:0"
									},
									"scope": 100,
									"src": "3322:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3384:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3457:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3463:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3489:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3489:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:15:0"
									},
									"scope": 100,
									"src": "3448:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3512:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3594:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3602:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3628:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3628:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:7:0"
									},
									"scope": 100,
									"src": "3585:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 684,
							"src": "3218:420:0",
							"usedErrors": []
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3708:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3735:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nameLocation": "4260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4337:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4355:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4355:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4348:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4284:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4294:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:9:0"
									},
									"scope": 121,
									"src": "4275:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4448:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4466:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4466:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4459:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4390:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4398:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4432:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4432:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4431:16:0"
									},
									"scope": 121,
									"src": "4381:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 684,
							"src": "4242:243:0",
							"usedErrors": []
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4559:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "5806:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "5806:7:0"
								},
								{
									"baseName": {
										"id": 126,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "5815:6:0"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "5815:6:0"
								},
								{
									"baseName": {
										"id": 128,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "5823:14:0"
									},
									"id": 129,
									"nodeType": "InheritanceSpecifier",
									"src": "5823:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "4590:1196:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663,
								100,
								77,
								121
							],
							"name": "ERC20",
							"nameLocation": "5797:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5881:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5845:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 132,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5853:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5845:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5864:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "5955:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5899:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 138,
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5907:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5899:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 137,
											"keyType": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5926:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5918:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5937:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "5991:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5975:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5975:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "6027:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "6012:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 142,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6012:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "6054:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "6039:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6039:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6438:60:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "6449:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 154,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "6457:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6449:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "6449:13:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "6473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6483:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6473:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "6473:17:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "6070:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 162,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6408:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6394:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6394:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6429:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6415:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6415:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6393:44:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6438:0:0"
									},
									"scope": 663,
									"src": "6382:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "6637:31:0",
										"statements": [
											{
												"expression": {
													"id": 169,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "6655:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 168,
												"id": 170,
												"nodeType": "Return",
												"src": "6648:12:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6506:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6577:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6604:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6581:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6622:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6622:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6621:15:0"
									},
									"scope": 663,
									"src": "6568:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6858:33:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "6876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "6869:14:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6676:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6796:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6825:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6802:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6843:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6843:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6842:15:0"
									},
									"scope": 663,
									"src": "6787:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "7595:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7613:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 188,
												"id": 190,
												"nodeType": "Return",
												"src": "7606:9:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6899:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7539:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7570:8:0"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7547:2:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "7588:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 186,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7588:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7587:7:0"
									},
									"scope": 663,
									"src": "7530:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "7758:38:0",
										"statements": [
											{
												"expression": {
													"id": 199,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "7776:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 200,
												"nodeType": "Return",
												"src": "7769:19:0"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7631:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7697:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7731:8:0"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7708:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "7749:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7748:9:0"
									},
									"scope": 663,
									"src": "7688:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "7942:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 211,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "7960:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 213,
													"indexExpression": {
														"id": 212,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "7970:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7960:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 214,
												"nodeType": "Return",
												"src": "7953:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "7804:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7868:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7915:8:0"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7877:17:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7933:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7932:9:0"
									},
									"scope": 663,
									"src": "7859:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "8291:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 228,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "8312:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8312:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "8326:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "8337:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "8302:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8302:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "8302:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8362:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 235,
												"nodeType": "Return",
												"src": "8355:11:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "7994:199:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8208:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8267:8:0"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8225:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8217:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8216:35:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8285:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8285:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8284:6:0"
									},
									"scope": 663,
									"src": "8199:175:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										36
									],
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "8535:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 248,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "8553:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 250,
														"indexExpression": {
															"id": 249,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "8565:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8553:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 252,
													"indexExpression": {
														"id": 251,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "8572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8553:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 253,
												"nodeType": "Return",
												"src": "8546:34:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "8382:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8446:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 244,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8508:8:0"
									},
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8464:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8456:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8479:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8471:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8455:32:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8526:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8525:9:0"
									},
									"scope": 663,
									"src": "8437:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										46
									],
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "8824:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 267,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "8844:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8844:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "8858:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8867:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 266,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "8835:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8835:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "8835:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8892:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 274,
												"nodeType": "Return",
												"src": "8885:11:0"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "8596:133:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8744:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 262,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8800:8:0"
									},
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8777:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8769:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8751:33:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8818:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8818:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8817:6:0"
									},
									"scope": 663,
									"src": "8735:169:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "9532:346:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9553:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "9561:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "9572:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "9543:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9543:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "9543:36:0"
											},
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9600:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 323,
														"src": "9592:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9592:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 297,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "9619:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 299,
														"indexExpression": {
															"id": 298,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9631:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9619:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 302,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 300,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "9639:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9639:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9619:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9592:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "9671:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "9691:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9671:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9699:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9663:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "9663:79:0"
											},
											{
												"id": 320,
												"nodeType": "UncheckedBlock",
												"src": "9753:94:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 312,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "9787:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 313,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "9795:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9795:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 315,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "9809:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 316,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "9828:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9809:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 311,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "9778:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9778:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 319,
														"nodeType": "ExpressionStatement",
														"src": "9778:57:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9866:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 288,
												"id": 322,
												"nodeType": "Return",
												"src": "9859:11:0"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "8912:468:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9395:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9508:8:0"
									},
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9426:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9418:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9451:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9443:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9407:85:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9526:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9526:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9525:6:0"
									},
									"scope": 663,
									"src": "9386:492:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "10381:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "10401:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10401:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "10415:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 338,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "10424:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 341,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 339,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "10436:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10436:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10424:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 343,
																"indexExpression": {
																	"id": 342,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "10450:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10424:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 344,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "10461:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10424:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 334,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "10392:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10392:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "10392:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10490:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 333,
												"id": 349,
												"nodeType": "Return",
												"src": "10483:11:0"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "9886:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "10296:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "10339:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10331:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10313:37:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10374:6:0"
									},
									"scope": 663,
									"src": "10287:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "11104:314:0",
										"statements": [
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11123:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "11115:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 363,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "11142:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 366,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 364,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "11154:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11154:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11142:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 368,
													"indexExpression": {
														"id": 367,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "11168:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11142:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11115:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "11195:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 372,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "11215:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11195:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11232:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11187:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11187:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "11187:85:0"
											},
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "11283:104:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 378,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "11317:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11317:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 380,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "11331:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "11340:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 382,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 356,
																		"src": "11359:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11340:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 377,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "11308:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11308:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 385,
														"nodeType": "ExpressionStatement",
														"src": "11308:67:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11406:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 360,
												"id": 388,
												"nodeType": "Return",
												"src": "11399:11:0"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "10510:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "11014:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11040:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "11032:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "11057:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "11049:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11031:42:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "11098:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11098:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11097:6:0"
									},
									"scope": 663,
									"src": "11005:413:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "12029:612:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 401,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "12048:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12066:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12058:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12058:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12058:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12048:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12070:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12040:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12040:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "12040:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "12129:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12150:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12142:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12142:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12142:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12129:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12154:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12121:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12121:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "12121:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12234:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12245:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "12205:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12205:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "12205:47:0"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "12273:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "12265:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"baseExpression": {
														"id": 428,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "12289:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 430,
													"indexExpression": {
														"id": 429,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "12299:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12289:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12265:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 433,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "12325:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "12342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12325:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12350:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12317:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "12317:74:0"
											},
											{
												"id": 447,
												"nodeType": "UncheckedBlock",
												"src": "12402:79:0",
												"statements": [
													{
														"expression": {
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "12427:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "12437:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12427:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 442,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "12447:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 443,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "12463:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12447:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12427:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 446,
														"nodeType": "ExpressionStatement",
														"src": "12427:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 448,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "12491:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 450,
														"indexExpression": {
															"id": 449,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12501:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12491:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 451,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "12515:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12491:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "12491:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 455,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12548:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12556:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12567:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "12539:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12539:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "EmitStatement",
												"src": "12534:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12607:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12615:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12626:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "12587:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12587:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "12587:46:0"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "11426:476:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11917:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11945:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11937:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11970:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11962:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11998:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11990:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11926:85:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12029:0:0"
									},
									"scope": 663,
									"src": "11908:733:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "12993:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "13012:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13031:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13023:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 477,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13023:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13023:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13012:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13035:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13004:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "13004:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13111:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13103:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13103:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13103:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13124:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 485,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "13082:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13082:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "13082:49:0"
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 494,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13144:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 495,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "13160:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13144:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "13144:22:0"
											},
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 498,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "13177:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 499,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13187:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13177:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 501,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "13199:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13177:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "13177:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13238:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13230:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13230:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13230:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13251:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "13221:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13221:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "EmitStatement",
												"src": "13216:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13299:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13291:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13291:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13303:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13312:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "13271:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13271:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "13271:48:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "12649:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12937:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12951:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "12943:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12968:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "12960:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12942:33:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12993:0:0"
									},
									"scope": 663,
									"src": "12928:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "13725:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "13744:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13763:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13755:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13755:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13755:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13744:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13767:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13736:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13736:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "13736:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13854:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13846:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 543,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13846:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13846:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13858:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "13816:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13816:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "13816:49:0"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "13886:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "13878:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"baseExpression": {
														"id": 552,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "13903:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 554,
													"indexExpression": {
														"id": 553,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "13913:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13903:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13878:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 557,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "13940:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 558,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "13958:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13940:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13966:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13932:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "13932:71:0"
											},
											{
												"id": 571,
												"nodeType": "UncheckedBlock",
												"src": "14014:81:0",
												"statements": [
													{
														"expression": {
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 563,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "14039:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 565,
																"indexExpression": {
																	"id": 564,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "14049:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14039:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 566,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "14060:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 567,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "14077:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14060:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14039:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "14039:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "14105:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 573,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "14121:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14105:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "14105:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 577,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14171:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14163:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 578,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14163:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14163:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "14175:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 576,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "14145:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14145:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "EmitStatement",
												"src": "14140:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14215:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14232:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14224:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14224:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14224:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "14236:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "14195:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14195:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "14195:48:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "13335:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13669:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13683:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13675:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13700:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13692:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13674:33:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13725:0:0"
									},
									"scope": 663,
									"src": "13660:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "14806:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 606,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14825:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14842:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14834:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 607,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14834:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14834:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14825:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14846:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14817:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "14817:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "14904:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14923:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14915:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 617,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14915:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14915:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14904:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14927:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14896:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "14896:68:0"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 625,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "14977:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 628,
															"indexExpression": {
																"id": 626,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14989:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14977:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 629,
														"indexExpression": {
															"id": 627,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "14996:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14977:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 630,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "15007:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14977:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "14977:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 634,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "15038:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "15045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "15054:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "15029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15029:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "15024:37:0"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "14259:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14698:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14725:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14749:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14741:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14775:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14767:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14706:82:0"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14806:0:0"
									},
									"scope": 663,
									"src": "14689:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "15792:2:0",
										"statements": []
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "15077:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15678:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15717:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15709:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15740:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15732:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15761:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15753:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15698:76:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15792:0:0"
									},
									"scope": 663,
									"src": "15669:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "16520:2:0",
										"statements": []
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "15802:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16407:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16445:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16437:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16468:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16460:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16489:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16481:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16426:76:0"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16520:0:0"
									},
									"scope": 663,
									"src": "16398:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 684,
							"src": "5788:10737:0",
							"usedErrors": []
						},
						{
							"id": 664,
							"literals": [
								"solidity",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "16529:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 665,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "16578:5:0"
									},
									"id": 666,
									"nodeType": "InheritanceSpecifier",
									"src": "16578:5:0"
								}
							],
							"canonicalName": "KravToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 683,
							"linearizedBaseContracts": [
								683,
								663,
								100,
								77,
								121
							],
							"name": "KravToken",
							"nameLocation": "16565:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "16629:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 676,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16652:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16652:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3130303030303030303030",
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16664:17:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000000000"
															},
															"value": "10000000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000000000"
															}
														],
														"expression": {
															"id": 673,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "16640:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$663_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 523,
														"src": "16640:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16640:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "16640:42:0"
											}
										]
									},
									"id": 682,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4b524156",
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16613:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9098f3b9ccc3882f66ea92ce854618fa6c5ec3f75237d44b80add9166a92b7d0",
														"typeString": "literal_string \"KRAV\""
													},
													"value": "KRAV"
												},
												{
													"hexValue": "4b524156",
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9098f3b9ccc3882f66ea92ce854618fa6c5ec3f75237d44b80add9166a92b7d0",
														"typeString": "literal_string \"KRAV\""
													},
													"value": "KRAV"
												}
											],
											"id": 671,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 668,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 663,
												"src": "16607:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16607:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16604:2:0"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16629:0:0"
									},
									"scope": 683,
									"src": "16593:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 684,
							"src": "16556:139:0",
							"usedErrors": []
						}
					],
					"src": "205:16490:0"
				},
				"id": 0
			}
		}
	}
}