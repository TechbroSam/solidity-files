{
	"id": "4812ecd4978f07c52ef1042458200e87",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/liquiditylockchatgpt.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// Import the ERC20 interface for handling ERC20 tokens.\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract LiquidityPoolLock {\r\n    // Address of the liquidity token (e.g., LP tokens).\r\n    address public liquidityToken;\r\n\r\n    // Address of the owner/admin who can lock/unlock tokens.\r\n    address public owner;\r\n\r\n    // Mapping to track locked balances for each user.\r\n    mapping(address => uint256) public lockedBalances;\r\n\r\n    // Mapping to store the lock release times for each user.\r\n    mapping(address => uint256) public lockReleaseTimes;\r\n\r\n    // Event to log when tokens are locked.\r\n    event TokensLocked(address indexed user, uint256 amount, uint256 releaseTime);\r\n\r\n    // Event to log when tokens are unlocked.\r\n    event TokensUnlocked(address indexed user, uint256 amount);\r\n\r\n    constructor(address _liquidityToken) {\r\n        liquidityToken = _liquidityToken;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // Modifier to ensure that only the owner can call certain functions.\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    // Function to lock tokens for a specified duration.\r\n    function lockTokens(uint256 amount, uint256 durationInSeconds) external {\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        require(durationInSeconds > 0, \"Duration must be greater than 0\");\r\n\r\n        // Transfer liquidity tokens from the user to this contract.\r\n        IERC20(liquidityToken).transferFrom(msg.sender, address(this), amount);\r\n\r\n        // Calculate the lock release time.\r\n        uint256 releaseTime = block.timestamp + durationInSeconds;\r\n\r\n        // Update the user's locked balance and release time.\r\n        lockedBalances[msg.sender] += amount;\r\n        lockReleaseTimes[msg.sender] = releaseTime;\r\n\r\n        // Emit an event to log the token lock.\r\n        emit TokensLocked(msg.sender, amount, releaseTime);\r\n    }\r\n\r\n    // Function to unlock tokens if the lockup period has ended.\r\n    function unlockTokens() external {\r\n        uint256 lockedBalance = lockedBalances[msg.sender];\r\n        require(lockedBalance > 0, \"No tokens are locked\");\r\n\r\n        uint256 releaseTime = lockReleaseTimes[msg.sender];\r\n        require(block.timestamp >= releaseTime, \"Tokens are still locked\");\r\n\r\n        // Reset the user's locked balance and release time.\r\n        lockedBalances[msg.sender] = 0;\r\n        lockReleaseTimes[msg.sender] = 0;\r\n\r\n        // Transfer the locked tokens back to the user.\r\n        IERC20(liquidityToken).transfer(msg.sender, lockedBalance);\r\n\r\n        // Emit an event to log the token unlock.\r\n        emit TokensUnlocked(msg.sender, lockedBalance);\r\n    }\r\n\r\n    // Function to retrieve the user's locked balance and release time.\r\n    function getUserLockDetails(address user) external view returns (uint256, uint256) {\r\n        return (lockedBalances[user], lockReleaseTimes[user]);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/liquiditylockchatgpt.sol": {
				"LiquidityPoolLock": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_liquidityToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "TokensLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensUnlocked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserLockDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockReleaseTimes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "durationInSeconds",
									"type": "uint256"
								}
							],
							"name": "lockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/liquiditylockchatgpt.sol\":178:3035  contract LiquidityPoolLock {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/liquiditylockchatgpt.sol\":882:999  constructor(address _liquidityToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/liquiditylockchatgpt.sol\":930:944  liquidityToken */\n  0x00\n    /* \"contracts/liquiditylockchatgpt.sol\":930:962  liquidityToken = _liquidityToken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  swap1\n  sstore\n  0x01\n    /* \"contracts/liquiditylockchatgpt.sol\":973:991  owner = msg.sender */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/liquiditylockchatgpt.sol\":981:991  msg.sender */\n  caller\n    /* \"contracts/liquiditylockchatgpt.sol\":973:991  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/liquiditylockchatgpt.sol\":178:3035  contract LiquidityPoolLock {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/liquiditylockchatgpt.sol\":178:3035  contract LiquidityPoolLock {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/liquiditylockchatgpt.sol\":178:3035  contract LiquidityPoolLock {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x89158d8e\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x89158d8e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf234eae0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf968f493\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x0483a7f6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x207c089e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x43cd8f7e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/liquiditylockchatgpt.sol\":456:505  mapping(address => uint256) public lockedBalances */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":456:505  mapping(address => uint256) public lockedBalances */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/liquiditylockchatgpt.sol\":577:628  mapping(address => uint256) public lockReleaseTimes */\n    tag_4:\n      tag_11\n      tag_18\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_18:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/liquiditylockchatgpt.sol\":270:299  address public liquidityToken */\n    tag_5:\n      sload(0x00)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":651:683   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":633:684   */\n      dup2\n      mstore\n        /* \"#utility.yul\":621:623   */\n      0x20\n        /* \"#utility.yul\":606:624   */\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":270:299  address public liquidityToken */\n      tag_15\n        /* \"#utility.yul\":487:690   */\n      jump\n        /* \"contracts/liquiditylockchatgpt.sol\":1269:2033  function lockTokens(uint256 amount, uint256 durationInSeconds) external {... */\n    tag_6:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/liquiditylockchatgpt.sol\":371:391  address public owner */\n    tag_7:\n      sload(0x01)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/liquiditylockchatgpt.sol\":2877:3032  function getUserLockDetails(address user) external view returns (uint256, uint256) {... */\n    tag_8:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquiditylockchatgpt.sol\":2979:2999  lockedBalances[user] */\n      and\n        /* \"contracts/liquiditylockchatgpt.sol\":2942:2949  uint256 */\n      0x00\n        /* \"contracts/liquiditylockchatgpt.sol\":2979:2999  lockedBalances[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/liquiditylockchatgpt.sol\":2979:2993  lockedBalances */\n      0x02\n        /* \"contracts/liquiditylockchatgpt.sol\":2979:2999  lockedBalances[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/liquiditylockchatgpt.sol\":3001:3017  lockReleaseTimes */\n      0x03\n        /* \"contracts/liquiditylockchatgpt.sol\":3001:3023  lockReleaseTimes[user] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/liquiditylockchatgpt.sol\":2979:2999  lockedBalances[user] */\n      swap1\n      swap2\n        /* \"contracts/liquiditylockchatgpt.sol\":2877:3032  function getUserLockDetails(address user) external view returns (uint256, uint256) {... */\n      jump\n    tag_32:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1122:1147   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1178:1180   */\n      0x20\n        /* \"#utility.yul\":1163:1181   */\n      dup4\n      add\n        /* \"#utility.yul\":1156:1190   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1095:1113   */\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":2877:3032  function getUserLockDetails(address user) external view returns (uint256, uint256) {... */\n      tag_15\n        /* \"#utility.yul\":948:1196   */\n      jump\n        /* \"contracts/liquiditylockchatgpt.sol\":2107:2796  function unlockTokens() external {... */\n    tag_9:\n      tag_25\n      tag_38\n      jump\t// in\n        /* \"contracts/liquiditylockchatgpt.sol\":1269:2033  function lockTokens(uint256 amount, uint256 durationInSeconds) external {... */\n    tag_28:\n        /* \"contracts/liquiditylockchatgpt.sol\":1369:1370  0 */\n      0x00\n        /* \"contracts/liquiditylockchatgpt.sol\":1360:1366  amount */\n      dup3\n        /* \"contracts/liquiditylockchatgpt.sol\":1360:1370  amount > 0 */\n      gt\n        /* \"contracts/liquiditylockchatgpt.sol\":1352:1404  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1403:1405   */\n      0x20\n        /* \"contracts/liquiditylockchatgpt.sol\":1352:1404  require(amount > 0, \"Amount must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1385:1406   */\n      mstore\n        /* \"#utility.yul\":1442:1444   */\n      0x1d\n        /* \"#utility.yul\":1422:1440   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1415:1445   */\n      mstore\n        /* \"#utility.yul\":1481:1512   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":1461:1479   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1454:1513   */\n      mstore\n        /* \"#utility.yul\":1530:1548   */\n      0x64\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":1352:1404  require(amount > 0, \"Amount must be greater than 0\") */\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"contracts/liquiditylockchatgpt.sol\":1443:1444  0 */\n      0x00\n        /* \"contracts/liquiditylockchatgpt.sol\":1423:1440  durationInSeconds */\n      dup2\n        /* \"contracts/liquiditylockchatgpt.sol\":1423:1444  durationInSeconds > 0 */\n      gt\n        /* \"contracts/liquiditylockchatgpt.sol\":1415:1480  require(durationInSeconds > 0, \"Duration must be greater than 0\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1761:1763   */\n      0x20\n        /* \"contracts/liquiditylockchatgpt.sol\":1415:1480  require(durationInSeconds > 0, \"Duration must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1743:1764   */\n      mstore\n        /* \"#utility.yul\":1800:1802   */\n      0x1f\n        /* \"#utility.yul\":1780:1798   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1773:1803   */\n      mstore\n        /* \"#utility.yul\":1839:1872   */\n      0x4475726174696f6e206d7573742062652067726561746572207468616e203000\n        /* \"#utility.yul\":1819:1837   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1812:1873   */\n      mstore\n        /* \"#utility.yul\":1890:1908   */\n      0x64\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":1415:1480  require(durationInSeconds > 0, \"Duration must be greater than 0\") */\n      tag_41\n        /* \"#utility.yul\":1559:1914   */\n      jump\n        /* \"contracts/liquiditylockchatgpt.sol\":1415:1480  require(durationInSeconds > 0, \"Duration must be greater than 0\") */\n    tag_43:\n        /* \"contracts/liquiditylockchatgpt.sol\":1570:1584  liquidityToken */\n      sload(0x00)\n        /* \"contracts/liquiditylockchatgpt.sol\":1563:1633  IERC20(liquidityToken).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/liquiditylockchatgpt.sol\":1599:1609  msg.sender */\n      caller\n        /* \"contracts/liquiditylockchatgpt.sol\":1563:1633  IERC20(liquidityToken).transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2159:2193   */\n      mstore\n        /* \"contracts/liquiditylockchatgpt.sol\":1619:1623  this */\n      address\n        /* \"#utility.yul\":2209:2227   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2202:2245   */\n      mstore\n        /* \"#utility.yul\":2261:2279   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2254:2288   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquiditylockchatgpt.sol\":1570:1584  liquidityToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/liquiditylockchatgpt.sol\":1563:1598  IERC20(liquidityToken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2094:2112   */\n      0x64\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":1563:1633  IERC20(liquidityToken).transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      pop\n        /* \"contracts/liquiditylockchatgpt.sol\":1691:1710  uint256 releaseTime */\n      0x00\n        /* \"contracts/liquiditylockchatgpt.sol\":1713:1748  block.timestamp + durationInSeconds */\n      tag_52\n        /* \"contracts/liquiditylockchatgpt.sol\":1731:1748  durationInSeconds */\n      dup3\n        /* \"contracts/liquiditylockchatgpt.sol\":1713:1728  block.timestamp */\n      timestamp\n        /* \"contracts/liquiditylockchatgpt.sol\":1713:1748  block.timestamp + durationInSeconds */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/liquiditylockchatgpt.sol\":1839:1849  msg.sender */\n      caller\n        /* \"contracts/liquiditylockchatgpt.sol\":1824:1850  lockedBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/liquiditylockchatgpt.sol\":1824:1838  lockedBalances */\n      0x02\n        /* \"contracts/liquiditylockchatgpt.sol\":1824:1850  lockedBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/liquiditylockchatgpt.sol\":1824:1860  lockedBalances[msg.sender] += amount */\n      dup1\n      sload\n        /* \"contracts/liquiditylockchatgpt.sol\":1691:1748  uint256 releaseTime = block.timestamp + durationInSeconds */\n      swap3\n      swap4\n      pop\n        /* \"contracts/liquiditylockchatgpt.sol\":1854:1860  amount */\n      dup6\n      swap3\n        /* \"contracts/liquiditylockchatgpt.sol\":1824:1850  lockedBalances[msg.sender] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/liquiditylockchatgpt.sol\":1824:1860  lockedBalances[msg.sender] += amount */\n      tag_54\n      swap1\n        /* \"contracts/liquiditylockchatgpt.sol\":1854:1860  amount */\n      dup5\n      swap1\n        /* \"contracts/liquiditylockchatgpt.sol\":1824:1860  lockedBalances[msg.sender] += amount */\n      tag_53\n      jump\t// in\n    tag_54:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/liquiditylockchatgpt.sol\":1888:1898  msg.sender */\n      caller\n        /* \"contracts/liquiditylockchatgpt.sol\":1871:1899  lockReleaseTimes[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquiditylockchatgpt.sol\":1871:1887  lockReleaseTimes */\n      0x03\n        /* \"contracts/liquiditylockchatgpt.sol\":1871:1899  lockReleaseTimes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/liquiditylockchatgpt.sol\":1871:1913  lockReleaseTimes[msg.sender] = releaseTime */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/liquiditylockchatgpt.sol\":1980:2025  TokensLocked(msg.sender, amount, releaseTime) */\n      dup2\n      mload\n        /* \"#utility.yul\":1122:1147   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":1163:1181   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1156:1190   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/liquiditylockchatgpt.sol\":1980:2025  TokensLocked(msg.sender, amount, releaseTime) */\n      0xd741e738a23fd18a03a26522320d9fc6cac1fed483e215ea9150fbc2fc43385d\n      swap2\n        /* \"#utility.yul\":1095:1113   */\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":1980:2025  TokensLocked(msg.sender, amount, releaseTime) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/liquiditylockchatgpt.sol\":1341:2033  {... */\n      pop\n        /* \"contracts/liquiditylockchatgpt.sol\":1269:2033  function lockTokens(uint256 amount, uint256 durationInSeconds) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/liquiditylockchatgpt.sol\":2107:2796  function unlockTokens() external {... */\n    tag_38:\n        /* \"contracts/liquiditylockchatgpt.sol\":2190:2200  msg.sender */\n      caller\n        /* \"contracts/liquiditylockchatgpt.sol\":2151:2172  uint256 lockedBalance */\n      0x00\n        /* \"contracts/liquiditylockchatgpt.sol\":2175:2201  lockedBalances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/liquiditylockchatgpt.sol\":2175:2189  lockedBalances */\n      0x02\n        /* \"contracts/liquiditylockchatgpt.sol\":2175:2201  lockedBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/liquiditylockchatgpt.sol\":2220:2237  lockedBalance > 0 */\n      dup1\n        /* \"contracts/liquiditylockchatgpt.sol\":2212:2262  require(lockedBalance > 0, \"No tokens are locked\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3010:3012   */\n      0x20\n        /* \"contracts/liquiditylockchatgpt.sol\":2212:2262  require(lockedBalance > 0, \"No tokens are locked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2992:3013   */\n      mstore\n        /* \"#utility.yul\":3049:3051   */\n      0x14\n        /* \"#utility.yul\":3029:3047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3022:3052   */\n      mstore\n      shl(0x62, 0x139bc81d1bdad95b9cc8185c99481b1bd8dad959)\n        /* \"#utility.yul\":3068:3086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3061:3111   */\n      mstore\n        /* \"#utility.yul\":3128:3146   */\n      0x64\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":2212:2262  require(lockedBalance > 0, \"No tokens are locked\") */\n      tag_41\n        /* \"#utility.yul\":2808:3152   */\n      jump\n        /* \"contracts/liquiditylockchatgpt.sol\":2212:2262  require(lockedBalance > 0, \"No tokens are locked\") */\n    tag_58:\n        /* \"contracts/liquiditylockchatgpt.sol\":2314:2324  msg.sender */\n      caller\n        /* \"contracts/liquiditylockchatgpt.sol\":2275:2294  uint256 releaseTime */\n      0x00\n        /* \"contracts/liquiditylockchatgpt.sol\":2297:2325  lockReleaseTimes[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/liquiditylockchatgpt.sol\":2297:2313  lockReleaseTimes */\n      0x03\n        /* \"contracts/liquiditylockchatgpt.sol\":2297:2325  lockReleaseTimes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/liquiditylockchatgpt.sol\":2344:2359  block.timestamp */\n      timestamp\n        /* \"contracts/liquiditylockchatgpt.sol\":2344:2374  block.timestamp >= releaseTime */\n      dup2\n      gt\n      iszero\n        /* \"contracts/liquiditylockchatgpt.sol\":2336:2402  require(block.timestamp >= releaseTime, \"Tokens are still locked\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3359:3361   */\n      0x20\n        /* \"contracts/liquiditylockchatgpt.sol\":2336:2402  require(block.timestamp >= releaseTime, \"Tokens are still locked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3341:3362   */\n      mstore\n        /* \"#utility.yul\":3398:3400   */\n      0x17\n        /* \"#utility.yul\":3378:3396   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3371:3401   */\n      mstore\n        /* \"#utility.yul\":3437:3462   */\n      0x546f6b656e7320617265207374696c6c206c6f636b6564000000000000000000\n        /* \"#utility.yul\":3417:3435   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3410:3463   */\n      mstore\n        /* \"#utility.yul\":3480:3498   */\n      0x64\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":2336:2402  require(block.timestamp >= releaseTime, \"Tokens are still locked\") */\n      tag_41\n        /* \"#utility.yul\":3157:3504   */\n      jump\n        /* \"contracts/liquiditylockchatgpt.sol\":2336:2402  require(block.timestamp >= releaseTime, \"Tokens are still locked\") */\n    tag_61:\n        /* \"contracts/liquiditylockchatgpt.sol\":2492:2502  msg.sender */\n      caller\n        /* \"contracts/liquiditylockchatgpt.sol\":2506:2507  0 */\n      0x00\n        /* \"contracts/liquiditylockchatgpt.sol\":2477:2503  lockedBalances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquiditylockchatgpt.sol\":2477:2491  lockedBalances */\n      0x02\n        /* \"contracts/liquiditylockchatgpt.sol\":2477:2503  lockedBalances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquiditylockchatgpt.sol\":2477:2507  lockedBalances[msg.sender] = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/liquiditylockchatgpt.sol\":2518:2534  lockReleaseTimes */\n      0x03\n        /* \"contracts/liquiditylockchatgpt.sol\":2518:2546  lockReleaseTimes[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/liquiditylockchatgpt.sol\":2518:2550  lockReleaseTimes[msg.sender] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/liquiditylockchatgpt.sol\":2627:2641  liquidityToken */\n      swap1\n      sload\n        /* \"contracts/liquiditylockchatgpt.sol\":2620:2678  IERC20(liquidityToken).transfer(msg.sender, lockedBalance) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3683:3734   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3750:3768   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3743:3777   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquiditylockchatgpt.sol\":2627:2641  liquidityToken */\n      and\n      swap1\n        /* \"contracts/liquiditylockchatgpt.sol\":2620:2651  IERC20(liquidityToken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3656:3674   */\n      0x44\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":2620:2678  IERC20(liquidityToken).transfer(msg.sender, lockedBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_68:\n      pop\n        /* \"contracts/liquiditylockchatgpt.sol\":2747:2788  TokensUnlocked(msg.sender, lockedBalance) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/liquiditylockchatgpt.sol\":2762:2772  msg.sender */\n      caller\n      swap1\n        /* \"contracts/liquiditylockchatgpt.sol\":2747:2788  TokensUnlocked(msg.sender, lockedBalance) */\n      0xe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/liquiditylockchatgpt.sol\":2747:2788  TokensUnlocked(msg.sender, lockedBalance) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/liquiditylockchatgpt.sol\":2140:2796  {... */\n      pop\n      pop\n        /* \"contracts/liquiditylockchatgpt.sol\":2107:2796  function unlockTokens() external {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_13:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_72:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_73:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":695:943   */\n    tag_27:\n        /* \"#utility.yul\":763:769   */\n      0x00\n        /* \"#utility.yul\":771:777   */\n      dup1\n        /* \"#utility.yul\":824:826   */\n      0x40\n        /* \"#utility.yul\":812:821   */\n      dup4\n        /* \"#utility.yul\":803:810   */\n      dup6\n        /* \"#utility.yul\":799:822   */\n      sub\n        /* \"#utility.yul\":795:827   */\n      slt\n        /* \"#utility.yul\":792:844   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":837:838   */\n      dup1\n        /* \"#utility.yul\":830:842   */\n      revert\n        /* \"#utility.yul\":792:844   */\n    tag_77:\n      pop\n      pop\n        /* \"#utility.yul\":863:886   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":933:935   */\n      0x20\n        /* \"#utility.yul\":918:936   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":905:937   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":695:943   */\n      jump\t// out\n        /* \"#utility.yul\":2299:2576   */\n    tag_51:\n        /* \"#utility.yul\":2366:2372   */\n      0x00\n        /* \"#utility.yul\":2419:2421   */\n      0x20\n        /* \"#utility.yul\":2407:2416   */\n      dup3\n        /* \"#utility.yul\":2398:2405   */\n      dup5\n        /* \"#utility.yul\":2394:2417   */\n      sub\n        /* \"#utility.yul\":2390:2422   */\n      slt\n        /* \"#utility.yul\":2387:2439   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2435:2436   */\n      0x00\n        /* \"#utility.yul\":2432:2433   */\n      dup1\n        /* \"#utility.yul\":2425:2437   */\n      revert\n        /* \"#utility.yul\":2387:2439   */\n    tag_83:\n        /* \"#utility.yul\":2467:2476   */\n      dup2\n        /* \"#utility.yul\":2461:2477   */\n      mload\n        /* \"#utility.yul\":2520:2525   */\n      dup1\n        /* \"#utility.yul\":2513:2526   */\n      iszero\n        /* \"#utility.yul\":2506:2527   */\n      iszero\n        /* \"#utility.yul\":2499:2504   */\n      dup2\n        /* \"#utility.yul\":2496:2528   */\n      eq\n        /* \"#utility.yul\":2486:2546   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2542:2543   */\n      0x00\n        /* \"#utility.yul\":2539:2540   */\n      dup1\n        /* \"#utility.yul\":2532:2544   */\n      revert\n        /* \"#utility.yul\":2581:2803   */\n    tag_53:\n        /* \"#utility.yul\":2646:2655   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2667:2677   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2664:2797   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2719:2729   */\n      0x4e487b71\n        /* \"#utility.yul\":2714:2717   */\n      0xe0\n        /* \"#utility.yul\":2710:2730   */\n      shl\n        /* \"#utility.yul\":2707:2708   */\n      0x00\n        /* \"#utility.yul\":2700:2731   */\n      mstore\n        /* \"#utility.yul\":2754:2758   */\n      0x11\n        /* \"#utility.yul\":2751:2752   */\n      0x04\n        /* \"#utility.yul\":2744:2759   */\n      mstore\n        /* \"#utility.yul\":2782:2786   */\n      0x24\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2772:2787   */\n      revert\n        /* \"#utility.yul\":2664:2797   */\n    tag_86:\n        /* \"#utility.yul\":2581:2803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220008fa363a2f31d34140a0a3ec10bd2fc59a7e1bac2ddd82db2945d4c192de32d64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_121": {
									"entryPoint": null,
									"id": 121,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 93,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:2"
															},
															"nodeType": "YulIf",
															"src": "105:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:2"
															},
															"nodeType": "YulIf",
															"src": "204:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:2",
														"type": ""
													}
												],
												"src": "14:290:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161061038038061061083398101604081905261002f9161005d565b600080546001600160a01b039092166001600160a01b0319928316179055600180549091163317905561008d565b60006020828403121561006f57600080fd5b81516001600160a01b038116811461008657600080fd5b9392505050565b6105748061009c6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806389158d8e1161005b57806389158d8e146101005780638da5cb5b14610115578063f234eae014610128578063f968f4931461017357600080fd5b80630483a7f614610082578063207c089e146100b557806343cd8f7e146100d5575b600080fd5b6100a26100903660046104a3565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100a26100c33660046104a3565b60036020526000908152604090205481565b6000546100e8906001600160a01b031681565b6040516001600160a01b0390911681526020016100ac565b61011361010e3660046104d3565b61017b565b005b6001546100e8906001600160a01b031681565b61015e6101363660046104a3565b6001600160a01b03166000908152600260209081526040808320546003909252909120549091565b604080519283526020830191909152016100ac565b610113610322565b600082116101d05760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b600081116102205760405162461bcd60e51b815260206004820152601f60248201527f4475726174696f6e206d7573742062652067726561746572207468616e20300060448201526064016101c7565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029b91906104f5565b5060006102a88242610517565b336000908152600260205260408120805492935085929091906102cc908490610517565b90915550503360008181526003602090815260409182902084905581518681529081018490527fd741e738a23fd18a03a26522320d9fc6cac1fed483e215ea9150fbc2fc43385d910160405180910390a2505050565b33600090815260026020526040902054806103765760405162461bcd60e51b8152602060048201526014602482015273139bc81d1bdad95b9cc8185c99481b1bd8dad95960621b60448201526064016101c7565b33600090815260036020526040902054428111156103d65760405162461bcd60e51b815260206004820152601760248201527f546f6b656e7320617265207374696c6c206c6f636b656400000000000000000060448201526064016101c7565b33600081815260026020908152604080832083905560039091528082208290559054905163a9059cbb60e01b81526004810192909252602482018490526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610445573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046991906104f5565b5060405182815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e11958889060200160405180910390a25050565b6000602082840312156104b557600080fd5b81356001600160a01b03811681146104cc57600080fd5b9392505050565b600080604083850312156104e657600080fd5b50508035926020909101359150565b60006020828403121561050757600080fd5b815180151581146104cc57600080fd5b8082018082111561053857634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220008fa363a2f31d34140a0a3ec10bd2fc59a7e1bac2ddd82db2945d4c192de32d64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x610 CODESIZE SUB DUP1 PUSH2 0x610 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x5D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE PUSH2 0x8D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x574 DUP1 PUSH2 0x9C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89158D8E GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x89158D8E EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xF234EAE0 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x483A7F6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x207C089E EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x43CD8F7E EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA2 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0x113 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x15E PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0x113 PUSH2 0x322 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x4F5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2A8 DUP3 TIMESTAMP PUSH2 0x517 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2CC SWAP1 DUP5 SWAP1 PUSH2 0x517 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xD741E738A23FD18A03A26522320D9FC6CAC1FED483E215EA9150FBC2FC43385D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC81D1BDAD95B9CC8185C99481B1BD8DAD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 GT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE SWAP1 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x445 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x4F5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x538 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP16 LOG3 PUSH4 0xA2F31D34 EQ EXP EXP RETURNDATACOPY 0xC1 SIGNEXTEND 0xD2 0xFC MSIZE 0xA7 0xE1 0xBA 0xC2 0xDD 0xD8 0x2D 0xB2 SWAP5 0x5D 0x4C NOT 0x2D 0xE3 0x2D PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "178:2857:1:-:0;;;882:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;930:14;:32;;-1:-1:-1;;;;;930:32:1;;;-1:-1:-1;;;;;;930:32:1;;;;;;;973:18;;;;;981:10;973:18;;;178:2857;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;:::-;178:2857:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getUserLockDetails_276": {
									"entryPoint": null,
									"id": 276,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@liquidityToken_82": {
									"entryPoint": null,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockReleaseTimes_92": {
									"entryPoint": null,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockTokens_196": {
									"entryPoint": 379,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@lockedBalances_88": {
									"entryPoint": null,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unlockTokens_258": {
									"entryPoint": 802,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_194c4b33978ac05d9af7dc789d9b504ff66c07f32169d7d81634bb611da0db9f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3785:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nodeType": "YulIf",
															"src": "94:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:2"
															},
															"nodeType": "YulIf",
															"src": "200:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:286:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "469:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:2",
														"type": ""
													}
												],
												"src": "305:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "588:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "598:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "610:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "621:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "606:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "606:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "598:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "640:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "655:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "671:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "676:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "667:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "667:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "680:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "663:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "663:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "651:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "633:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "633:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "633:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "557:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "568:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "579:4:2",
														"type": ""
													}
												],
												"src": "487:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "782:161:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "828:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "837:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "830:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "830:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "830:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "803:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "799:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "824:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "795:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:32:2"
															},
															"nodeType": "YulIf",
															"src": "792:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "876:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "863:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "895:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "922:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "933:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "918:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "918:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "905:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "740:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "751:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "763:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "771:6:2",
														"type": ""
													}
												],
												"src": "695:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1077:119:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1087:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1099:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1095:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1095:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1087:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1129:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1140:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1122:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1167:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1178:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1156:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1038:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1049:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1057:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1068:4:2",
														"type": ""
													}
												],
												"src": "948:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1375:179:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1392:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1403:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1385:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1385:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1385:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1426:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1437:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1422:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1422:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1442:2:2",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1415:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1465:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1476:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1461:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1461:18:2"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1481:31:2",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:59:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1522:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1534:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1545:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1530:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1522:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1352:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1366:4:2",
														"type": ""
													}
												],
												"src": "1201:353:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1733:181:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1750:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1743:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1784:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1780:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1780:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1823:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1834:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1819:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1819:18:2"
																	},
																	{
																		"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1839:33:2",
																		"type": "",
																		"value": "Duration must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1812:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1812:61:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1882:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1894:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1890:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1890:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1882:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1710:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1724:4:2",
														"type": ""
													}
												],
												"src": "1559:355:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2076:218:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2086:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2098:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2109:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2086:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2121:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2139:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2144:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2135:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2135:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2148:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2131:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2125:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2166:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2181:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2189:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2177:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2177:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2159:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2159:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2159:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2213:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2224:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2209:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2209:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2233:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2241:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2229:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2229:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2202:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2202:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2202:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2265:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2276:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2261:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2261:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2281:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2254:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2029:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2040:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2048:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2056:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2067:4:2",
														"type": ""
													}
												],
												"src": "1919:375:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:199:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2432:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2435:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2425:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2425:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2398:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2407:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2394:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2419:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:32:2"
															},
															"nodeType": "YulIf",
															"src": "2387:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2448:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2467:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2461:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2452:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2530:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2539:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2542:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2532:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2532:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2532:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2499:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2520:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2513:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2513:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2506:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2506:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2496:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2496:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:40:2"
															},
															"nodeType": "YulIf",
															"src": "2486:60:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2555:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2565:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2555:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2343:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2354:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2366:6:2",
														"type": ""
													}
												],
												"src": "2299:277:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:174:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2639:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2650:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2653:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2646:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2686:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2707:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2714:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2719:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2710:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2710:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2700:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2700:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2700:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2751:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2754:4:2",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2744:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2744:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2744:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2779:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2782:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2772:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2772:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2772:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2670:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2673:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2667:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:10:2"
															},
															"nodeType": "YulIf",
															"src": "2664:133:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2612:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2615:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2621:3:2",
														"type": ""
													}
												],
												"src": "2581:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2982:170:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2999:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2992:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2992:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3033:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3044:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3029:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3029:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3022:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3072:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3083:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3068:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3068:18:2"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320617265206c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3088:22:2",
																		"type": "",
																		"value": "No tokens are locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3061:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3061:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3061:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3120:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3132:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3143:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3128:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3120:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_194c4b33978ac05d9af7dc789d9b504ff66c07f32169d7d81634bb611da0db9f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2959:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2973:4:2",
														"type": ""
													}
												],
												"src": "2808:344:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3331:173:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3341:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3341:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3382:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3393:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3378:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3378:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:2",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3371:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3432:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3417:18:2"
																	},
																	{
																		"hexValue": "546f6b656e7320617265207374696c6c206c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3437:25:2",
																		"type": "",
																		"value": "Tokens are still locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3410:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3410:53:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3410:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3472:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3484:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3495:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3480:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3472:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3308:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3322:4:2",
														"type": ""
													}
												],
												"src": "3157:347:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3638:145:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3648:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3660:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3671:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3656:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3648:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3721:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3726:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3717:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3717:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3730:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3713:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3713:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3701:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3701:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3683:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3683:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3683:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3754:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3765:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3750:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3750:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3770:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3599:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3610:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3618:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3629:4:2",
														"type": ""
													}
												],
												"src": "3509:274:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Duration must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_194c4b33978ac05d9af7dc789d9b504ff66c07f32169d7d81634bb611da0db9f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"No tokens are locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Tokens are still locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806389158d8e1161005b57806389158d8e146101005780638da5cb5b14610115578063f234eae014610128578063f968f4931461017357600080fd5b80630483a7f614610082578063207c089e146100b557806343cd8f7e146100d5575b600080fd5b6100a26100903660046104a3565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100a26100c33660046104a3565b60036020526000908152604090205481565b6000546100e8906001600160a01b031681565b6040516001600160a01b0390911681526020016100ac565b61011361010e3660046104d3565b61017b565b005b6001546100e8906001600160a01b031681565b61015e6101363660046104a3565b6001600160a01b03166000908152600260209081526040808320546003909252909120549091565b604080519283526020830191909152016100ac565b610113610322565b600082116101d05760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b600081116102205760405162461bcd60e51b815260206004820152601f60248201527f4475726174696f6e206d7573742062652067726561746572207468616e20300060448201526064016101c7565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029b91906104f5565b5060006102a88242610517565b336000908152600260205260408120805492935085929091906102cc908490610517565b90915550503360008181526003602090815260409182902084905581518681529081018490527fd741e738a23fd18a03a26522320d9fc6cac1fed483e215ea9150fbc2fc43385d910160405180910390a2505050565b33600090815260026020526040902054806103765760405162461bcd60e51b8152602060048201526014602482015273139bc81d1bdad95b9cc8185c99481b1bd8dad95960621b60448201526064016101c7565b33600090815260036020526040902054428111156103d65760405162461bcd60e51b815260206004820152601760248201527f546f6b656e7320617265207374696c6c206c6f636b656400000000000000000060448201526064016101c7565b33600081815260026020908152604080832083905560039091528082208290559054905163a9059cbb60e01b81526004810192909252602482018490526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610445573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046991906104f5565b5060405182815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e11958889060200160405180910390a25050565b6000602082840312156104b557600080fd5b81356001600160a01b03811681146104cc57600080fd5b9392505050565b600080604083850312156104e657600080fd5b50508035926020909101359150565b60006020828403121561050757600080fd5b815180151581146104cc57600080fd5b8082018082111561053857634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220008fa363a2f31d34140a0a3ec10bd2fc59a7e1bac2ddd82db2945d4c192de32d64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89158D8E GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x89158D8E EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xF234EAE0 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x483A7F6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x207C089E EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x43CD8F7E EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA2 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0x113 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x15E PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0x113 PUSH2 0x322 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x4F5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2A8 DUP3 TIMESTAMP PUSH2 0x517 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2CC SWAP1 DUP5 SWAP1 PUSH2 0x517 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xD741E738A23FD18A03A26522320D9FC6CAC1FED483E215EA9150FBC2FC43385D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC81D1BDAD95B9CC8185C99481B1BD8DAD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 GT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE SWAP1 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x445 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x4F5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x538 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP16 LOG3 PUSH4 0xA2F31D34 EQ EXP EXP RETURNDATACOPY 0xC1 SIGNEXTEND 0xD2 0xFC MSIZE 0xA7 0xE1 0xBA 0xC2 0xDD 0xD8 0x2D 0xB2 SWAP5 0x5D 0x4C NOT 0x2D 0xE3 0x2D PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "178:2857:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;451:25:2;;;439:2;424:18;456:49:1;;;;;;;;577:51;;;;;;:::i;:::-;;;;;;;;;;;;;;270:29;;;;;-1:-1:-1;;;;;270:29:1;;;;;;-1:-1:-1;;;;;651:32:2;;;633:51;;621:2;606:18;270:29:1;487:203:2;1269:764:1;;;;;;:::i;:::-;;:::i;:::-;;371:20;;;;;-1:-1:-1;;;;;371:20:1;;;2877:155;;;;;;:::i;:::-;-1:-1:-1;;;;;2979:20:1;2942:7;2979:20;;;:14;:20;;;;;;;;;3001:16;:22;;;;;;;2979:20;;2877:155;;;;;1122:25:2;;;1178:2;1163:18;;1156:34;;;;1095:18;2877:155:1;948:248:2;2107:689:1;;;:::i;1269:764::-;1369:1;1360:6;:10;1352:52;;;;-1:-1:-1;;;1352:52:1;;1403:2:2;1352:52:1;;;1385:21:2;1442:2;1422:18;;;1415:30;1481:31;1461:18;;;1454:59;1530:18;;1352:52:1;;;;;;;;;1443:1;1423:17;:21;1415:65;;;;-1:-1:-1;;;1415:65:1;;1761:2:2;1415:65:1;;;1743:21:2;1800:2;1780:18;;;1773:30;1839:33;1819:18;;;1812:61;1890:18;;1415:65:1;1559:355:2;1415:65:1;1570:14;;1563:70;;-1:-1:-1;;;1563:70:1;;1599:10;1563:70;;;2159:34:2;1619:4:1;2209:18:2;;;2202:43;2261:18;;;2254:34;;;-1:-1:-1;;;;;1570:14:1;;;;1563:35;;2094:18:2;;1563:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1691:19:1;1713:35;1731:17;1713:15;:35;:::i;:::-;1839:10;1824:26;;;;:14;:26;;;;;:36;;1691:57;;-1:-1:-1;1854:6:1;;1824:26;;;:36;;1854:6;;1824:36;:::i;:::-;;;;-1:-1:-1;;1888:10:1;1871:28;;;;:16;:28;;;;;;;;;:42;;;1980:45;;1122:25:2;;;1163:18;;;1156:34;;;1980:45:1;;1095:18:2;1980:45:1;;;;;;;1341:692;1269:764;;:::o;2107:689::-;2190:10;2151:21;2175:26;;;:14;:26;;;;;;2220:17;2212:50;;;;-1:-1:-1;;;2212:50:1;;3010:2:2;2212:50:1;;;2992:21:2;3049:2;3029:18;;;3022:30;-1:-1:-1;;;3068:18:2;;;3061:50;3128:18;;2212:50:1;2808:344:2;2212:50:1;2314:10;2275:19;2297:28;;;:16;:28;;;;;;2344:15;:30;-1:-1:-1;2344:30:1;2336:66;;;;-1:-1:-1;;;2336:66:1;;3359:2:2;2336:66:1;;;3341:21:2;3398:2;3378:18;;;3371:30;3437:25;3417:18;;;3410:53;3480:18;;2336:66:1;3157:347:2;2336:66:1;2492:10;2506:1;2477:26;;;:14;:26;;;;;;;;:30;;;2518:16;:28;;;;;;:32;;;2627:14;;2620:58;;-1:-1:-1;;;2620:58:1;;;;;3683:51:2;;;;3750:18;;;3743:34;;;-1:-1:-1;;;;;2627:14:1;;2620:31;;3656:18:2;;2620:58:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2747:41:1;;451:25:2;;;2762:10:1;;2747:41;;439:2:2;424:18;2747:41:1;;;;;;;2140:656;;2107:689::o;14:286:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:2;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:2:o;695:248::-;763:6;771;824:2;812:9;803:7;799:23;795:32;792:52;;;840:1;837;830:12;792:52;-1:-1:-1;;863:23:2;;;933:2;918:18;;;905:32;;-1:-1:-1;695:248:2:o;2299:277::-;2366:6;2419:2;2407:9;2398:7;2394:23;2390:32;2387:52;;;2435:1;2432;2425:12;2387:52;2467:9;2461:16;2520:5;2513:13;2506:21;2499:5;2496:32;2486:60;;2542:1;2539;2532:12;2581:222;2646:9;;;2667:10;;;2664:133;;;2719:10;2714:3;2710:20;2707:1;2700:31;2754:4;2751:1;2744:15;2782:4;2779:1;2772:15;2664:133;2581:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "279200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getUserLockDetails(address)": "4742",
								"liquidityToken()": "2382",
								"lockReleaseTimes(address)": "2496",
								"lockTokens(uint256,uint256)": "infinite",
								"lockedBalances(address)": "2474",
								"owner()": "2359",
								"unlockTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 178,
									"end": 3035,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 882,
									"end": 999,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 882,
									"end": 999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 882,
									"end": 999,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 882,
									"end": 999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 882,
									"end": 999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 882,
									"end": 999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 882,
									"end": 999,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 882,
									"end": 999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 930,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 962,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 930,
									"end": 962,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 973,
									"end": 991,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 973,
									"end": 991,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 973,
									"end": 991,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 973,
									"end": 991,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 973,
									"end": 991,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 981,
									"end": 991,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 973,
									"end": 991,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 973,
									"end": 991,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 973,
									"end": 991,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 3035,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220008fa363a2f31d34140a0a3ec10bd2fc59a7e1bac2ddd82db2945d4c192de32d64736f6c63430008130033",
									".code": [
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "89158D8E"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "89158D8E"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "F234EAE0"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "F968F493"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "483A7F6"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "207C089E"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "43CD8F7E"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 3035,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 456,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 451,
											"end": 476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 456,
											"end": 505,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 505,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 577,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 577,
											"end": 628,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 577,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 577,
											"end": 628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 577,
											"end": 628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 577,
											"end": 628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 577,
											"end": 628,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 270,
											"end": 299,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 270,
											"end": 299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 270,
											"end": 299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 270,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 270,
											"end": 299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 270,
											"end": 299,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 270,
											"end": 299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 270,
											"end": 299,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 270,
											"end": 299,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 270,
											"end": 299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 270,
											"end": 299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 299,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 651,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 651,
											"end": 683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 651,
											"end": 683,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 633,
											"end": 684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 633,
											"end": 684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 621,
											"end": 623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 270,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 487,
											"end": 690,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1269,
											"end": 2033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1269,
											"end": 2033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 391,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 391,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 371,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 371,
											"end": 391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 371,
											"end": 391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 371,
											"end": 391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 371,
											"end": 391,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2877,
											"end": 3032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 2949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2993,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1147,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1147,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1190,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1190,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 948,
											"end": 1196,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2796,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2107,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2107,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2107,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1444,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 1461,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1461,
											"end": 1479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1530,
											"end": 1548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1763,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1780,
											"end": 1798,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1780,
											"end": 1798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "4475726174696F6E206D7573742062652067726561746572207468616E203000"
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1908,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1890,
											"end": 1908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1559,
											"end": 1914,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1415,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1623,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2209,
											"end": 2227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2279,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2261,
											"end": 2279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1598,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1563,
											"end": 1598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1563,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1731,
											"end": 1748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1728,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1713,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1748,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1713,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1849,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1838,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1748,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1748,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1824,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1898,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1887,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1899,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1913,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1913,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1147,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1190,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "D741E738A23FD18A03A26522320D9FC6CAC1FED483E215EA9150FBC2FC43385D"
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2025,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 2033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 2033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 2033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2796,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2107,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2200,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3052,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81D1BDAD95B9CC8185C99481B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3068,
											"end": 3086,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3111,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2808,
											"end": 3152,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2212,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2324,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2297,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2325,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2325,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2344,
											"end": 2359,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2344,
											"end": 2374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2344,
											"end": 2374,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3437,
											"end": 3462,
											"name": "PUSH",
											"source": 2,
											"value": "546F6B656E7320617265207374696C6C206C6F636B6564000000000000000000"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3157,
											"end": 3504,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2336,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2502,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2503,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2507,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2534,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2518,
											"end": 2546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2546,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2641,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3734,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3734,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3768,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3750,
											"end": 3768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3777,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3777,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2641,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2651,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 2620,
											"end": 2651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3674,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3656,
											"end": 3674,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2620,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2620,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2762,
											"end": 2772,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "E7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2788,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 695,
											"end": 943,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 695,
											"end": 943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 763,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 777,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 803,
											"end": 810,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 799,
											"end": 822,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 795,
											"end": 827,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 792,
											"end": 844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 792,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 792,
											"end": 844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 830,
											"end": 842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 792,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 792,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 863,
											"end": 886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 863,
											"end": 886,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 918,
											"end": 936,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 918,
											"end": 936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 905,
											"end": 937,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 905,
											"end": 937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 695,
											"end": 943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2576,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2299,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2416,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2422,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2439,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2387,
											"end": 2439,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2437,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2439,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2387,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2477,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2527,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2486,
											"end": 2546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2544,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2581,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2667,
											"end": 2677,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2667,
											"end": 2677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2667,
											"end": 2677,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2664,
											"end": 2797,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2719,
											"end": 2729,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 2714,
											"end": 2717,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2731,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2787,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2797,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2664,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2803,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2803,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2803,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/liquiditylockchatgpt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getUserLockDetails(address)": "f234eae0",
							"liquidityToken()": "43cd8f7e",
							"lockReleaseTimes(address)": "207c089e",
							"lockTokens(uint256,uint256)": "89158d8e",
							"lockedBalances(address)": "0483a7f6",
							"owner()": "8da5cb5b",
							"unlockTokens()": "f968f493"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"TokensLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnlocked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserLockDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockReleaseTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationInSeconds\",\"type\":\"uint256\"}],\"name\":\"lockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/liquiditylockchatgpt.sol\":\"LiquidityPoolLock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/liquiditylockchatgpt.sol\":{\"keccak256\":\"0x12b468858c8d819fbcbaec55f0a88ff33f228f8a5eaee325006f1fee108ef363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e595f41e3e9010aae3002bcedcbf74793d8c2a91be8bfc584993d3999fa0c01\",\"dweb:/ipfs/QmZUbAxUDNLNxYvRqxMHMFiBvmH9izADYSbr9hKsHzkyVe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/liquiditylockchatgpt.sol:LiquidityPoolLock",
								"label": "liquidityToken",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 84,
								"contract": "contracts/liquiditylockchatgpt.sol:LiquidityPoolLock",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 88,
								"contract": "contracts/liquiditylockchatgpt.sol:LiquidityPoolLock",
								"label": "lockedBalances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 92,
								"contract": "contracts/liquiditylockchatgpt.sol:LiquidityPoolLock",
								"label": "lockReleaseTimes",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0",
							"usedErrors": []
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"contracts/liquiditylockchatgpt.sol": {
				"ast": {
					"absolutePath": "contracts/liquiditylockchatgpt.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"LiquidityPoolLock": [
							277
						]
					},
					"id": 278,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 278,
							"sourceUnit": 78,
							"src": "118:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LiquidityPoolLock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 277,
							"linearizedBaseContracts": [
								277
							],
							"name": "LiquidityPoolLock",
							"nameLocation": "187:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "43cd8f7e",
									"id": 82,
									"mutability": "mutable",
									"name": "liquidityToken",
									"nameLocation": "285:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 277,
									"src": "270:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "270:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 84,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "386:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 277,
									"src": "371:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 83,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "371:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0483a7f6",
									"id": 88,
									"mutability": "mutable",
									"name": "lockedBalances",
									"nameLocation": "491:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 277,
									"src": "456:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 87,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 85,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "464:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "456:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 86,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "475:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "207c089e",
									"id": 92,
									"mutability": "mutable",
									"name": "lockReleaseTimes",
									"nameLocation": "612:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 277,
									"src": "577:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 91,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 89,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "585:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "577:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 90,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "596:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d741e738a23fd18a03a26522320d9fc6cac1fed483e215ea9150fbc2fc43385d",
									"id": 100,
									"name": "TokensLocked",
									"nameLocation": "688:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "717:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "701:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "731:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "723:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "747:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "739:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "700:59:1"
									},
									"src": "682:78:1"
								},
								{
									"anonymous": false,
									"eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
									"id": 106,
									"name": "TokensUnlocked",
									"nameLocation": "821:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "852:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "836:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "866:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "858:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:38:1"
									},
									"src": "815:59:1"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "919:80:1",
										"statements": [
											{
												"expression": {
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 111,
														"name": "liquidityToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "930:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 112,
														"name": "_liquidityToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "947:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "930:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "930:32:1"
											},
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "973:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 116,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "981:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "985:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "981:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "973:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "973:18:1"
											}
										]
									},
									"id": 121,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_liquidityToken",
												"nameLocation": "902:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "894:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "893:25:1"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "919:0:1"
									},
									"scope": 277,
									"src": "882:117:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1103:100:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 124,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1122:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1126:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1122:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 126,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "1136:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1122:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1143:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															},
															"value": "Only the owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1114:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1114:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1114:69:1"
											},
											{
												"id": 131,
												"nodeType": "PlaceholderStatement",
												"src": "1194:1:1"
											}
										]
									},
									"id": 133,
									"name": "onlyOwner",
									"nameLocation": "1091:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1100:2:1"
									},
									"src": "1082:121:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "1341:692:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 141,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "1360:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1369:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1360:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1372:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1352:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 148,
																"name": "durationInSeconds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1423:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1443:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1423:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e2030",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1446:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0",
																"typeString": "literal_string \"Duration must be greater than 0\""
															},
															"value": "Duration must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0",
																"typeString": "literal_string \"Duration must be greater than 0\""
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1415:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1415:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1415:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 158,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1599:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1603:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1599:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 162,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1619:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPoolLock_$277",
																		"typeString": "contract LiquidityPoolLock"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPoolLock_$277",
																		"typeString": "contract LiquidityPoolLock"
																	}
																],
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1611:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 160,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1611:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1611:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 164,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "1626:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 155,
																	"name": "liquidityToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "1570:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 154,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1563:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1563:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1586:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1563:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1563:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "1563:70:1"
											},
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"mutability": "mutable",
														"name": "releaseTime",
														"nameLocation": "1699:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "1691:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1691:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 169,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1713:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1719:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1713:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "durationInSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "1731:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1713:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1691:57:1"
											},
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 174,
															"name": "lockedBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1824:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 177,
														"indexExpression": {
															"expression": {
																"id": 175,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1839:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1843:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1839:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1824:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 178,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "1854:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1824:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1824:36:1"
											},
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 181,
															"name": "lockReleaseTimes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1871:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 184,
														"indexExpression": {
															"expression": {
																"id": 182,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1888:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1892:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1888:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1871:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 185,
														"name": "releaseTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1902:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1871:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1871:42:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 189,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1993:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1997:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1993:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "2005:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 192,
															"name": "releaseTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "2013:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 188,
														"name": "TokensLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1980:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1980:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "EmitStatement",
												"src": "1975:50:1"
											}
										]
									},
									"functionSelector": "89158d8e",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockTokens",
									"nameLocation": "1278:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1297:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1289:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "durationInSeconds",
												"nameLocation": "1313:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1305:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:43:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1341:0:1"
									},
									"scope": 277,
									"src": "1269:764:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2140:656:1",
										"statements": [
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"mutability": "mutable",
														"name": "lockedBalance",
														"nameLocation": "2159:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "2151:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2151:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"baseExpression": {
														"id": 201,
														"name": "lockedBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "2175:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 204,
													"indexExpression": {
														"expression": {
															"id": 202,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2190:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2194:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2190:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2175:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2151:50:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 207,
																"name": "lockedBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2220:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2236:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2220:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320617265206c6f636b6564",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2239:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_194c4b33978ac05d9af7dc789d9b504ff66c07f32169d7d81634bb611da0db9f",
																"typeString": "literal_string \"No tokens are locked\""
															},
															"value": "No tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_194c4b33978ac05d9af7dc789d9b504ff66c07f32169d7d81634bb611da0db9f",
																"typeString": "literal_string \"No tokens are locked\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2212:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2212:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2212:50:1"
											},
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "releaseTime",
														"nameLocation": "2283:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "2275:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 213,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2275:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"baseExpression": {
														"id": 215,
														"name": "lockReleaseTimes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2297:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 218,
													"indexExpression": {
														"expression": {
															"id": 216,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2314:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2318:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2314:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2297:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2275:50:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 221,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2344:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2350:9:1",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2344:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 223,
																"name": "releaseTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "2363:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2344:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e7320617265207374696c6c206c6f636b6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2376:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af",
																"typeString": "literal_string \"Tokens are still locked\""
															},
															"value": "Tokens are still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af",
																"typeString": "literal_string \"Tokens are still locked\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2336:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2336:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2336:66:1"
											},
											{
												"expression": {
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 228,
															"name": "lockedBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "2477:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 231,
														"indexExpression": {
															"expression": {
																"id": 229,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2492:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2496:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2492:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2477:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2506:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2477:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2477:30:1"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 235,
															"name": "lockReleaseTimes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2518:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 238,
														"indexExpression": {
															"expression": {
																"id": 236,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2535:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2539:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2535:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2518:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2518:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "2518:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2652:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2656:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2652:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 248,
															"name": "lockedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "2664:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 243,
																	"name": "liquidityToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "2627:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2620:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2620:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2643:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "2620:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2620:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "2620:58:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 252,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2762:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2766:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2762:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "lockedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "2774:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 251,
														"name": "TokensUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2747:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2747:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "EmitStatement",
												"src": "2742:46:1"
											}
										]
									},
									"functionSelector": "f968f493",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlockTokens",
									"nameLocation": "2116:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2128:2:1"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2140:0:1"
									},
									"scope": 277,
									"src": "2107:689:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "2960:72:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 267,
																"name": "lockedBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "2979:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 269,
															"indexExpression": {
																"id": 268,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2994:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2979:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 270,
																"name": "lockReleaseTimes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "3001:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 272,
															"indexExpression": {
																"id": 271,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "3018:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3001:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 273,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2978:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 266,
												"id": 274,
												"nodeType": "Return",
												"src": "2971:53:1"
											}
										]
									},
									"functionSelector": "f234eae0",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserLockDetails",
									"nameLocation": "2886:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2913:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2905:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2904:14:1"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2942:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2951:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2951:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2941:18:1"
									},
									"scope": 277,
									"src": "2877:155:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 278,
							"src": "178:2857:1",
							"usedErrors": []
						}
					],
					"src": "33:3004:1"
				},
				"id": 1
			}
		}
	}
}