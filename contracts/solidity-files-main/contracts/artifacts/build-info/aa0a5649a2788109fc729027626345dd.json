{
	"id": "aa0a5649a2788109fc729027626345dd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Base7minutes.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint amountADesired,\r\n        uint amountBDesired,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB, uint liquidity);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n}\r\n\r\n\r\ncontract ONEMINUTE is ERC20, Ownable {\r\n\r\n\r\n   address public _owner;\r\n  \r\n    // Add event to emit when ownership is renounced\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n\r\n    // Function to allow the contract owner to renounce ownership\r\n    function renounceOwnership() public onlyOwner override  {\r\n        emit OwnershipRenounced(owner());\r\n        _owner = address(0);\r\n    }\r\n\r\n\r\n    uint256 private constant TOTAL_SUPPLY = 1_111_111_111_111 * 10**18;\r\n    uint256 public constant lockPeriod = 1 minutes;\r\n    uint256 constant public transferfee = 0;\r\n    uint256 constant public buyfee = 0;\r\n    uint256 constant public sellfee = 1;\r\n    uint256 constant public fee_denominator = 1_00;\r\n    uint256 public maxTokensPerWallet = CIRCULATING_SUPPLY / 1000; // 0.1% of the circulating supply\r\n    address payable public buybackandburnAddress = payable(0x76E98f575E5B6382ff3Bc9E988F9920984F2A576);\r\n    address public constant DEAD_WALLET = 0x000000000000000000000000000000000000dEaD;\r\n    uint256 public CIRCULATING_SUPPLY = TOTAL_SUPPLY - balanceOf(DEAD_WALLET);\r\n    address private dev_wallet = 0x76E98f575E5B6382ff3Bc9E988F9920984F2A576;\r\n\r\n     \r\n\r\nmodifier onlyWallets() {\r\n    require(!isContract(msg.sender) || msg.sender == uniswapRouterAddress || msg.sender == uniswapPair, \"Bots are not allowed to buy/sell\");\r\n    _;\r\n}\r\n\r\n\r\n\r\nfunction isContract(address _addr) internal view returns (bool) {\r\n    uint256 size;\r\n    assembly {\r\n        size := extcodesize(_addr)\r\n    }\r\n    return size > 0;\r\n}\r\n\r\nmodifier onlyEOAs() {\r\n    require(tx.origin == msg.sender, \"Contracts are not allowed to sell\");\r\n    _;\r\n}\r\n\r\n\r\n\r\n    address public uniswapPair;\r\n    IUniswapV2Router02 public uniswapRouter;\r\n    address private uniswapRouterAddress;\r\n\r\n\r\n    event RouterUpdated(address indexed oldRouter, address indexed newRouter, address indexed newPair);\r\n    event ExcludedFromLockPeriod(address indexed account);\r\n    event IncludedInTimeLock(address indexed account);\r\n   \r\n    mapping (address => mapping (address => uint256)) private _allowances; \r\n    mapping(address => uint256) public timeStamps;\r\n    mapping(address => bool) public excludedFromLockPeriod;\r\n    mapping(address => bool) public uniswapPairs;\r\n    mapping (address => uint256) private balance;\r\n    bool private inSwap;\r\n    IUniswapV2Router02 public swapRouter;\r\n\r\n\r\n    modifier inSwapFlag {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n   \r\n\r\n\r\n    constructor() ERC20(\"7MIN\", \"7MIN\") {\r\n\r\n\r\n\r\n    _mint(msg.sender, TOTAL_SUPPLY);\r\n    IUniswapV2Router02 _uniswapRouter = IUniswapV2Router02(0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e); //BaseV2 0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e\r\n    uniswapRouter = _uniswapRouter;\r\n    uniswapPair = IUniswapV2Factory(_uniswapRouter.factory())\r\n    .createPair(address(this), _uniswapRouter.WETH()); \r\n    uniswapRouterAddress = 0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e;    //0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\r\n\r\n    \r\n\r\n\r\n  \r\n    // Exclude owner/dev wallet, your wallet, and router from lock period \r\n    excludedFromLockPeriod[msg.sender] = true;\r\n    excludedFromLockPeriod[0x76E98f575E5B6382ff3Bc9E988F9920984F2A576] = true;\r\n    excludedFromLockPeriod[0x000000000000000000000000000000000000dEaD] = true; \r\n    excludedFromLockPeriod[address(uniswapRouter)] = true;\r\n\r\n    emit ExcludedFromLockPeriod(msg.sender);\r\n    emit ExcludedFromLockPeriod(0x76E98f575E5B6382ff3Bc9E988F9920984F2A576);\r\n    emit ExcludedFromLockPeriod(0x000000000000000000000000000000000000dEaD); \r\n    emit ExcludedFromLockPeriod(address(uniswapRouter));\r\n\r\n    } \r\n    \r\n\r\n    function setNewRouter(address _newRouterAddress) external onlyOwner {\r\n    require(_newRouterAddress != address(0), \"New router address cannot be the zero address\");\r\n    IUniswapV2Router02 _newRouter = IUniswapV2Router02(_newRouterAddress);\r\n    address _pair = IUniswapV2Factory(_newRouter.factory()).createPair(address(this), _newRouter.WETH());\r\n    require(_pair != address(0), \"New pair not found\");\r\n\r\n    // Update the uniswapRouter and uniswapPair addresses\r\n    uniswapRouter = _newRouter;\r\n    uniswapPairs[_pair] = true;\r\n}\r\n\r\n    function excludeFromLockPeriod(address _address) external onlyOwner {\r\n    excludedFromLockPeriod[_address] = true;\r\n    }   \r\n\r\n    function includeInTimeLock(address _address) external onlyOwner {\r\n    excludedFromLockPeriod[_address] = false;\r\n    }\r\n\r\n\r\n    function totalBurned() external view returns (uint256) {\r\n\t\treturn balanceOf(DEAD_WALLET);\r\n\t}\r\n\r\n\r\n    function circulatingSupply() external view returns (uint256) {\r\n\t\treturn TOTAL_SUPPLY - balanceOf(DEAD_WALLET);\r\n\t}\r\n\r\n\r\n    function takeTaxes(address from, bool isbuy, bool issell, uint256 amount) internal returns (uint256) {\r\n        uint256 fee;\r\n        if (isbuy)  fee = buyfee;  else if (issell)  fee = sellfee;  else  fee = transferfee; \r\n        if (fee == 0)  return amount;\r\n        uint256 feeAmount = amount * fee / fee_denominator;\r\n        if (feeAmount > 0) {\r\n\r\n            balance[address(this)] += feeAmount;\r\n            emit Transfer(from, address(this), feeAmount);\r\n            \r\n        }\r\n        return amount - feeAmount;\r\n    }\r\n\r\n\r\n    function internalSwap(uint256 contractTokenBalance) internal inSwapFlag {\r\n        \r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = swapRouter.WETH();\r\n\r\n        if (_allowances[address(this)][address(swapRouter)] != type(uint256).max) {\r\n            _allowances[address(this)][address(swapRouter)] = type(uint256).max;\r\n        }\r\n\r\n        try swapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            contractTokenBalance,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        ) {} catch {\r\n            return;\r\n        }\r\n        bool success;\r\n\r\n        if(address(this).balance > 0) {(success,) = buybackandburnAddress.call{value: address(this).balance, gas: 35000}(\"\");}\r\n\r\n    }\r\n\r\n\r\n    function rescueERC20(address tokenAdd, uint256 amount) external onlyOwner {\r\n        IERC20(tokenAdd).transfer(buybackandburnAddress, amount);\r\n    }\r\n\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n    \r\n\r\n    function transfer(address recipient, uint256 amount) public override onlyWallets returns (bool) {\r\n    address sender = _msgSender();\r\n    _transfer(sender, recipient, amount); \r\n    return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    uint256 currentAllowance = allowance(sender, _msgSender());\r\n    require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n    _approve(sender, _msgSender(), currentAllowance - amount);\r\n    return true;\r\n    }\r\n\r\n\r\n    receive () external payable {\r\n    revert(\"Direct ETH transfers are not allowed\");\r\n}\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal override onlyEOAs {\r\n\r\n\r\n    require(amount > 0, \"Transfer amount must be greater than zero\");\r\n    require(balanceOf(sender) >= amount, \"Insufficient balance\");\r\n\r\n\r\n        if (recipient == DEAD_WALLET) {\r\n        CIRCULATING_SUPPLY -= amount;\r\n    }\r\n\r\n    \r\n\r\n    // Check if the transfer exceeds the maximum allowed tokens per wallet (0.1% of the total supply)\r\n \r\n       if (sender != dev_wallet) {\r\n        // Check if the transfer exceeds the maximum allowed tokens per wallet (0.1% of the circulating supply)\r\n        require(balanceOf(recipient) + amount <= maxTokensPerWallet, \"Exceeds maximum tokens per wallet\");\r\n    }\r\n\r\n    // Check if sender is in the time lock period\r\n    if (!excludedFromLockPeriod[sender] && sender != owner() && sender != address(uniswapRouter)) {\r\n        require(block.timestamp >= timeStamps[sender], \"Time lock is still active\");\r\n    }\r\n\r\n    // Check if recipient is in the time lock period\r\n    if (!excludedFromLockPeriod[recipient] && recipient != owner() && recipient != address(uniswapRouter)) {\r\n        require(timeStamps[recipient] == 0 || block.timestamp >= timeStamps[recipient], \"Recipient in time lock\");\r\n        timeStamps[recipient] = block.timestamp + lockPeriod;\r\n    }\r\n\r\n\r\n    // Check if the sender is selling tokens\r\n    if (recipient == uniswapPair && sender != address(uniswapRouter)) {\r\n\r\n        // Check if the sender has waited for the minimum time before selling again\r\n        if (timeStamps[sender] != 0) {\r\n            require(block.timestamp >= timeStamps[sender], \"Sell time lock is still active\");\r\n        }\r\n\r\n        // Update the time lock for the sender\r\n        timeStamps[sender] = block.timestamp + lockPeriod;\r\n    }\r\n\r\n    super._transfer(sender, recipient, amount);\r\n\r\n}\r\n\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa2646970667358221220961062279401e1377422eea3c7b02bc6b0bd2a9cd6f5c843ec63f9cc5186dc4f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_222": {
									"entryPoint": null,
									"id": 222,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:7"
															},
															"nodeType": "YulIf",
															"src": "698:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:7",
																"statements": []
															},
															"src": "779:133:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:840:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:7"
															},
															"nodeType": "YulIf",
															"src": "1119:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:7"
															},
															"nodeType": "YulIf",
															"src": "1256:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:7"
															},
															"nodeType": "YulIf",
															"src": "1429:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:7",
														"type": ""
													}
												],
												"src": "991:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:7"
															},
															"nodeType": "YulIf",
															"src": "1701:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:7"
															},
															"nodeType": "YulIf",
															"src": "1771:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:7",
														"type": ""
													}
												],
												"src": "1558:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:7",
														"type": ""
													}
												],
												"src": "1943:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:7",
																			"statements": []
																		},
																		"src": "2516:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:7"
															},
															"nodeType": "YulIf",
															"src": "2160:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:7",
														"type": ""
													}
												],
												"src": "2069:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:7",
														"type": ""
													}
												],
												"src": "2619:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:7"
															},
															"nodeType": "YulIf",
															"src": "2929:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:7",
																					"statements": []
																				},
																				"src": "3376:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:7",
														"type": ""
													}
												],
												"src": "2790:1352:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220961062279401e1377422eea3c7b02bc6b0bd2a9cd6f5c843ec63f9cc5186dc4f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 LT PUSH3 0x279401 0xE1 CALLDATACOPY PUSH21 0x22EEA3C7B02BC6B0BD2A9CD6F5C843EC63F9CC5186 0xDC 0x4F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:7:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:7;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:7;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:7;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:7;;;3992:26;3943:89;-1:-1:-1;;2747:1:7;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:7;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:7;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:7;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:7:o;:::-;1532:11312:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_763": {
									"entryPoint": null,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_698": {
									"entryPoint": 858,
									"id": 698,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_752": {
									"entryPoint": null,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_741": {
									"entryPoint": 1150,
									"id": 741,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_524": {
									"entryPoint": 1272,
									"id": 524,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_319": {
									"entryPoint": 815,
									"id": 319,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_344": {
									"entryPoint": 562,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_276": {
									"entryPoint": null,
									"id": 276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_252": {
									"entryPoint": null,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_447": {
									"entryPoint": 673,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_406": {
									"entryPoint": 624,
									"id": 406,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_232": {
									"entryPoint": 416,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_242": {
									"entryPoint": 658,
									"id": 242,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_262": {
									"entryPoint": null,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_377": {
									"entryPoint": 588,
									"id": 377,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_301": {
									"entryPoint": 801,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:7"
															},
															"nodeType": "YulIf",
															"src": "664:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:7",
														"type": ""
													}
												],
												"src": "567:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:7"
															},
															"nodeType": "YulIf",
															"src": "842:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:7",
														"type": ""
													}
												],
												"src": "745:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:7",
														"type": ""
													}
												],
												"src": "1004:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:7",
														"type": ""
													}
												],
												"src": "1196:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:7"
															},
															"nodeType": "YulIf",
															"src": "1492:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:7",
														"type": ""
													}
												],
												"src": "1378:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:7",
														"type": ""
													}
												],
												"src": "1711:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:7"
															},
															"nodeType": "YulIf",
															"src": "1980:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:7",
														"type": ""
													}
												],
												"src": "1900:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:7"
															},
															"nodeType": "YulIf",
															"src": "2188:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:7",
														"type": ""
													}
												],
												"src": "2091:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:7"
															},
															"nodeType": "YulIf",
															"src": "2499:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:7"
															},
															"nodeType": "YulIf",
															"src": "2569:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:7",
														"type": ""
													}
												],
												"src": "2356:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:7"
															},
															"nodeType": "YulIf",
															"src": "2824:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:7",
														"type": ""
													}
												],
												"src": "2741:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:7",
														"type": ""
													}
												],
												"src": "2968:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:7",
														"type": ""
													}
												],
												"src": "3374:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:7",
														"type": ""
													}
												],
												"src": "3779:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:7",
														"type": ""
													}
												],
												"src": "4182:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:7",
														"type": ""
													}
												],
												"src": "4540:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:7",
														"type": ""
													}
												],
												"src": "4946:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:7",
														"type": ""
													}
												],
												"src": "5350:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220961062279401e1377422eea3c7b02bc6b0bd2a9cd6f5c843ec63f9cc5186dc4f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 LT PUSH3 0x279401 0xE1 CALLDATACOPY PUSH21 0x22EEA3C7B02BC6B0BD2A9CD6F5C843EC63F9CC5186 0xDC 0x4F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;4444:197:2;1004:187:7;3255:106:2;3342:12;;3255:106;;;1342:25:7;;;1330:2;1315:18;3255:106:2;1196:177:7;5203:256:2;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:7;;1841:2;1826:18;3104:91:2;1711:184:7;5854:234:2;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:5;4581:32:2;719:10:5;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:5;5356:38:2;5372:4;719:10:5;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;5854:234::-;5942:4;719:10:5;5996:64:2;719:10:5;6012:7:2;6049:10;6021:25;719:10:5;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:5;6668:4:2;6749:25;719:10:5;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;3170:2:7;6784:85:2;;;3152:21:7;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:7;;;3292:35;3344:19;;6784:85:2;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:5;3873:28:2;719:10:5;3890:2:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;3576:2:7;10550:68:2;;;3558:21:7;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:7;;;3698:34;3749:19;;10550:68:2;3374:400:7;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;3981:2:7;10628:68:2;;;3963:21:7;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:7;;;4103:32;4152:19;;10628:68:2;3779:398:7;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:7;;;10758:32:2;;1315:18:7;10758:32:2;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;4384:2:7;11297:68:2;;;4366:21:7;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:2;4182:353:7;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;4742:2:7;7544:68:2;;;4724:21:7;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:7;;;4864:35;4916:19;;7544:68:2;4540:401:7;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;5148:2:7;7622:64:2;;;5130:21:7;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:7;;;5270:33;5320:19;;7622:64:2;4946:399:7;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;5552:2:7;7793:72:2;;;5534:21:7;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:7;;;5674:36;5727:19;;7793:72:2;5350:402:7;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:7;;;8114:13:2;;8163:26;;1315:18:7;8163:26:2;;;;;;;8200:37;12073:91;14:548:7;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:7:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24628",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51138",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220961062279401e1377422eea3c7b02bc6b0bd2a9cd6f5c843ec63f9cc5186dc4f64736f6c63430008110033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Base7minutes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 193,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 199,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 205,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Base7minutes.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Base7minutes.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Base7minutes.sol\":{\"keccak256\":\"0x5f08e20aa6533a51d03e81edff11460a971ea81e3528a599e5b9cb313fe6f274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b25c364d4416da7e0fed8b9d121e4124b6340c40f15c08e149676c1c143128\",\"dweb:/ipfs/QmQkw28THcmgK9doM6bMoazVmUCktuqJiiRtFwho87StDD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Base7minutes.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Base7minutes.sol\":{\"keccak256\":\"0x5f08e20aa6533a51d03e81edff11460a971ea81e3528a599e5b9cb313fe6f274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b25c364d4416da7e0fed8b9d121e4124b6340c40f15c08e149676c1c143128\",\"dweb:/ipfs/QmQkw28THcmgK9doM6bMoazVmUCktuqJiiRtFwho87StDD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ONEMINUTE": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "ExcludedFromLockPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "IncludedInTimeLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldRouter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newRouter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newPair",
									"type": "address"
								}
							],
							"name": "RouterUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CIRCULATING_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEAD_WALLET",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buybackandburnAddress",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyfee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "excludeFromLockPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "excludedFromLockPeriod",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee_denominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "includeInTimeLock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTokensPerWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAdd",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellfee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newRouterAddress",
									"type": "address"
								}
							],
							"name": "setNewRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "timeStamps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferfee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "uniswapPairs",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapRouter",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Base7minutes.sol\":2020:10849  contract ONEMINUTE is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Base7minutes.sol\":2796:2800  1000 */\n  0x03e8\n    /* \"contracts/Base7minutes.sol\":2775:2793  CIRCULATING_SUPPLY */\n  sload(0x09)\n    /* \"contracts/Base7minutes.sol\":2775:2800  CIRCULATING_SUPPLY / 1000 */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/Base7minutes.sol\":2739:2800  uint256 public maxTokensPerWallet = CIRCULATING_SUPPLY / 1000 */\n  0x07\n  sstore\n    /* \"contracts/Base7minutes.sol\":2841:2939  address payable public buybackandburnAddress = payable(0x76E98f575E5B6382ff3Bc9E988F9920984F2A576) */\n  0x08\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Base7minutes.sol\":2896:2938  0x76E98f575E5B6382ff3Bc9E988F9920984F2A576 */\n  0x76e98f575e5b6382ff3bc9e988f9920984f2a576\n    /* \"contracts/Base7minutes.sol\":2841:2939  address payable public buybackandburnAddress = payable(0x76E98f575E5B6382ff3Bc9E988F9920984F2A576) */\n  or\n  swap1\n  sstore\n    /* \"contracts/Base7minutes.sol\":2984:3026  0x000000000000000000000000000000000000dEaD */\n  0xdead\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  mstore\n  sload(0x44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83)\n    /* \"contracts/Base7minutes.sol\":3069:3106  TOTAL_SUPPLY - balanceOf(DEAD_WALLET) */\n  tag_5\n  swap1\n    /* \"contracts/Base7minutes.sol\":2471:2497  1_111_111_111_111 * 10**18 */\n  0x0e063191caf768f40cc2bc0000\n    /* \"contracts/Base7minutes.sol\":3069:3106  TOTAL_SUPPLY - balanceOf(DEAD_WALLET) */\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/Base7minutes.sol\":3033:3106  uint256 public CIRCULATING_SUPPLY = TOTAL_SUPPLY - balanceOf(DEAD_WALLET) */\n  0x09\n  sstore\n    /* \"contracts/Base7minutes.sol\":3113:3184  address private dev_wallet = 0x76E98f575E5B6382ff3Bc9E988F9920984F2A576 */\n  0x0a\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Base7minutes.sol\":3142:3184  0x76E98f575E5B6382ff3Bc9E988F9920984F2A576 */\n  0x76e98f575e5b6382ff3bc9e988f9920984f2a576\n    /* \"contracts/Base7minutes.sol\":3113:3184  address private dev_wallet = 0x76E98f575E5B6382ff3Bc9E988F9920984F2A576 */\n  or\n  swap1\n  sstore\n    /* \"contracts/Base7minutes.sol\":4496:5644  constructor() ERC20(\"7MIN\", \"7MIN\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_7\n  jumpi\n  0x00\n  dup1\n  revert\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe1, 0x1ba6a4a7)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  swap1\n  dup4\n  add\n  mstore\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_14\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_19\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_16:\n    /* \"contracts/Base7minutes.sol\":4545:4576  _mint(msg.sender, TOTAL_SUPPLY) */\n  tag_21\n    /* \"contracts/Base7minutes.sol\":4551:4561  msg.sender */\n  caller\n    /* \"contracts/Base7minutes.sol\":2471:2497  1_111_111_111_111 * 10**18 */\n  0x0e063191caf768f40cc2bc0000\n    /* \"contracts/Base7minutes.sol\":4545:4550  _mint */\n  tag_22\n    /* \"contracts/Base7minutes.sol\":4545:4576  _mint(msg.sender, TOTAL_SUPPLY) */\n  jump\t// in\ntag_21:\n    /* \"contracts/Base7minutes.sol\":4740:4753  uniswapRouter */\n  0x0c\n    /* \"contracts/Base7minutes.sol\":4740:4770  uniswapRouter = _uniswapRouter */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Base7minutes.sol\":4638:4680  0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e */\n  0x4cf76043b3f97ba06917cbd90f9e3a2aac1b306e\n    /* \"contracts/Base7minutes.sol\":4740:4770  uniswapRouter = _uniswapRouter */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Base7minutes.sol\":4809:4833  _uniswapRouter.factory() */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0xc45a0155)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"contracts/Base7minutes.sol\":4638:4680  0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e */\n  dup3\n  swap2\n    /* \"contracts/Base7minutes.sol\":4809:4831  _uniswapRouter.factory */\n  0xc45a0155\n  swap2\n    /* \"contracts/Base7minutes.sol\":4809:4833  _uniswapRouter.factory() */\n  0x04\n  dup1\n  dup4\n  add\n  swap3\n  0x20\n  swap3\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"contracts/Base7minutes.sol\":4638:4680  0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e */\n  dup7\n    /* \"contracts/Base7minutes.sol\":4809:4833  _uniswapRouter.factory() */\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_24\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_24:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Base7minutes.sol\":4791:4851  IUniswapV2Factory(_uniswapRouter.factory())... */\n  and\n  0xc9c65396\n    /* \"contracts/Base7minutes.sol\":4860:4864  this */\n  address\n    /* \"contracts/Base7minutes.sol\":4867:4881  _uniswapRouter */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Base7minutes.sol\":4867:4886  _uniswapRouter.WETH */\n  and\n  0xad5c4648\n    /* \"contracts/Base7minutes.sol\":4867:4888  _uniswapRouter.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_28\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_28:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_29\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_29:\n    /* \"contracts/Base7minutes.sol\":4791:4889  IUniswapV2Factory(_uniswapRouter.factory())... */\n  mload(0x40)\n  not(sub(shl(0xe0, 0x01), 0x01))\n  0xe0\n  dup6\n  swap1\n  shl\n  and\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3747:3762   */\n  swap3\n  dup4\n  and\n    /* \"contracts/Base7minutes.sol\":4791:4889  IUniswapV2Factory(_uniswapRouter.factory())... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3729:3763   */\n  mstore\n    /* \"#utility.yul\":3799:3814   */\n  swap2\n  and\n    /* \"#utility.yul\":3779:3797   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3772:3815   */\n  mstore\n    /* \"#utility.yul\":3664:3682   */\n  0x44\n  add\n    /* \"contracts/Base7minutes.sol\":4791:4889  IUniswapV2Factory(_uniswapRouter.factory())... */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_33\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_33:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_34\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_34:\n    /* \"contracts/Base7minutes.sol\":4777:4788  uniswapPair */\n  0x0b\n    /* \"contracts/Base7minutes.sol\":4777:4889  uniswapPair = IUniswapV2Factory(_uniswapRouter.factory())... */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Base7minutes.sol\":4897:4917  uniswapRouterAddress */\n  0x0d\n    /* \"contracts/Base7minutes.sol\":4897:4962  uniswapRouterAddress = 0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/Base7minutes.sol\":4920:4962  0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e */\n  0x4cf76043b3f97ba06917cbd90f9e3a2aac1b306e\n    /* \"contracts/Base7minutes.sol\":4897:4962  uniswapRouterAddress = 0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e */\n  or\n  swap1\n  sstore\n    /* \"contracts/Base7minutes.sol\":5132:5142  msg.sender */\n  caller\n    /* \"contracts/Base7minutes.sol\":4777:4788  uniswapPair */\n  0x00\n    /* \"contracts/Base7minutes.sol\":5109:5143  excludedFromLockPeriod[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/Base7minutes.sol\":5109:5131  excludedFromLockPeriod */\n  0x10\n    /* \"contracts/Base7minutes.sol\":5109:5143  excludedFromLockPeriod[msg.sender] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"contracts/Base7minutes.sol\":5109:5150  excludedFromLockPeriod[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n    /* \"contracts/Base7minutes.sol\":4777:4889  uniswapPair = IUniswapV2Factory(_uniswapRouter.factory())... */\n  0x01\n    /* \"contracts/Base7minutes.sol\":5109:5150  excludedFromLockPeriod[msg.sender] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/Base7minutes.sol\":5157:5223  excludedFromLockPeriod[0x76E98f575E5B6382ff3Bc9E988F9920984F2A576] */\n  0x9a8f3285986f133c5ab38a828780fbebff64111ad29b63b7783e7e3874351ca6\n    /* \"contracts/Base7minutes.sol\":5157:5230  excludedFromLockPeriod[0x76E98f575E5B6382ff3Bc9E988F9920984F2A576] = true */\n  dup1\n  sload\n  dup3\n  and\n  dup4\n  or\n  swap1\n  sstore\n    /* \"contracts/Base7minutes.sol\":5237:5303  excludedFromLockPeriod[0x000000000000000000000000000000000000dEaD] */\n  0x9e93e1db4a1f807cc22b2aecf4deeb0bf5745f1ecb319e87c68c5624c0fa6b69\n    /* \"contracts/Base7minutes.sol\":5237:5310  excludedFromLockPeriod[0x000000000000000000000000000000000000dEaD] = true */\n  dup1\n  sload\n  dup3\n  and\n  dup4\n  or\n  swap1\n  sstore\n    /* \"contracts/Base7minutes.sol\":5349:5362  uniswapRouter */\n  sload(0x0c)\n  swap1\n  swap6\n  and\n    /* \"contracts/Base7minutes.sol\":5318:5364  excludedFromLockPeriod[address(uniswapRouter)] */\n  dup4\n  mstore\n  dup2\n  dup4\n  keccak256\n    /* \"contracts/Base7minutes.sol\":5318:5371  excludedFromLockPeriod[address(uniswapRouter)] = true */\n  dup1\n  sload\n  swap1\n  swap6\n  and\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/Base7minutes.sol\":5385:5419  ExcludedFromLockPeriod(msg.sender) */\n  swap2\n  mload\n    /* \"contracts/Base7minutes.sol\":5132:5142  msg.sender */\n  swap1\n  swap2\n  0x00\n  dup1\n  mload\n  0x20\n  data_4676e9525129958bed49b43fa7e56d15bfab1bc03bb4ebe3ffe4fe604a81e165\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/Base7minutes.sol\":5385:5419  ExcludedFromLockPeriod(msg.sender) */\n  swap2\n  log2\n    /* \"contracts/Base7minutes.sol\":5431:5497  ExcludedFromLockPeriod(0x76E98f575E5B6382ff3Bc9E988F9920984F2A576) */\n  mload(0x40)\n    /* \"contracts/Base7minutes.sol\":5454:5496  0x76E98f575E5B6382ff3Bc9E988F9920984F2A576 */\n  0x76e98f575e5b6382ff3bc9e988f9920984f2a576\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_4676e9525129958bed49b43fa7e56d15bfab1bc03bb4ebe3ffe4fe604a81e165\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/Base7minutes.sol\":5431:5497  ExcludedFromLockPeriod(0x76E98f575E5B6382ff3Bc9E988F9920984F2A576) */\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"contracts/Base7minutes.sol\":5509:5575  ExcludedFromLockPeriod(0x000000000000000000000000000000000000dEaD) */\n  mload(0x40)\n    /* \"contracts/Base7minutes.sol\":5532:5574  0x000000000000000000000000000000000000dEaD */\n  0xdead\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_4676e9525129958bed49b43fa7e56d15bfab1bc03bb4ebe3ffe4fe604a81e165\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/Base7minutes.sol\":5509:5575  ExcludedFromLockPeriod(0x000000000000000000000000000000000000dEaD) */\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"contracts/Base7minutes.sol\":5619:5632  uniswapRouter */\n  sload(0x0c)\n    /* \"contracts/Base7minutes.sol\":5588:5634  ExcludedFromLockPeriod(address(uniswapRouter)) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Base7minutes.sol\":5619:5632  uniswapRouter */\n  swap1\n  swap2\n  and\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_4676e9525129958bed49b43fa7e56d15bfab1bc03bb4ebe3ffe4fe604a81e165\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/Base7minutes.sol\":5588:5634  ExcludedFromLockPeriod(address(uniswapRouter)) */\n  swap1\n    /* \"contracts/Base7minutes.sol\":5619:5632  uniswapRouter */\n  0x00\n  swap1\n    /* \"contracts/Base7minutes.sol\":5588:5634  ExcludedFromLockPeriod(address(uniswapRouter)) */\n  log2\n    /* \"contracts/Base7minutes.sol\":4532:5644  {... */\n  pop\n    /* \"contracts/Base7minutes.sol\":2020:10849  contract ONEMINUTE is ERC20, Ownable {... */\n  jump(tag_59)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_40\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4028:4030   */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4010:4031   */\n  mstore\n    /* \"#utility.yul\":4067:4069   */\n  0x1f\n    /* \"#utility.yul\":4047:4065   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4040:4070   */\n  mstore\n    /* \"#utility.yul\":4106:4139   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4086:4104   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4079:4140   */\n  mstore\n    /* \"#utility.yul\":4157:4175   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_45\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":4462:4487   */\n  dup5\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":4435:4453   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\ntag_44:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_53:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x11\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:363   */\ntag_2:\n    /* \"#utility.yul\":186:187   */\n  0x00\n    /* \"#utility.yul\":212:213   */\n  dup3\n    /* \"#utility.yul\":202:334   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":256:266   */\n  0x4e487b71\n    /* \"#utility.yul\":251:254   */\n  0xe0\n    /* \"#utility.yul\":247:267   */\n  shl\n    /* \"#utility.yul\":244:245   */\n  0x00\n    /* \"#utility.yul\":237:268   */\n  mstore\n    /* \"#utility.yul\":291:295   */\n  0x12\n    /* \"#utility.yul\":288:289   */\n  0x04\n    /* \"#utility.yul\":281:296   */\n  mstore\n    /* \"#utility.yul\":319:323   */\n  0x24\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":309:324   */\n  revert\n    /* \"#utility.yul\":202:334   */\ntag_62:\n  pop\n    /* \"#utility.yul\":348:357   */\n  div\n  swap1\n    /* \"#utility.yul\":146:363   */\n  jump\t// out\n    /* \"#utility.yul\":368:496   */\ntag_6:\n    /* \"#utility.yul\":435:444   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":456:467   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":453:490   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":470:488   */\n  tag_65\n  tag_53\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":368:496   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":501:628   */\ntag_54:\n    /* \"#utility.yul\":562:572   */\n  0x4e487b71\n    /* \"#utility.yul\":557:560   */\n  0xe0\n    /* \"#utility.yul\":553:573   */\n  shl\n    /* \"#utility.yul\":550:551   */\n  0x00\n    /* \"#utility.yul\":543:574   */\n  mstore\n    /* \"#utility.yul\":593:597   */\n  0x41\n    /* \"#utility.yul\":590:591   */\n  0x04\n    /* \"#utility.yul\":583:598   */\n  mstore\n    /* \"#utility.yul\":617:621   */\n  0x24\n    /* \"#utility.yul\":614:615   */\n  0x00\n    /* \"#utility.yul\":607:622   */\n  revert\n    /* \"#utility.yul\":633:1013   */\ntag_55:\n    /* \"#utility.yul\":712:713   */\n  0x01\n    /* \"#utility.yul\":708:720   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":755:767   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":776:837   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":830:834   */\n  0x7f\n    /* \"#utility.yul\":822:828   */\n  dup3\n    /* \"#utility.yul\":818:835   */\n  and\n    /* \"#utility.yul\":808:835   */\n  swap2\n  pop\n    /* \"#utility.yul\":776:837   */\ntag_68:\n    /* \"#utility.yul\":883:885   */\n  0x20\n    /* \"#utility.yul\":875:881   */\n  dup3\n    /* \"#utility.yul\":872:886   */\n  lt\n    /* \"#utility.yul\":852:870   */\n  dup2\n    /* \"#utility.yul\":849:887   */\n  sub\n    /* \"#utility.yul\":846:1007   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":929:939   */\n  0x4e487b71\n    /* \"#utility.yul\":924:927   */\n  0xe0\n    /* \"#utility.yul\":920:940   */\n  shl\n    /* \"#utility.yul\":917:918   */\n  0x00\n    /* \"#utility.yul\":910:941   */\n  mstore\n    /* \"#utility.yul\":964:968   */\n  0x22\n    /* \"#utility.yul\":961:962   */\n  0x04\n    /* \"#utility.yul\":954:969   */\n  mstore\n    /* \"#utility.yul\":992:996   */\n  0x24\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":982:997   */\n  revert\n    /* \"#utility.yul\":846:1007   */\ntag_69:\n  pop\n    /* \"#utility.yul\":633:1013   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1144:1689   */\ntag_57:\n    /* \"#utility.yul\":1246:1248   */\n  0x1f\n    /* \"#utility.yul\":1241:1244   */\n  dup3\n    /* \"#utility.yul\":1238:1249   */\n  gt\n    /* \"#utility.yul\":1235:1683   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1282:1283   */\n  0x00\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1303:1305   */\n  dup2\n    /* \"#utility.yul\":1296:1313   */\n  mstore\n    /* \"#utility.yul\":1352:1356   */\n  0x20\n    /* \"#utility.yul\":1348:1350   */\n  dup2\n    /* \"#utility.yul\":1338:1357   */\n  keccak256\n    /* \"#utility.yul\":1422:1424   */\n  0x1f\n    /* \"#utility.yul\":1410:1420   */\n  dup6\n    /* \"#utility.yul\":1406:1425   */\n  add\n    /* \"#utility.yul\":1403:1404   */\n  0x05\n    /* \"#utility.yul\":1399:1426   */\n  shr\n    /* \"#utility.yul\":1393:1397   */\n  dup2\n    /* \"#utility.yul\":1389:1427   */\n  add\n    /* \"#utility.yul\":1458:1462   */\n  0x20\n    /* \"#utility.yul\":1446:1456   */\n  dup7\n    /* \"#utility.yul\":1443:1463   */\n  lt\n    /* \"#utility.yul\":1440:1487   */\n  iszero\n  tag_73\n  jumpi\n  pop\n    /* \"#utility.yul\":1481:1485   */\n  dup1\n    /* \"#utility.yul\":1440:1487   */\ntag_73:\n    /* \"#utility.yul\":1536:1538   */\n  0x1f\n    /* \"#utility.yul\":1531:1534   */\n  dup6\n    /* \"#utility.yul\":1527:1539   */\n  add\n    /* \"#utility.yul\":1524:1525   */\n  0x05\n    /* \"#utility.yul\":1520:1540   */\n  shr\n    /* \"#utility.yul\":1514:1518   */\n  dup3\n    /* \"#utility.yul\":1510:1541   */\n  add\n    /* \"#utility.yul\":1500:1541   */\n  swap2\n  pop\n    /* \"#utility.yul\":1591:1673   */\ntag_74:\n    /* \"#utility.yul\":1609:1611   */\n  dup2\n    /* \"#utility.yul\":1602:1607   */\n  dup2\n    /* \"#utility.yul\":1599:1612   */\n  lt\n    /* \"#utility.yul\":1591:1673   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1654:1671   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1635:1636   */\n  0x01\n    /* \"#utility.yul\":1624:1637   */\n  add\n    /* \"#utility.yul\":1591:1673   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":1595:1598   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1144:1689   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:3217   */\ntag_13:\n    /* \"#utility.yul\":1985:1995   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2007:2037   */\n  dup2\n  gt\n    /* \"#utility.yul\":2004:2060   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2040:2058   */\n  tag_80\n  tag_54\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2069:2166   */\n  tag_81\n    /* \"#utility.yul\":2159:2165   */\n  dup2\n    /* \"#utility.yul\":2119:2157   */\n  tag_82\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2119:2157   */\n  tag_55\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2113:2117   */\n  dup5\n    /* \"#utility.yul\":2069:2166   */\n  tag_57\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2221:2225   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2285:2287   */\n  0x1f\n    /* \"#utility.yul\":2274:2288   */\n  dup4\n  gt\n    /* \"#utility.yul\":2302:2303   */\n  0x01\n    /* \"#utility.yul\":2297:2960   */\n  dup2\n  eq\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3004:3005   */\n  0x00\n    /* \"#utility.yul\":3021:3027   */\n  dup5\n    /* \"#utility.yul\":3018:3107   */\n  iszero\n  tag_85\n  jumpi\n  pop\n    /* \"#utility.yul\":3073:3092   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3067:3093   */\n  mload\n    /* \"#utility.yul\":3018:3107   */\ntag_85:\n  not(0x00)\n    /* \"#utility.yul\":1822:1823   */\n  0x03\n    /* \"#utility.yul\":1818:1829   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1814:1838   */\n  shr\n    /* \"#utility.yul\":1810:1839   */\n  not\n    /* \"#utility.yul\":1800:1840   */\n  and\n    /* \"#utility.yul\":1846:1847   */\n  0x01\n    /* \"#utility.yul\":1842:1853   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1797:1854   */\n  or\n    /* \"#utility.yul\":3120:3201   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2267:3211   */\n  jump(tag_76)\n    /* \"#utility.yul\":2297:2960   */\ntag_84:\n    /* \"#utility.yul\":1091:1092   */\n  0x00\n    /* \"#utility.yul\":1084:1098   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1128:1132   */\n  0x20\n    /* \"#utility.yul\":1115:1133   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2333:2353   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2451:2687   */\ntag_88:\n    /* \"#utility.yul\":2465:2472   */\n  dup3\n    /* \"#utility.yul\":2462:2463   */\n  dup2\n    /* \"#utility.yul\":2459:2473   */\n  lt\n    /* \"#utility.yul\":2451:2687   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2554:2573   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2548:2574   */\n  mload\n    /* \"#utility.yul\":2533:2575   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2646:2673   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2614:2615   */\n  0x01\n    /* \"#utility.yul\":2602:2616   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2481:2500   */\n  dup5\n  add\n    /* \"#utility.yul\":2451:2687   */\n  jump(tag_88)\ntag_90:\n    /* \"#utility.yul\":2455:2458   */\n  pop\n    /* \"#utility.yul\":2715:2721   */\n  dup6\n    /* \"#utility.yul\":2706:2713   */\n  dup3\n    /* \"#utility.yul\":2703:2722   */\n  lt\n    /* \"#utility.yul\":2700:2901   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2776:2795   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2770:2796   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2859:2860   */\n  0x03\n    /* \"#utility.yul\":2855:2869   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2871:2874   */\n  0xf8\n    /* \"#utility.yul\":2851:2875   */\n  and\n    /* \"#utility.yul\":2847:2884   */\n  shr\n    /* \"#utility.yul\":2843:2885   */\n  not\n    /* \"#utility.yul\":2828:2886   */\n  and\n    /* \"#utility.yul\":2813:2887   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2700:2901   */\ntag_91:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2947:2948   */\n  0x01\n    /* \"#utility.yul\":2931:2945   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2927:2949   */\n  add\n    /* \"#utility.yul\":2914:2950   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1865:3217   */\n  jump\t// out\n    /* \"#utility.yul\":3222:3512   */\ntag_26:\n    /* \"#utility.yul\":3292:3298   */\n  0x00\n    /* \"#utility.yul\":3345:3347   */\n  0x20\n    /* \"#utility.yul\":3333:3342   */\n  dup3\n    /* \"#utility.yul\":3324:3331   */\n  dup5\n    /* \"#utility.yul\":3320:3343   */\n  sub\n    /* \"#utility.yul\":3316:3348   */\n  slt\n    /* \"#utility.yul\":3313:3365   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3361:3362   */\n  0x00\n    /* \"#utility.yul\":3358:3359   */\n  dup1\n    /* \"#utility.yul\":3351:3363   */\n  revert\n    /* \"#utility.yul\":3313:3365   */\ntag_93:\n    /* \"#utility.yul\":3387:3403   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3432:3463   */\n  dup2\n  and\n    /* \"#utility.yul\":3422:3464   */\n  dup2\n  eq\n    /* \"#utility.yul\":3412:3482   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3478:3479   */\n  0x00\n    /* \"#utility.yul\":3475:3476   */\n  dup1\n    /* \"#utility.yul\":3468:3480   */\n  revert\n    /* \"#utility.yul\":3412:3482   */\ntag_94:\n    /* \"#utility.yul\":3501:3506   */\n  swap4\n    /* \"#utility.yul\":3222:3512   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4186:4311   */\ntag_46:\n    /* \"#utility.yul\":4251:4260   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4272:4282   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4269:4305   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":4285:4303   */\n  tag_65\n  tag_53\n  jump\t// in\n    /* \"#utility.yul\":4316:4493   */\ntag_59:\n    /* \"contracts/Base7minutes.sol\":2020:10849  contract ONEMINUTE is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4676e9525129958bed49b43fa7e56d15bfab1bc03bb4ebe3ffe4fe604a81e165 c93bc17a700271bf59796cbfa01b47b8b95654209793470e3cdbadf87465a843\n\nsub_0: assembly {\n        /* \"contracts/Base7minutes.sol\":2020:10849  contract ONEMINUTE is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xc816841b\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xe9451f5f\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xeafb5a3c\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xfdf3dd9c\n      eq\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0xc816841b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc831f606\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd61782d7\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd89135cd\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xdc9d75b0\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0xa01c3483\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xa01c3483\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xb2bdfa7b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9358928b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x984ae06e\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x3fd8b02f\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x67e00e88\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x67e00e88\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x735de9f7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8cd4426d\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0x3fd8b02f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x469132ce\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x54de7bee\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x227b453f\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x227b453f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3078381c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1dc36945\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/Base7minutes.sol\":8947:8993  revert(\"Direct ETH transfers are not allowed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":8947:8993  revert(\"Direct ETH transfers are not allowed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x24\n        /* \"#utility.yul\":235:253   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n        /* \"#utility.yul\":294:328   */\n      0x44697265637420455448207472616e736665727320617265206e6f7420616c6c\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:329   */\n      mstore\n      shl(0xe2, 0x1bddd959)\n        /* \"#utility.yul\":345:363   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":338:372   */\n      mstore\n        /* \"#utility.yul\":389:408   */\n      0x84\n      add\n        /* \"contracts/Base7minutes.sol\":8947:8993  revert(\"Direct ETH transfers are not allowed\") */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Base7minutes.sol\":2020:10849  contract ONEMINUTE is ERC20, Ownable {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n        /* \"#utility.yul\":1593:1607   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1586:1608   */\n      iszero\n        /* \"#utility.yul\":1568:1609   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1556:1558   */\n      0x20\n        /* \"#utility.yul\":1541:1559   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_54\n        /* \"#utility.yul\":1428:1615   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_64:\n      mload(0x40)\n        /* \"#utility.yul\":1766:1791   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1754:1756   */\n      0x20\n        /* \"#utility.yul\":1739:1757   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_54\n        /* \"#utility.yul\":1620:1797   */\n      jump\n        /* \"contracts/Base7minutes.sol\":2603:2637  uint256 constant public buyfee = 0 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_64\n        /* \"contracts/Base7minutes.sol\":2636:2637  0 */\n      0x00\n        /* \"contracts/Base7minutes.sol\":2603:2637  uint256 constant public buyfee = 0 */\n      dup2\n      jump\n        /* \"contracts/Base7minutes.sol\":6335:6454  function includeInTimeLock(address _address) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/Base7minutes.sol\":8514:8902  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_57\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":4156:4210  mapping(address => bool) public excludedFromLockPeriod */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_57\n      tag_85\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_85:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":2657:2693   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2645:2647   */\n      0x20\n        /* \"#utility.yul\":2630:2648   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_54\n        /* \"#utility.yul\":2515:2699   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_57\n      tag_95\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":2504:2550  uint256 public constant lockPeriod = 1 minutes */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_64\n        /* \"contracts/Base7minutes.sol\":2541:2550  1 minutes */\n      0x3c\n        /* \"contracts/Base7minutes.sol\":2504:2550  uint256 public constant lockPeriod = 1 minutes */\n      dup2\n      jump\n        /* \"contracts/Base7minutes.sol\":8207:8290  function burn(uint256 amount) external {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_73\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":2739:2800  uint256 public maxTokensPerWallet = CIRCULATING_SUPPLY / 1000 */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_64\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/Base7minutes.sol\":4217:4261  mapping(address => bool) public uniswapPairs */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_57\n      tag_117\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_117:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_64\n      tag_122\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/Base7minutes.sol\":2284:2421  function renounceOwnership() public onlyOwner override  {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_73\n      tag_127\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":3708:3747  IUniswapV2Router02 public uniswapRouter */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      sload(0x0c)\n      tag_129\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_129:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3080:3112   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3062:3113   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3050:3052   */\n      0x20\n        /* \"#utility.yul\":3035:3053   */\n      add\n        /* \"contracts/Base7minutes.sol\":3708:3747  IUniswapV2Router02 public uniswapRouter */\n      tag_54\n        /* \"#utility.yul\":2889:3119   */\n      jump\n        /* \"contracts/Base7minutes.sol\":8050:8199  function rescueERC20(address tokenAdd, uint256 amount) external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_73\n      tag_135\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_129)\n        /* \"contracts/Base7minutes.sol\":6568:6683  function circulatingSupply() external view returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_64\n      tag_144\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_52\n      tag_148\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":3033:3106  uint256 public CIRCULATING_SUPPLY = TOTAL_SUPPLY - balanceOf(DEAD_WALLET) */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_64\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/Base7minutes.sol\":2946:3026  address public constant DEAD_WALLET = 0x000000000000000000000000000000000000dEaD */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_129\n        /* \"contracts/Base7minutes.sol\":2984:3026  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/Base7minutes.sol\":2946:3026  address public constant DEAD_WALLET = 0x000000000000000000000000000000000000dEaD */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_57\n      tag_160\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":8304:8506  function transfer(address recipient, uint256 amount) public override onlyWallets returns (bool) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_57\n      tag_165\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":2067:2088  address public _owner */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      sload(0x06)\n      tag_129\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Base7minutes.sol\":4345:4381  IUniswapV2Router02 public swapRouter */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      sload(0x13)\n      tag_129\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Base7minutes.sol\":3675:3701  address public uniswapPair */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      sload(0x0b)\n      tag_129\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Base7minutes.sol\":4104:4149  mapping(address => uint256) public timeStamps */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      tag_64\n      tag_182\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_182:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Base7minutes.sol\":2841:2939  address payable public buybackandburnAddress = payable(0x76E98f575E5B6382ff3Bc9E988F9920984F2A576) */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      sload(0x08)\n      tag_129\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Base7minutes.sol\":6464:6558  function totalBurned() external view returns (uint256) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n        /* \"contracts/Base7minutes.sol\":2984:3026  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/Base7minutes.sol\":6510:6517  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      mstore\n      sload(0x44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83)\n        /* \"contracts/Base7minutes.sol\":6464:6558  function totalBurned() external view returns (uint256) {... */\n      tag_64\n        /* \"contracts/Base7minutes.sol\":6568:6683  function circulatingSupply() external view returns (uint256) {... */\n      jump\n        /* \"contracts/Base7minutes.sol\":2686:2732  uint256 constant public fee_denominator = 1_00 */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      tag_64\n        /* \"contracts/Base7minutes.sol\":2728:2732  1_00 */\n      0x64\n        /* \"contracts/Base7minutes.sol\":2686:2732  uint256 constant public fee_denominator = 1_00 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n      pop\n      tag_64\n      tag_200\n      calldatasize\n      0x04\n      tag_201\n      jump\t// in\n    tag_200:\n      tag_202\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":2644:2679  uint256 constant public sellfee = 1 */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      tag_64\n        /* \"contracts/Base7minutes.sol\":2678:2679  1 */\n      0x01\n        /* \"contracts/Base7minutes.sol\":2644:2679  uint256 constant public sellfee = 1 */\n      dup2\n      jump\n        /* \"contracts/Base7minutes.sol\":5659:6194  function setNewRouter(address _newRouterAddress) external onlyOwner {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_208\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_208:\n      pop\n      tag_73\n      tag_210\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_210:\n      tag_211\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n      pop\n      tag_73\n      tag_214\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_214:\n      tag_215\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":6202:6324  function excludeFromLockPeriod(address _address) external onlyOwner {... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      tag_73\n      tag_218\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_218:\n      tag_219\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_223\n      swap1\n      tag_222\n      jump\t// in\n    tag_223:\n      dup1\n      iszero\n      tag_224\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_225\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_224)\n    tag_225:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_226:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_226\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_230\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_227:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Base7minutes.sol\":6335:6454  function includeInTimeLock(address _address) external onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":6406:6438  excludedFromLockPeriod[_address] */\n      and\n        /* \"contracts/Base7minutes.sol\":6441:6446  false */\n      0x00\n        /* \"contracts/Base7minutes.sol\":6406:6438  excludedFromLockPeriod[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":6406:6428  excludedFromLockPeriod */\n      0x10\n        /* \"contracts/Base7minutes.sol\":6406:6438  excludedFromLockPeriod[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Base7minutes.sol\":6406:6446  excludedFromLockPeriod[_address] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Base7minutes.sol\":6335:6454  function includeInTimeLock(address _address) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Base7minutes.sol\":8514:8902  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_81:\n        /* \"contracts/Base7minutes.sol\":8612:8616  bool */\n      0x00\n        /* \"contracts/Base7minutes.sol\":8625:8661  _transfer(sender, recipient, amount) */\n      tag_238\n        /* \"contracts/Base7minutes.sol\":8635:8641  sender */\n      dup5\n        /* \"contracts/Base7minutes.sol\":8643:8652  recipient */\n      dup5\n        /* \"contracts/Base7minutes.sol\":8654:8660  amount */\n      dup5\n        /* \"contracts/Base7minutes.sol\":8625:8634  _transfer */\n      tag_239\n        /* \"contracts/Base7minutes.sol\":8625:8661  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/Base7minutes.sol\":8668:8692  uint256 currentAllowance */\n      0x00\n        /* \"contracts/Base7minutes.sol\":8695:8726  allowance(sender, _msgSender()) */\n      tag_240\n        /* \"contracts/Base7minutes.sol\":8705:8711  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      tag_202\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":8695:8726  allowance(sender, _msgSender()) */\n    tag_240:\n        /* \"contracts/Base7minutes.sol\":8668:8726  uint256 currentAllowance = allowance(sender, _msgSender()) */\n      swap1\n      pop\n        /* \"contracts/Base7minutes.sol\":8761:8767  amount */\n      dup3\n        /* \"contracts/Base7minutes.sol\":8741:8757  currentAllowance */\n      dup2\n        /* \"contracts/Base7minutes.sol\":8741:8767  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/Base7minutes.sol\":8733:8812  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4536:4538   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":8733:8812  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4518:4539   */\n      mstore\n        /* \"#utility.yul\":4575:4577   */\n      0x28\n        /* \"#utility.yul\":4555:4573   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4548:4578   */\n      mstore\n        /* \"#utility.yul\":4614:4648   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":4594:4612   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4587:4649   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":4665:4683   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4658:4696   */\n      mstore\n        /* \"#utility.yul\":4713:4732   */\n      0x84\n      add\n        /* \"contracts/Base7minutes.sol\":8733:8812  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_49\n        /* \"#utility.yul\":4334:4738   */\n      jump\n        /* \"contracts/Base7minutes.sol\":8733:8812  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_242:\n        /* \"contracts/Base7minutes.sol\":8819:8876  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_245\n        /* \"contracts/Base7minutes.sol\":8828:8834  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Base7minutes.sol\":8850:8875  currentAllowance - amount */\n      tag_247\n        /* \"contracts/Base7minutes.sol\":8869:8875  amount */\n      dup7\n        /* \"contracts/Base7minutes.sol\":8850:8866  currentAllowance */\n      dup6\n        /* \"contracts/Base7minutes.sol\":8850:8875  currentAllowance - amount */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"contracts/Base7minutes.sol\":8819:8827  _approve */\n      tag_231\n        /* \"contracts/Base7minutes.sol\":8819:8876  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_245:\n      pop\n        /* \"contracts/Base7minutes.sol\":8890:8894  true */\n      0x01\n      swap5\n        /* \"contracts/Base7minutes.sol\":8514:8902  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_230\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_253\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_247\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":8207:8290  function burn(uint256 amount) external {... */\n    tag_106:\n        /* \"contracts/Base7minutes.sol\":8257:8282  _burn(msg.sender, amount) */\n      tag_257\n        /* \"contracts/Base7minutes.sol\":8263:8273  msg.sender */\n      caller\n        /* \"contracts/Base7minutes.sol\":8275:8281  amount */\n      dup3\n        /* \"contracts/Base7minutes.sol\":8257:8262  _burn */\n      tag_258\n        /* \"contracts/Base7minutes.sol\":8257:8282  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/Base7minutes.sol\":8207:8290  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Base7minutes.sol\":2284:2421  function renounceOwnership() public onlyOwner override  {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n        /* \"contracts/Base7minutes.sol\":2356:2383  OwnershipRenounced(owner()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Base7minutes.sol\":2356:2383  OwnershipRenounced(owner()) */\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Base7minutes.sol\":2394:2400  _owner */\n      0x06\n        /* \"contracts/Base7minutes.sol\":2394:2413  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Base7minutes.sol\":2284:2421  function renounceOwnership() public onlyOwner override  {... */\n      jump\t// out\n        /* \"contracts/Base7minutes.sol\":8050:8199  function rescueERC20(address tokenAdd, uint256 amount) external onlyOwner {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/Base7minutes.sol\":8161:8182  buybackandburnAddress */\n      sload(0x08)\n        /* \"contracts/Base7minutes.sol\":8135:8191  IERC20(tokenAdd).transfer(buybackandburnAddress, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":8161:8182  buybackandburnAddress */\n      swap2\n      dup3\n      and\n        /* \"contracts/Base7minutes.sol\":8135:8191  IERC20(tokenAdd).transfer(buybackandburnAddress, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5320:5371   */\n      mstore\n        /* \"#utility.yul\":5387:5405   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5380:5414   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Base7minutes.sol\":8135:8160  IERC20(tokenAdd).transfer */\n      swap1\n      dup4\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5293:5311   */\n      0x44\n      add\n        /* \"contracts/Base7minutes.sol\":8135:8191  IERC20(tokenAdd).transfer(buybackandburnAddress, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      pop\n        /* \"contracts/Base7minutes.sol\":8050:8199  function rescueERC20(address tokenAdd, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Base7minutes.sol\":6568:6683  function circulatingSupply() external view returns (uint256) {... */\n    tag_144:\n        /* \"contracts/Base7minutes.sol\":2984:3026  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/Base7minutes.sol\":6620:6627  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      sload(0x44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83)\n        /* \"contracts/Base7minutes.sol\":6641:6678  TOTAL_SUPPLY - balanceOf(DEAD_WALLET) */\n      tag_276\n      swap1\n        /* \"contracts/Base7minutes.sol\":2471:2497  1_111_111_111_111 * 10**18 */\n      0x0e063191caf768f40cc2bc0000\n        /* \"contracts/Base7minutes.sol\":6641:6678  TOTAL_SUPPLY - balanceOf(DEAD_WALLET) */\n      tag_248\n      jump\t// in\n    tag_276:\n        /* \"contracts/Base7minutes.sol\":6634:6678  return TOTAL_SUPPLY - balanceOf(DEAD_WALLET) */\n      swap1\n      pop\n        /* \"contracts/Base7minutes.sol\":6568:6683  function circulatingSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_285\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5909:5911   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5891:5912   */\n      mstore\n        /* \"#utility.yul\":5948:5950   */\n      0x25\n        /* \"#utility.yul\":5928:5946   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5921:5951   */\n      mstore\n        /* \"#utility.yul\":5987:6021   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5967:5985   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5960:6022   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6038:6056   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6031:6066   */\n      mstore\n        /* \"#utility.yul\":6083:6102   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_49\n        /* \"#utility.yul\":5707:6108   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":8304:8506  function transfer(address recipient, uint256 amount) public override onlyWallets returns (bool) {... */\n    tag_166:\n        /* \"contracts/Base7minutes.sol\":8394:8398  bool */\n      0x00\n        /* \"contracts/Base7minutes.sol\":3248:3258  msg.sender */\n      caller\n        /* \"contracts/Base7minutes.sol\":3501:3519  extcodesize(_addr) */\n      extcodesize\n        /* \"contracts/Base7minutes.sol\":3539:3547  size > 0 */\n      iszero\n      dup1\n        /* \"contracts/Base7minutes.sol\":3236:3297  !isContract(msg.sender) || msg.sender == uniswapRouterAddress */\n      tag_293\n      jumpi\n      pop\n        /* \"contracts/Base7minutes.sol\":3277:3297  uniswapRouterAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"contracts/Base7minutes.sol\":3263:3273  msg.sender */\n      caller\n        /* \"contracts/Base7minutes.sol\":3263:3297  msg.sender == uniswapRouterAddress */\n      eq\n        /* \"contracts/Base7minutes.sol\":3236:3297  !isContract(msg.sender) || msg.sender == uniswapRouterAddress */\n    tag_293:\n        /* \"contracts/Base7minutes.sol\":3236:3326  !isContract(msg.sender) || msg.sender == uniswapRouterAddress || msg.sender == uniswapPair */\n      dup1\n      tag_294\n      jumpi\n      pop\n        /* \"contracts/Base7minutes.sol\":3315:3326  uniswapPair */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"contracts/Base7minutes.sol\":3301:3311  msg.sender */\n      caller\n        /* \"contracts/Base7minutes.sol\":3301:3326  msg.sender == uniswapPair */\n      eq\n        /* \"contracts/Base7minutes.sol\":3236:3326  !isContract(msg.sender) || msg.sender == uniswapRouterAddress || msg.sender == uniswapPair */\n    tag_294:\n        /* \"contracts/Base7minutes.sol\":3228:3363  require(!isContract(msg.sender) || msg.sender == uniswapRouterAddress || msg.sender == uniswapPair, \"Bots are not allowed to buy/sell\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6315:6317   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":3228:3363  require(!isContract(msg.sender) || msg.sender == uniswapRouterAddress || msg.sender == uniswapPair, \"Bots are not allowed to buy/sell\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6297:6318   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6334:6352   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6327:6357   */\n      mstore\n        /* \"#utility.yul\":6393:6427   */\n      0x426f747320617265206e6f7420616c6c6f77656420746f206275792f73656c6c\n        /* \"#utility.yul\":6373:6391   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6366:6428   */\n      mstore\n        /* \"#utility.yul\":6445:6463   */\n      0x64\n      add\n        /* \"contracts/Base7minutes.sol\":3228:3363  require(!isContract(msg.sender) || msg.sender == uniswapRouterAddress || msg.sender == uniswapPair, \"Bots are not allowed to buy/sell\") */\n      tag_49\n        /* \"#utility.yul\":6113:6469   */\n      jump\n        /* \"contracts/Base7minutes.sol\":3228:3363  require(!isContract(msg.sender) || msg.sender == uniswapRouterAddress || msg.sender == uniswapPair, \"Bots are not allowed to buy/sell\") */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Base7minutes.sol\":8443:8479  _transfer(sender, recipient, amount) */\n      tag_230\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"contracts/Base7minutes.sol\":8461:8470  recipient */\n      dup6\n        /* \"contracts/Base7minutes.sol\":8472:8478  amount */\n      dup6\n        /* \"contracts/Base7minutes.sol\":8443:8452  _transfer */\n      tag_239\n        /* \"contracts/Base7minutes.sol\":8443:8479  _transfer(sender, recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Base7minutes.sol\":5659:6194  function setNewRouter(address _newRouterAddress) external onlyOwner {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_305\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":5742:5773  _newRouterAddress != address(0) */\n      dup2\n      and\n        /* \"contracts/Base7minutes.sol\":5734:5823  require(_newRouterAddress != address(0), \"New router address cannot be the zero address\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6676:6678   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":5734:5823  require(_newRouterAddress != address(0), \"New router address cannot be the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6658:6679   */\n      mstore\n        /* \"#utility.yul\":6715:6717   */\n      0x2d\n        /* \"#utility.yul\":6695:6713   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6688:6718   */\n      mstore\n        /* \"#utility.yul\":6754:6788   */\n      0x4e657720726f7574657220616464726573732063616e6e6f7420626520746865\n        /* \"#utility.yul\":6734:6752   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6727:6789   */\n      mstore\n      shl(0x98, 0x207a65726f2061646472657373)\n        /* \"#utility.yul\":6805:6823   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6798:6841   */\n      mstore\n        /* \"#utility.yul\":6858:6877   */\n      0x84\n      add\n        /* \"contracts/Base7minutes.sol\":5734:5823  require(_newRouterAddress != address(0), \"New router address cannot be the zero address\") */\n      tag_49\n        /* \"#utility.yul\":6474:6883   */\n      jump\n        /* \"contracts/Base7minutes.sol\":5734:5823  require(_newRouterAddress != address(0), \"New router address cannot be the zero address\") */\n    tag_307:\n        /* \"contracts/Base7minutes.sol\":5830:5859  IUniswapV2Router02 _newRouter */\n      0x00\n        /* \"contracts/Base7minutes.sol\":5881:5898  _newRouterAddress */\n      dup2\n        /* \"contracts/Base7minutes.sol\":5830:5899  IUniswapV2Router02 _newRouter = IUniswapV2Router02(_newRouterAddress) */\n      swap1\n      pop\n        /* \"contracts/Base7minutes.sol\":5906:5919  address _pair */\n      0x00\n        /* \"contracts/Base7minutes.sol\":5940:5950  _newRouter */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":5940:5958  _newRouter.factory */\n      and\n      0xc45a0155\n        /* \"contracts/Base7minutes.sol\":5940:5960  _newRouter.factory() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_311:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_312\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":5922:5972  IUniswapV2Factory(_newRouter.factory()).createPair */\n      and\n      0xc9c65396\n        /* \"contracts/Base7minutes.sol\":5981:5985  this */\n      address\n        /* \"contracts/Base7minutes.sol\":5988:5998  _newRouter */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":5988:6003  _newRouter.WETH */\n      and\n      0xad5c4648\n        /* \"contracts/Base7minutes.sol\":5988:6005  _newRouter.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_316\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_316:\n        /* \"contracts/Base7minutes.sol\":5922:6006  IUniswapV2Factory(_newRouter.factory()).createPair(address(this), _newRouter.WETH()) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7374:7389   */\n      swap3\n      dup4\n      and\n        /* \"contracts/Base7minutes.sol\":5922:6006  IUniswapV2Factory(_newRouter.factory()).createPair(address(this), _newRouter.WETH()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7356:7390   */\n      mstore\n        /* \"#utility.yul\":7426:7441   */\n      swap2\n      and\n        /* \"#utility.yul\":7406:7424   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7399:7442   */\n      mstore\n        /* \"#utility.yul\":7291:7309   */\n      0x44\n      add\n        /* \"contracts/Base7minutes.sol\":5922:6006  IUniswapV2Factory(_newRouter.factory()).createPair(address(this), _newRouter.WETH()) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_320\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_320:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_321\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_321:\n        /* \"contracts/Base7minutes.sol\":5906:6006  address _pair = IUniswapV2Factory(_newRouter.factory()).createPair(address(this), _newRouter.WETH()) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":6021:6040  _pair != address(0) */\n      dup2\n      and\n        /* \"contracts/Base7minutes.sol\":6013:6063  require(_pair != address(0), \"New pair not found\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7655:7657   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":6013:6063  require(_pair != address(0), \"New pair not found\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7637:7658   */\n      mstore\n        /* \"#utility.yul\":7694:7696   */\n      0x12\n        /* \"#utility.yul\":7674:7692   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7667:7697   */\n      mstore\n      shl(0x72, 0x13995dc81c185a5c881b9bdd08199bdd5b99)\n        /* \"#utility.yul\":7713:7731   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7706:7754   */\n      mstore\n        /* \"#utility.yul\":7771:7789   */\n      0x64\n      add\n        /* \"contracts/Base7minutes.sol\":6013:6063  require(_pair != address(0), \"New pair not found\") */\n      tag_49\n        /* \"#utility.yul\":7453:7795   */\n      jump\n        /* \"contracts/Base7minutes.sol\":6013:6063  require(_pair != address(0), \"New pair not found\") */\n    tag_322:\n        /* \"contracts/Base7minutes.sol\":6131:6144  uniswapRouter */\n      0x0c\n        /* \"contracts/Base7minutes.sol\":6131:6157  uniswapRouter = _newRouter */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Base7minutes.sol\":6164:6183  uniswapPairs[_pair] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":6164:6176  uniswapPairs */\n      0x11\n        /* \"contracts/Base7minutes.sol\":6164:6183  uniswapPairs[_pair] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Base7minutes.sol\":6164:6190  uniswapPairs[_pair] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Base7minutes.sol\":5659:6194  function setNewRouter(address _newRouterAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_326\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8002:8004   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7984:8005   */\n      mstore\n        /* \"#utility.yul\":8041:8043   */\n      0x26\n        /* \"#utility.yul\":8021:8039   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8014:8044   */\n      mstore\n        /* \"#utility.yul\":8080:8114   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8060:8078   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8053:8115   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8131:8149   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8124:8160   */\n      mstore\n        /* \"#utility.yul\":8177:8196   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_49\n        /* \"#utility.yul\":7800:8202   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_328:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_332\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/Base7minutes.sol\":6202:6324  function excludeFromLockPeriod(address _address) external onlyOwner {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_334\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":6277:6309  excludedFromLockPeriod[_address] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":6277:6299  excludedFromLockPeriod */\n      0x10\n        /* \"contracts/Base7minutes.sol\":6277:6309  excludedFromLockPeriod[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Base7minutes.sol\":6277:6316  excludedFromLockPeriod[_address] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Base7minutes.sol\":6312:6316  true */\n      0x01\n        /* \"contracts/Base7minutes.sol\":6277:6316  excludedFromLockPeriod[_address] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Base7minutes.sol\":6202:6324  function excludeFromLockPeriod(address _address) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8409:8411   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8391:8412   */\n      mstore\n        /* \"#utility.yul\":8448:8450   */\n      0x24\n        /* \"#utility.yul\":8428:8446   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8421:8451   */\n      mstore\n        /* \"#utility.yul\":8487:8521   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8467:8485   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8460:8522   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8538:8556   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8531:8565   */\n      mstore\n        /* \"#utility.yul\":8582:8601   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_49\n        /* \"#utility.yul\":8207:8607   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_338:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8814:8816   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8796:8817   */\n      mstore\n        /* \"#utility.yul\":8853:8855   */\n      0x22\n        /* \"#utility.yul\":8833:8851   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8826:8856   */\n      mstore\n        /* \"#utility.yul\":8892:8926   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8872:8890   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8865:8927   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":8943:8961   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8936:8968   */\n      mstore\n        /* \"#utility.yul\":8985:9004   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_49\n        /* \"#utility.yul\":8612:9010   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1766:1791   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1739:1757   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9217:9219   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9199:9220   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9236:9254   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9229:9259   */\n      mstore\n        /* \"#utility.yul\":9295:9329   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9275:9293   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9268:9330   */\n      mstore\n        /* \"#utility.yul\":9347:9365   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_49\n        /* \"#utility.yul\":9015:9371   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_348:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/Base7minutes.sol\":9005:10844  function _transfer(address sender, address recipient, uint256 amount) internal override onlyEOAs {... */\n    tag_239:\n        /* \"contracts/Base7minutes.sol\":3590:3599  tx.origin */\n      origin\n        /* \"contracts/Base7minutes.sol\":3603:3613  msg.sender */\n      caller\n        /* \"contracts/Base7minutes.sol\":3590:3613  tx.origin == msg.sender */\n      eq\n        /* \"contracts/Base7minutes.sol\":3582:3651  require(tx.origin == msg.sender, \"Contracts are not allowed to sell\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9578:9580   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":3582:3651  require(tx.origin == msg.sender, \"Contracts are not allowed to sell\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9560:9581   */\n      mstore\n        /* \"#utility.yul\":9617:9619   */\n      0x21\n        /* \"#utility.yul\":9597:9615   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9590:9620   */\n      mstore\n        /* \"#utility.yul\":9656:9690   */\n      0x436f6e74726163747320617265206e6f7420616c6c6f77656420746f2073656c\n        /* \"#utility.yul\":9636:9654   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9629:9691   */\n      mstore\n      shl(0xfa, 0x1b)\n        /* \"#utility.yul\":9707:9725   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9700:9731   */\n      mstore\n        /* \"#utility.yul\":9748:9767   */\n      0x84\n      add\n        /* \"contracts/Base7minutes.sol\":3582:3651  require(tx.origin == msg.sender, \"Contracts are not allowed to sell\") */\n      tag_49\n        /* \"#utility.yul\":9376:9773   */\n      jump\n        /* \"contracts/Base7minutes.sol\":3582:3651  require(tx.origin == msg.sender, \"Contracts are not allowed to sell\") */\n    tag_352:\n        /* \"contracts/Base7minutes.sol\":9130:9131  0 */\n      0x00\n        /* \"contracts/Base7minutes.sol\":9121:9127  amount */\n      dup2\n        /* \"contracts/Base7minutes.sol\":9121:9131  amount > 0 */\n      gt\n        /* \"contracts/Base7minutes.sol\":9113:9177  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9980:9982   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":9113:9177  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9962:9983   */\n      mstore\n        /* \"#utility.yul\":10019:10021   */\n      0x29\n        /* \"#utility.yul\":9999:10017   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9992:10022   */\n      mstore\n        /* \"#utility.yul\":10058:10092   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":10038:10056   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10031:10093   */\n      mstore\n      shl(0xb8, 0x7468616e207a65726f)\n        /* \"#utility.yul\":10109:10127   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10102:10141   */\n      mstore\n        /* \"#utility.yul\":10158:10177   */\n      0x84\n      add\n        /* \"contracts/Base7minutes.sol\":9113:9177  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_49\n        /* \"#utility.yul\":9778:10183   */\n      jump\n        /* \"contracts/Base7minutes.sol\":9113:9177  require(amount > 0, \"Transfer amount must be greater than zero\") */\n    tag_356:\n        /* \"contracts/Base7minutes.sol\":9213:9219  amount */\n      dup1\n        /* \"contracts/Base7minutes.sol\":9192:9209  balanceOf(sender) */\n      tag_359\n        /* \"contracts/Base7minutes.sol\":9202:9208  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/Base7minutes.sol\":9192:9209  balanceOf(sender) */\n    tag_359:\n        /* \"contracts/Base7minutes.sol\":9192:9219  balanceOf(sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/Base7minutes.sol\":9184:9244  require(balanceOf(sender) >= amount, \"Insufficient balance\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10390:10392   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":9184:9244  require(balanceOf(sender) >= amount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10372:10393   */\n      mstore\n        /* \"#utility.yul\":10429:10431   */\n      0x14\n        /* \"#utility.yul\":10409:10427   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10402:10432   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":10448:10466   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10441:10491   */\n      mstore\n        /* \"#utility.yul\":10508:10526   */\n      0x64\n      add\n        /* \"contracts/Base7minutes.sol\":9184:9244  require(balanceOf(sender) >= amount, \"Insufficient balance\") */\n      tag_49\n        /* \"#utility.yul\":10188:10532   */\n      jump\n        /* \"contracts/Base7minutes.sol\":9184:9244  require(balanceOf(sender) >= amount, \"Insufficient balance\") */\n    tag_360:\n      not(0xdeac)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":9263:9287  recipient == DEAD_WALLET */\n      dup4\n      and\n      add\n        /* \"contracts/Base7minutes.sol\":9259:9336  if (recipient == DEAD_WALLET) {... */\n      tag_363\n      jumpi\n        /* \"contracts/Base7minutes.sol\":9322:9328  amount */\n      dup1\n        /* \"contracts/Base7minutes.sol\":9300:9318  CIRCULATING_SUPPLY */\n      0x09\n      0x00\n        /* \"contracts/Base7minutes.sol\":9300:9328  CIRCULATING_SUPPLY -= amount */\n      dup3\n      dup3\n      sload\n      tag_364\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_364:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Base7minutes.sol\":9259:9336  if (recipient == DEAD_WALLET) {... */\n    tag_363:\n        /* \"contracts/Base7minutes.sol\":9475:9485  dev_wallet */\n      sload(0x0a)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":9465:9485  sender != dev_wallet */\n      dup5\n      dup2\n      and\n        /* \"contracts/Base7minutes.sol\":9475:9485  dev_wallet */\n      swap2\n      and\n        /* \"contracts/Base7minutes.sol\":9465:9485  sender != dev_wallet */\n      eq\n        /* \"contracts/Base7minutes.sol\":9461:9716  if (sender != dev_wallet) {... */\n      tag_368\n      jumpi\n        /* \"contracts/Base7minutes.sol\":9652:9670  maxTokensPerWallet */\n      sload(0x07)\n        /* \"contracts/Base7minutes.sol\":9642:9648  amount */\n      dup2\n        /* \"contracts/Base7minutes.sol\":9619:9639  balanceOf(recipient) */\n      tag_366\n        /* \"contracts/Base7minutes.sol\":9629:9638  recipient */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/Base7minutes.sol\":9619:9639  balanceOf(recipient) */\n    tag_366:\n        /* \"contracts/Base7minutes.sol\":9619:9648  balanceOf(recipient) + amount */\n      tag_367\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_367:\n        /* \"contracts/Base7minutes.sol\":9619:9670  balanceOf(recipient) + amount <= maxTokensPerWallet */\n      gt\n      iszero\n        /* \"contracts/Base7minutes.sol\":9611:9708  require(balanceOf(recipient) + amount <= maxTokensPerWallet, \"Exceeds maximum tokens per wallet\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10739:10741   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":9611:9708  require(balanceOf(recipient) + amount <= maxTokensPerWallet, \"Exceeds maximum tokens per wallet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10721:10742   */\n      mstore\n        /* \"#utility.yul\":10778:10780   */\n      0x21\n        /* \"#utility.yul\":10758:10776   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10751:10781   */\n      mstore\n        /* \"#utility.yul\":10817:10851   */\n      0x45786365656473206d6178696d756d20746f6b656e73207065722077616c6c65\n        /* \"#utility.yul\":10797:10815   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10790:10852   */\n      mstore\n      shl(0xfa, 0x1d)\n        /* \"#utility.yul\":10868:10886   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10861:10892   */\n      mstore\n        /* \"#utility.yul\":10909:10928   */\n      0x84\n      add\n        /* \"contracts/Base7minutes.sol\":9611:9708  require(balanceOf(recipient) + amount <= maxTokensPerWallet, \"Exceeds maximum tokens per wallet\") */\n      tag_49\n        /* \"#utility.yul\":10537:10934   */\n      jump\n        /* \"contracts/Base7minutes.sol\":9611:9708  require(balanceOf(recipient) + amount <= maxTokensPerWallet, \"Exceeds maximum tokens per wallet\") */\n    tag_368:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":9780:9810  excludedFromLockPeriod[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":9780:9802  excludedFromLockPeriod */\n      0x10\n        /* \"contracts/Base7minutes.sol\":9780:9810  excludedFromLockPeriod[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Base7minutes.sol\":9779:9810  !excludedFromLockPeriod[sender] */\n      iszero\n        /* \"contracts/Base7minutes.sol\":9779:9831  !excludedFromLockPeriod[sender] && sender != owner() */\n      dup1\n      iszero\n      tag_371\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":9814:9831  sender != owner() */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap2\n      and\n        /* \"contracts/Base7minutes.sol\":9814:9831  sender != owner() */\n      eq\n      iszero\n        /* \"contracts/Base7minutes.sol\":9779:9831  !excludedFromLockPeriod[sender] && sender != owner() */\n    tag_371:\n        /* \"contracts/Base7minutes.sol\":9779:9867  !excludedFromLockPeriod[sender] && sender != owner() && sender != address(uniswapRouter) */\n      dup1\n      iszero\n      tag_373\n      jumpi\n      pop\n        /* \"contracts/Base7minutes.sol\":9853:9866  uniswapRouter */\n      sload(0x0c)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":9835:9867  sender != address(uniswapRouter) */\n      dup5\n      dup2\n      and\n        /* \"contracts/Base7minutes.sol\":9853:9866  uniswapRouter */\n      swap2\n      and\n        /* \"contracts/Base7minutes.sol\":9835:9867  sender != address(uniswapRouter) */\n      eq\n      iszero\n        /* \"contracts/Base7minutes.sol\":9779:9867  !excludedFromLockPeriod[sender] && sender != owner() && sender != address(uniswapRouter) */\n    tag_373:\n        /* \"contracts/Base7minutes.sol\":9775:9963  if (!excludedFromLockPeriod[sender] && sender != owner() && sender != address(uniswapRouter)) {... */\n      iszero\n      tag_375\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":9907:9925  timeStamps[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":9907:9917  timeStamps */\n      0x0f\n        /* \"contracts/Base7minutes.sol\":9907:9925  timeStamps[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Base7minutes.sol\":9888:9903  block.timestamp */\n      timestamp\n        /* \"contracts/Base7minutes.sol\":9888:9925  block.timestamp >= timeStamps[sender] */\n      lt\n      iszero\n        /* \"contracts/Base7minutes.sol\":9880:9955  require(block.timestamp >= timeStamps[sender], \"Time lock is still active\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11141:11143   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":9880:9955  require(block.timestamp >= timeStamps[sender], \"Time lock is still active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11123:11144   */\n      mstore\n        /* \"#utility.yul\":11180:11182   */\n      0x19\n        /* \"#utility.yul\":11160:11178   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11153:11183   */\n      mstore\n        /* \"#utility.yul\":11219:11246   */\n      0x54696d65206c6f636b206973207374696c6c2061637469766500000000000000\n        /* \"#utility.yul\":11199:11217   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11192:11247   */\n      mstore\n        /* \"#utility.yul\":11264:11282   */\n      0x64\n      add\n        /* \"contracts/Base7minutes.sol\":9880:9955  require(block.timestamp >= timeStamps[sender], \"Time lock is still active\") */\n      tag_49\n        /* \"#utility.yul\":10939:11288   */\n      jump\n        /* \"contracts/Base7minutes.sol\":9880:9955  require(block.timestamp >= timeStamps[sender], \"Time lock is still active\") */\n    tag_375:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10030:10063  excludedFromLockPeriod[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":10030:10052  excludedFromLockPeriod */\n      0x10\n        /* \"contracts/Base7minutes.sol\":10030:10063  excludedFromLockPeriod[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Base7minutes.sol\":10029:10063  !excludedFromLockPeriod[recipient] */\n      iszero\n        /* \"contracts/Base7minutes.sol\":10029:10087  !excludedFromLockPeriod[recipient] && recipient != owner() */\n      dup1\n      iszero\n      tag_378\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10067:10087  recipient != owner() */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap2\n      and\n        /* \"contracts/Base7minutes.sol\":10067:10087  recipient != owner() */\n      eq\n      iszero\n        /* \"contracts/Base7minutes.sol\":10029:10087  !excludedFromLockPeriod[recipient] && recipient != owner() */\n    tag_378:\n        /* \"contracts/Base7minutes.sol\":10029:10126  !excludedFromLockPeriod[recipient] && recipient != owner() && recipient != address(uniswapRouter) */\n      dup1\n      iszero\n      tag_380\n      jumpi\n      pop\n        /* \"contracts/Base7minutes.sol\":10112:10125  uniswapRouter */\n      sload(0x0c)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10091:10126  recipient != address(uniswapRouter) */\n      dup4\n      dup2\n      and\n        /* \"contracts/Base7minutes.sol\":10112:10125  uniswapRouter */\n      swap2\n      and\n        /* \"contracts/Base7minutes.sol\":10091:10126  recipient != address(uniswapRouter) */\n      eq\n      iszero\n        /* \"contracts/Base7minutes.sol\":10029:10126  !excludedFromLockPeriod[recipient] && recipient != owner() && recipient != address(uniswapRouter) */\n    tag_380:\n        /* \"contracts/Base7minutes.sol\":10025:10315  if (!excludedFromLockPeriod[recipient] && recipient != owner() && recipient != address(uniswapRouter)) {... */\n      iszero\n      tag_381\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10147:10168  timeStamps[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":10147:10157  timeStamps */\n      0x0f\n        /* \"contracts/Base7minutes.sol\":10147:10168  timeStamps[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Base7minutes.sol\":10147:10173  timeStamps[recipient] == 0 */\n      iszero\n      dup1\n        /* \"contracts/Base7minutes.sol\":10147:10217  timeStamps[recipient] == 0 || block.timestamp >= timeStamps[recipient] */\n      tag_382\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10196:10217  timeStamps[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":10196:10206  timeStamps */\n      0x0f\n        /* \"contracts/Base7minutes.sol\":10196:10217  timeStamps[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Base7minutes.sol\":10177:10192  block.timestamp */\n      timestamp\n        /* \"contracts/Base7minutes.sol\":10177:10217  block.timestamp >= timeStamps[recipient] */\n      lt\n      iszero\n        /* \"contracts/Base7minutes.sol\":10147:10217  timeStamps[recipient] == 0 || block.timestamp >= timeStamps[recipient] */\n    tag_382:\n        /* \"contracts/Base7minutes.sol\":10139:10244  require(timeStamps[recipient] == 0 || block.timestamp >= timeStamps[recipient], \"Recipient in time lock\") */\n      tag_383\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11495:11497   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":10139:10244  require(timeStamps[recipient] == 0 || block.timestamp >= timeStamps[recipient], \"Recipient in time lock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11477:11498   */\n      mstore\n        /* \"#utility.yul\":11534:11536   */\n      0x16\n        /* \"#utility.yul\":11514:11532   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11507:11537   */\n      mstore\n      shl(0x50, 0x526563697069656e7420696e2074696d65206c6f636b)\n        /* \"#utility.yul\":11553:11571   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11546:11598   */\n      mstore\n        /* \"#utility.yul\":11615:11633   */\n      0x64\n      add\n        /* \"contracts/Base7minutes.sol\":10139:10244  require(timeStamps[recipient] == 0 || block.timestamp >= timeStamps[recipient], \"Recipient in time lock\") */\n      tag_49\n        /* \"#utility.yul\":11293:11639   */\n      jump\n        /* \"contracts/Base7minutes.sol\":10139:10244  require(timeStamps[recipient] == 0 || block.timestamp >= timeStamps[recipient], \"Recipient in time lock\") */\n    tag_383:\n        /* \"contracts/Base7minutes.sol\":10279:10307  block.timestamp + lockPeriod */\n      tag_386\n        /* \"contracts/Base7minutes.sol\":2541:2550  1 minutes */\n      0x3c\n        /* \"contracts/Base7minutes.sol\":10279:10294  block.timestamp */\n      timestamp\n        /* \"contracts/Base7minutes.sol\":10279:10307  block.timestamp + lockPeriod */\n      tag_255\n      jump\t// in\n    tag_386:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10255:10276  timeStamps[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":10255:10265  timeStamps */\n      0x0f\n        /* \"contracts/Base7minutes.sol\":10255:10276  timeStamps[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Base7minutes.sol\":10255:10307  timeStamps[recipient] = block.timestamp + lockPeriod */\n      sstore\n        /* \"contracts/Base7minutes.sol\":10025:10315  if (!excludedFromLockPeriod[recipient] && recipient != owner() && recipient != address(uniswapRouter)) {... */\n    tag_381:\n        /* \"contracts/Base7minutes.sol\":10388:10399  uniswapPair */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10375:10399  recipient == uniswapPair */\n      dup4\n      dup2\n      and\n        /* \"contracts/Base7minutes.sol\":10388:10399  uniswapPair */\n      swap2\n      and\n        /* \"contracts/Base7minutes.sol\":10375:10399  recipient == uniswapPair */\n      eq\n        /* \"contracts/Base7minutes.sol\":10375:10435  recipient == uniswapPair && sender != address(uniswapRouter) */\n      dup1\n      iszero\n      tag_387\n      jumpi\n      pop\n        /* \"contracts/Base7minutes.sol\":10421:10434  uniswapRouter */\n      sload(0x0c)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10403:10435  sender != address(uniswapRouter) */\n      dup5\n      dup2\n      and\n        /* \"contracts/Base7minutes.sol\":10421:10434  uniswapRouter */\n      swap2\n      and\n        /* \"contracts/Base7minutes.sol\":10403:10435  sender != address(uniswapRouter) */\n      eq\n      iszero\n        /* \"contracts/Base7minutes.sol\":10375:10435  recipient == uniswapPair && sender != address(uniswapRouter) */\n    tag_387:\n        /* \"contracts/Base7minutes.sol\":10371:10788  if (recipient == uniswapPair && sender != address(uniswapRouter)) {... */\n      iszero\n      tag_388\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10539:10557  timeStamps[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":10539:10549  timeStamps */\n      0x0f\n        /* \"contracts/Base7minutes.sol\":10539:10557  timeStamps[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Base7minutes.sol\":10539:10562  timeStamps[sender] != 0 */\n      iszero\n        /* \"contracts/Base7minutes.sol\":10535:10671  if (timeStamps[sender] != 0) {... */\n      tag_390\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10606:10624  timeStamps[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":10606:10616  timeStamps */\n      0x0f\n        /* \"contracts/Base7minutes.sol\":10606:10624  timeStamps[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Base7minutes.sol\":10587:10602  block.timestamp */\n      timestamp\n        /* \"contracts/Base7minutes.sol\":10587:10624  block.timestamp >= timeStamps[sender] */\n      lt\n      iszero\n        /* \"contracts/Base7minutes.sol\":10579:10659  require(block.timestamp >= timeStamps[sender], \"Sell time lock is still active\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11846:11848   */\n      0x20\n        /* \"contracts/Base7minutes.sol\":10579:10659  require(block.timestamp >= timeStamps[sender], \"Sell time lock is still active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11828:11849   */\n      mstore\n        /* \"#utility.yul\":11885:11887   */\n      0x1e\n        /* \"#utility.yul\":11865:11883   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11858:11888   */\n      mstore\n        /* \"#utility.yul\":11924:11956   */\n      0x53656c6c2074696d65206c6f636b206973207374696c6c206163746976650000\n        /* \"#utility.yul\":11904:11922   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11897:11957   */\n      mstore\n        /* \"#utility.yul\":11974:11992   */\n      0x64\n      add\n        /* \"contracts/Base7minutes.sol\":10579:10659  require(block.timestamp >= timeStamps[sender], \"Sell time lock is still active\") */\n      tag_49\n        /* \"#utility.yul\":11644:11998   */\n      jump\n        /* \"contracts/Base7minutes.sol\":10579:10659  require(block.timestamp >= timeStamps[sender], \"Sell time lock is still active\") */\n    tag_390:\n        /* \"contracts/Base7minutes.sol\":10752:10780  block.timestamp + lockPeriod */\n      tag_393\n        /* \"contracts/Base7minutes.sol\":2541:2550  1 minutes */\n      0x3c\n        /* \"contracts/Base7minutes.sol\":10752:10767  block.timestamp */\n      timestamp\n        /* \"contracts/Base7minutes.sol\":10752:10780  block.timestamp + lockPeriod */\n      tag_255\n      jump\t// in\n    tag_393:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Base7minutes.sol\":10731:10749  timeStamps[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Base7minutes.sol\":10731:10741  timeStamps */\n      0x0f\n        /* \"contracts/Base7minutes.sol\":10731:10749  timeStamps[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Base7minutes.sol\":10731:10780  timeStamps[sender] = block.timestamp + lockPeriod */\n      sstore\n        /* \"contracts/Base7minutes.sol\":10371:10788  if (recipient == uniswapPair && sender != address(uniswapRouter)) {... */\n    tag_388:\n        /* \"contracts/Base7minutes.sol\":10796:10838  super._transfer(sender, recipient, amount) */\n      tag_271\n        /* \"contracts/Base7minutes.sol\":10812:10818  sender */\n      dup4\n        /* \"contracts/Base7minutes.sol\":10820:10829  recipient */\n      dup4\n        /* \"contracts/Base7minutes.sol\":10831:10837  amount */\n      dup4\n        /* \"contracts/Base7minutes.sol\":10796:10811  super._transfer */\n      tag_395\n        /* \"contracts/Base7minutes.sol\":10796:10838  super._transfer(sender, recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9458:9479  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_397\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12205:12207   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12187:12208   */\n      mstore\n        /* \"#utility.yul\":12244:12246   */\n      0x21\n        /* \"#utility.yul\":12224:12242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12217:12247   */\n      mstore\n        /* \"#utility.yul\":12283:12317   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":12263:12281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12256:12318   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":12334:12352   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12327:12358   */\n      mstore\n        /* \"#utility.yul\":12375:12394   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_49\n        /* \"#utility.yul\":12003:12400   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_397:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9588:9610  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9649:9673  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_402\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12607:12609   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12589:12610   */\n      mstore\n        /* \"#utility.yul\":12646:12648   */\n      0x22\n        /* \"#utility.yul\":12626:12644   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12619:12649   */\n      mstore\n        /* \"#utility.yul\":12685:12719   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":12665:12683   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12658:12720   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":12736:12754   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12729:12761   */\n      mstore\n        /* \"#utility.yul\":12778:12797   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_49\n        /* \"#utility.yul\":12405:12803   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_402:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9767:9790  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9790  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9883:9895  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9883:9905  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1766:1791   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1739:1757   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Base7minutes.sol\":8135:8191  IERC20(tokenAdd).transfer(buybackandburnAddress, amount) */\n      pop\n        /* \"contracts/Base7minutes.sol\":8050:8199  function rescueERC20(address tokenAdd, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_395:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_411\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13010:13012   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12992:13013   */\n      mstore\n        /* \"#utility.yul\":13049:13051   */\n      0x25\n        /* \"#utility.yul\":13029:13047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13022:13052   */\n      mstore\n        /* \"#utility.yul\":13088:13122   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13068:13086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13061:13123   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":13139:13157   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13132:13167   */\n      mstore\n        /* \"#utility.yul\":13184:13203   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_49\n        /* \"#utility.yul\":12808:13209   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_411:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_414\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13416:13418   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13398:13419   */\n      mstore\n        /* \"#utility.yul\":13455:13457   */\n      0x23\n        /* \"#utility.yul\":13435:13453   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13428:13458   */\n      mstore\n        /* \"#utility.yul\":13494:13528   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13474:13492   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13467:13529   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":13545:13563   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13538:13571   */\n      mstore\n        /* \"#utility.yul\":13588:13607   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_49\n        /* \"#utility.yul\":13214:13613   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_414:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_418\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13820:13822   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13802:13823   */\n      mstore\n        /* \"#utility.yul\":13859:13861   */\n      0x26\n        /* \"#utility.yul\":13839:13857   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13832:13862   */\n      mstore\n        /* \"#utility.yul\":13898:13932   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":13878:13896   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13871:13933   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":13949:13967   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13942:13978   */\n      mstore\n        /* \"#utility.yul\":13995:14014   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_49\n        /* \"#utility.yul\":13618:14020   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_418:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1766:1791   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1739:1757   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7534:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":419:967   */\n    tag_55:\n        /* \"#utility.yul\":531:535   */\n      0x00\n        /* \"#utility.yul\":560:562   */\n      0x20\n        /* \"#utility.yul\":589:591   */\n      dup1\n        /* \"#utility.yul\":578:587   */\n      dup4\n        /* \"#utility.yul\":571:592   */\n      mstore\n        /* \"#utility.yul\":621:627   */\n      dup4\n        /* \"#utility.yul\":615:628   */\n      mload\n        /* \"#utility.yul\":664:670   */\n      dup1\n        /* \"#utility.yul\":659:661   */\n      dup3\n        /* \"#utility.yul\":648:657   */\n      dup6\n        /* \"#utility.yul\":644:662   */\n      add\n        /* \"#utility.yul\":637:671   */\n      mstore\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":699:839   */\n    tag_430:\n        /* \"#utility.yul\":713:719   */\n      dup2\n        /* \"#utility.yul\":710:711   */\n      dup2\n        /* \"#utility.yul\":707:720   */\n      lt\n        /* \"#utility.yul\":699:839   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":808:822   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":804:827   */\n      dup4\n      add\n        /* \"#utility.yul\":798:828   */\n      mload\n        /* \"#utility.yul\":774:791   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":793:795   */\n      0x40\n        /* \"#utility.yul\":770:796   */\n      add\n        /* \"#utility.yul\":763:829   */\n      mstore\n        /* \"#utility.yul\":728:738   */\n      dup3\n      add\n        /* \"#utility.yul\":699:839   */\n      jump(tag_430)\n    tag_432:\n        /* \"#utility.yul\":703:706   */\n      pop\n        /* \"#utility.yul\":888:889   */\n      0x00\n        /* \"#utility.yul\":883:885   */\n      0x40\n        /* \"#utility.yul\":874:880   */\n      dup3\n        /* \"#utility.yul\":863:872   */\n      dup7\n        /* \"#utility.yul\":859:881   */\n      add\n        /* \"#utility.yul\":855:886   */\n      add\n        /* \"#utility.yul\":848:890   */\n      mstore\n        /* \"#utility.yul\":958:960   */\n      0x40\n        /* \"#utility.yul\":951:953   */\n      0x1f\n        /* \"#utility.yul\":947:954   */\n      not\n        /* \"#utility.yul\":942:944   */\n      0x1f\n        /* \"#utility.yul\":934:940   */\n      dup4\n        /* \"#utility.yul\":930:945   */\n      add\n        /* \"#utility.yul\":926:955   */\n      and\n        /* \"#utility.yul\":915:924   */\n      dup6\n        /* \"#utility.yul\":911:956   */\n      add\n        /* \"#utility.yul\":907:961   */\n      add\n        /* \"#utility.yul\":899:961   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":419:967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":972:1103   */\n    tag_425:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1047:1078   */\n      dup2\n      and\n        /* \"#utility.yul\":1037:1079   */\n      dup2\n      eq\n        /* \"#utility.yul\":1027:1097   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":1093:1094   */\n      0x00\n        /* \"#utility.yul\":1090:1091   */\n      dup1\n        /* \"#utility.yul\":1083:1095   */\n      revert\n        /* \"#utility.yul\":1108:1423   */\n    tag_59:\n        /* \"#utility.yul\":1176:1182   */\n      0x00\n        /* \"#utility.yul\":1184:1190   */\n      dup1\n        /* \"#utility.yul\":1237:1239   */\n      0x40\n        /* \"#utility.yul\":1225:1234   */\n      dup4\n        /* \"#utility.yul\":1216:1223   */\n      dup6\n        /* \"#utility.yul\":1212:1235   */\n      sub\n        /* \"#utility.yul\":1208:1240   */\n      slt\n        /* \"#utility.yul\":1205:1257   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":1253:1254   */\n      0x00\n        /* \"#utility.yul\":1250:1251   */\n      dup1\n        /* \"#utility.yul\":1243:1255   */\n      revert\n        /* \"#utility.yul\":1205:1257   */\n    tag_436:\n        /* \"#utility.yul\":1292:1301   */\n      dup3\n        /* \"#utility.yul\":1279:1302   */\n      calldataload\n        /* \"#utility.yul\":1311:1342   */\n      tag_437\n        /* \"#utility.yul\":1336:1341   */\n      dup2\n        /* \"#utility.yul\":1311:1342   */\n      tag_425\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":1361:1366   */\n      swap5\n        /* \"#utility.yul\":1413:1415   */\n      0x20\n        /* \"#utility.yul\":1398:1416   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1385:1417   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1108:1423   */\n      jump\t// out\n        /* \"#utility.yul\":1802:2049   */\n    tag_75:\n        /* \"#utility.yul\":1861:1867   */\n      0x00\n        /* \"#utility.yul\":1914:1916   */\n      0x20\n        /* \"#utility.yul\":1902:1911   */\n      dup3\n        /* \"#utility.yul\":1893:1900   */\n      dup5\n        /* \"#utility.yul\":1889:1912   */\n      sub\n        /* \"#utility.yul\":1885:1917   */\n      slt\n        /* \"#utility.yul\":1882:1934   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":1930:1931   */\n      0x00\n        /* \"#utility.yul\":1927:1928   */\n      dup1\n        /* \"#utility.yul\":1920:1932   */\n      revert\n        /* \"#utility.yul\":1882:1934   */\n    tag_441:\n        /* \"#utility.yul\":1969:1978   */\n      dup2\n        /* \"#utility.yul\":1956:1979   */\n      calldataload\n        /* \"#utility.yul\":1988:2019   */\n      tag_442\n        /* \"#utility.yul\":2013:2018   */\n      dup2\n        /* \"#utility.yul\":1988:2019   */\n      tag_425\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2038:2043   */\n      swap4\n        /* \"#utility.yul\":1802:2049   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2054:2510   */\n    tag_80:\n        /* \"#utility.yul\":2131:2137   */\n      0x00\n        /* \"#utility.yul\":2139:2145   */\n      dup1\n        /* \"#utility.yul\":2147:2153   */\n      0x00\n        /* \"#utility.yul\":2200:2202   */\n      0x60\n        /* \"#utility.yul\":2188:2197   */\n      dup5\n        /* \"#utility.yul\":2179:2186   */\n      dup7\n        /* \"#utility.yul\":2175:2198   */\n      sub\n        /* \"#utility.yul\":2171:2203   */\n      slt\n        /* \"#utility.yul\":2168:2220   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":2216:2217   */\n      0x00\n        /* \"#utility.yul\":2213:2214   */\n      dup1\n        /* \"#utility.yul\":2206:2218   */\n      revert\n        /* \"#utility.yul\":2168:2220   */\n    tag_444:\n        /* \"#utility.yul\":2255:2264   */\n      dup4\n        /* \"#utility.yul\":2242:2265   */\n      calldataload\n        /* \"#utility.yul\":2274:2305   */\n      tag_445\n        /* \"#utility.yul\":2299:2304   */\n      dup2\n        /* \"#utility.yul\":2274:2305   */\n      tag_425\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":2324:2329   */\n      swap3\n      pop\n        /* \"#utility.yul\":2381:2383   */\n      0x20\n        /* \"#utility.yul\":2366:2384   */\n      dup5\n      add\n        /* \"#utility.yul\":2353:2385   */\n      calldataload\n        /* \"#utility.yul\":2394:2427   */\n      tag_446\n        /* \"#utility.yul\":2353:2385   */\n      dup2\n        /* \"#utility.yul\":2394:2427   */\n      tag_425\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":2054:2510   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2446:2453   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2500:2502   */\n      0x40\n        /* \"#utility.yul\":2485:2503   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2472:2504   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2054:2510   */\n      jump\t// out\n        /* \"#utility.yul\":2704:2884   */\n    tag_105:\n        /* \"#utility.yul\":2763:2769   */\n      0x00\n        /* \"#utility.yul\":2816:2818   */\n      0x20\n        /* \"#utility.yul\":2804:2813   */\n      dup3\n        /* \"#utility.yul\":2795:2802   */\n      dup5\n        /* \"#utility.yul\":2791:2814   */\n      sub\n        /* \"#utility.yul\":2787:2819   */\n      slt\n        /* \"#utility.yul\":2784:2836   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":2832:2833   */\n      0x00\n        /* \"#utility.yul\":2829:2830   */\n      dup1\n        /* \"#utility.yul\":2822:2834   */\n      revert\n        /* \"#utility.yul\":2784:2836   */\n    tag_449:\n      pop\n        /* \"#utility.yul\":2855:2878   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2704:2884   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3556:3944   */\n    tag_201:\n        /* \"#utility.yul\":3624:3630   */\n      0x00\n        /* \"#utility.yul\":3632:3638   */\n      dup1\n        /* \"#utility.yul\":3685:3687   */\n      0x40\n        /* \"#utility.yul\":3673:3682   */\n      dup4\n        /* \"#utility.yul\":3664:3671   */\n      dup6\n        /* \"#utility.yul\":3660:3683   */\n      sub\n        /* \"#utility.yul\":3656:3688   */\n      slt\n        /* \"#utility.yul\":3653:3705   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":3701:3702   */\n      0x00\n        /* \"#utility.yul\":3698:3699   */\n      dup1\n        /* \"#utility.yul\":3691:3703   */\n      revert\n        /* \"#utility.yul\":3653:3705   */\n    tag_454:\n        /* \"#utility.yul\":3740:3749   */\n      dup3\n        /* \"#utility.yul\":3727:3750   */\n      calldataload\n        /* \"#utility.yul\":3759:3790   */\n      tag_455\n        /* \"#utility.yul\":3784:3789   */\n      dup2\n        /* \"#utility.yul\":3759:3790   */\n      tag_425\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":3809:3814   */\n      swap2\n      pop\n        /* \"#utility.yul\":3866:3868   */\n      0x20\n        /* \"#utility.yul\":3851:3869   */\n      dup4\n      add\n        /* \"#utility.yul\":3838:3870   */\n      calldataload\n        /* \"#utility.yul\":3879:3912   */\n      tag_456\n        /* \"#utility.yul\":3838:3870   */\n      dup2\n        /* \"#utility.yul\":3879:3912   */\n      tag_425\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3931:3938   */\n      dup1\n        /* \"#utility.yul\":3921:3938   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3556:3944   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3949:4329   */\n    tag_222:\n        /* \"#utility.yul\":4028:4029   */\n      0x01\n        /* \"#utility.yul\":4024:4036   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4071:4083   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4092:4153   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":4146:4150   */\n      0x7f\n        /* \"#utility.yul\":4138:4144   */\n      dup3\n        /* \"#utility.yul\":4134:4151   */\n      and\n        /* \"#utility.yul\":4124:4151   */\n      swap2\n      pop\n        /* \"#utility.yul\":4092:4153   */\n    tag_458:\n        /* \"#utility.yul\":4199:4201   */\n      0x20\n        /* \"#utility.yul\":4191:4197   */\n      dup3\n        /* \"#utility.yul\":4188:4202   */\n      lt\n        /* \"#utility.yul\":4168:4186   */\n      dup2\n        /* \"#utility.yul\":4165:4203   */\n      sub\n        /* \"#utility.yul\":4162:4323   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":4245:4255   */\n      0x4e487b71\n        /* \"#utility.yul\":4240:4243   */\n      0xe0\n        /* \"#utility.yul\":4236:4256   */\n      shl\n        /* \"#utility.yul\":4233:4234   */\n      0x00\n        /* \"#utility.yul\":4226:4257   */\n      mstore\n        /* \"#utility.yul\":4280:4284   */\n      0x22\n        /* \"#utility.yul\":4277:4278   */\n      0x04\n        /* \"#utility.yul\":4270:4285   */\n      mstore\n        /* \"#utility.yul\":4308:4312   */\n      0x24\n        /* \"#utility.yul\":4305:4306   */\n      0x00\n        /* \"#utility.yul\":4298:4313   */\n      revert\n        /* \"#utility.yul\":4162:4323   */\n    tag_459:\n      pop\n        /* \"#utility.yul\":3949:4329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4870   */\n    tag_426:\n        /* \"#utility.yul\":4804:4814   */\n      0x4e487b71\n        /* \"#utility.yul\":4799:4802   */\n      0xe0\n        /* \"#utility.yul\":4795:4815   */\n      shl\n        /* \"#utility.yul\":4792:4793   */\n      0x00\n        /* \"#utility.yul\":4785:4816   */\n      mstore\n        /* \"#utility.yul\":4835:4839   */\n      0x11\n        /* \"#utility.yul\":4832:4833   */\n      0x04\n        /* \"#utility.yul\":4825:4840   */\n      mstore\n        /* \"#utility.yul\":4859:4863   */\n      0x24\n        /* \"#utility.yul\":4856:4857   */\n      0x00\n        /* \"#utility.yul\":4849:4864   */\n      revert\n        /* \"#utility.yul\":4875:5003   */\n    tag_248:\n        /* \"#utility.yul\":4942:4951   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4963:4974   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4960:4997   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":4977:4995   */\n      tag_227\n      tag_426\n      jump\t// in\n        /* \"#utility.yul\":5008:5133   */\n    tag_255:\n        /* \"#utility.yul\":5073:5082   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5094:5104   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5091:5127   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":5107:5125   */\n      tag_227\n      tag_426\n      jump\t// in\n        /* \"#utility.yul\":5425:5702   */\n    tag_272:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5545:5547   */\n      0x20\n        /* \"#utility.yul\":5533:5542   */\n      dup3\n        /* \"#utility.yul\":5524:5531   */\n      dup5\n        /* \"#utility.yul\":5520:5543   */\n      sub\n        /* \"#utility.yul\":5516:5548   */\n      slt\n        /* \"#utility.yul\":5513:5565   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":5561:5562   */\n      0x00\n        /* \"#utility.yul\":5558:5559   */\n      dup1\n        /* \"#utility.yul\":5551:5563   */\n      revert\n        /* \"#utility.yul\":5513:5565   */\n    tag_470:\n        /* \"#utility.yul\":5593:5602   */\n      dup2\n        /* \"#utility.yul\":5587:5603   */\n      mload\n        /* \"#utility.yul\":5646:5651   */\n      dup1\n        /* \"#utility.yul\":5639:5652   */\n      iszero\n        /* \"#utility.yul\":5632:5653   */\n      iszero\n        /* \"#utility.yul\":5625:5630   */\n      dup2\n        /* \"#utility.yul\":5622:5654   */\n      eq\n        /* \"#utility.yul\":5612:5672   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":5668:5669   */\n      0x00\n        /* \"#utility.yul\":5665:5666   */\n      dup1\n        /* \"#utility.yul\":5658:5670   */\n      revert\n        /* \"#utility.yul\":6888:7139   */\n    tag_313:\n        /* \"#utility.yul\":6958:6964   */\n      0x00\n        /* \"#utility.yul\":7011:7013   */\n      0x20\n        /* \"#utility.yul\":6999:7008   */\n      dup3\n        /* \"#utility.yul\":6990:6997   */\n      dup5\n        /* \"#utility.yul\":6986:7009   */\n      sub\n        /* \"#utility.yul\":6982:7014   */\n      slt\n        /* \"#utility.yul\":6979:7031   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":7027:7028   */\n      0x00\n        /* \"#utility.yul\":7024:7025   */\n      dup1\n        /* \"#utility.yul\":7017:7029   */\n      revert\n        /* \"#utility.yul\":6979:7031   */\n    tag_476:\n        /* \"#utility.yul\":7059:7068   */\n      dup2\n        /* \"#utility.yul\":7053:7069   */\n      mload\n        /* \"#utility.yul\":7078:7109   */\n      tag_442\n        /* \"#utility.yul\":7103:7108   */\n      dup2\n        /* \"#utility.yul\":7078:7109   */\n      tag_425\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220868b0efdc92cfa635718fb4a81cabd64e5cec9421dee5d77c7f2a9e1a439866764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1302": {
									"entryPoint": null,
									"id": 1302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_222": {
									"entryPoint": null,
									"id": 222,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_763": {
									"entryPoint": null,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_752": {
									"entryPoint": 1311,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_581": {
									"entryPoint": 1113,
									"id": 581,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_879": {
									"entryPoint": 1027,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1031,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOf_276": {
									"entryPoint": null,
									"id": 276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1401,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4495:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "192:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "223:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "244:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "251:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "256:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "247:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "247:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "237:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "319:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "309:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "309:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "309:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "212:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "205:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:9:7"
															},
															"nodeType": "YulIf",
															"src": "202:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "352:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "355:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "348:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "348:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "343:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "177:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "180:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "186:1:7",
														"type": ""
													}
												],
												"src": "146:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "417:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "427:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "439:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "442:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "427:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "470:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "470:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "470:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "459:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "465:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "456:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:11:7"
															},
															"nodeType": "YulIf",
															"src": "453:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "399:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "402:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "408:4:7",
														"type": ""
													}
												],
												"src": "368:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "533:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "557:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "562:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "553:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "553:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "543:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "590:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "593:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "583:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "583:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "614:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "617:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "607:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "501:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "688:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "698:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "715:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "708:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "729:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "759:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "765:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "755:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "733:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "806:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "808:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "822:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "818:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "818:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "808:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "786:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "779:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "779:26:7"
															},
															"nodeType": "YulIf",
															"src": "776:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "896:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "917:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "924:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "929:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "920:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "920:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "910:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "910:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "910:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "961:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "964:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "954:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "954:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "954:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "992:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "982:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "982:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "982:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "852:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "875:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "883:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "872:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "872:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "849:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:38:7"
															},
															"nodeType": "YulIf",
															"src": "846:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "668:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "677:6:7",
														"type": ""
													}
												],
												"src": "633:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1074:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1091:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1094:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1084:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1107:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1125:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1128:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1115:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1107:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1057:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1065:4:7",
														"type": ""
													}
												],
												"src": "1018:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1225:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1272:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1282:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1276:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1303:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1307:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1296:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1296:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1296:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1326:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1348:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1352:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1338:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1338:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1330:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1370:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1393:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1403:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1410:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1422:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1406:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1406:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1399:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1399:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1389:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1374:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1464:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1466:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "1481:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "1466:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "1446:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1443:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1443:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "1440:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1500:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1514:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1524:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1531:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1536:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1527:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1527:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1520:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1520:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1510:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1510:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1504:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1554:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1567:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1558:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1652:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1661:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1668:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1654:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1654:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1654:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1602:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1609:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1599:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1599:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1613:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1615:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1628:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1635:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1624:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1624:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1615:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1595:3:7",
																			"statements": []
																		},
																		"src": "1591:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1241:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1238:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:11:7"
															},
															"nodeType": "YulIf",
															"src": "1235:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1197:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1204:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1209:10:7",
														"type": ""
													}
												],
												"src": "1144:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1779:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1789:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1804:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1822:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1825:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1818:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1818:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1835:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1831:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1831:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1814:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1814:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1810:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1810:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1800:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1800:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1846:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1849:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1842:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1797:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1789:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1756:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1762:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1770:4:7",
														"type": ""
													}
												],
												"src": "1694:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1961:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1971:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1991:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1985:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1975:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2038:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2040:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2040:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2040:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2010:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2026:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2030:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2022:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2022:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2007:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2007:30:7"
															},
															"nodeType": "YulIf",
															"src": "2004:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2113:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "2119:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2159:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2069:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2069:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2175:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2192:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2179:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2202:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2221:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2206:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2234:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2247:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2234:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2304:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2318:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2337:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2349:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2345:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2345:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2333:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2333:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2322:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2366:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2410:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2380:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2380:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2370:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2428:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2432:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2515:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2540:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2558:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2563:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2554:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2554:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2548:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2548:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2533:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2533:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2533:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2592:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2606:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2614:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2602:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2602:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2592:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2633:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2650:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2661:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2646:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2646:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2633:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2462:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2465:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2459:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2459:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2474:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2476:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "2485:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2488:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2481:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2481:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2476:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2455:3:7",
																					"statements": []
																				},
																				"src": "2451:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2735:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2753:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2780:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2785:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2776:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2776:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2770:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2770:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2757:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2820:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2832:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2859:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2862:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2855:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2855:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2871:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2851:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2851:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2881:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2877:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2877:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2847:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2847:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2843:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2843:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2828:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2828:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2813:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2813:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2813:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2706:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2715:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2703:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2703:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "2700:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2921:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2935:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2938:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2931:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2931:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2947:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2927:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2927:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2914:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2914:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2914:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2297:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2302:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2977:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2991:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3004:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2995:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3040:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3058:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3077:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3082:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3073:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3073:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3067:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3067:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3058:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3021:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3018:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3127:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3186:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3193:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3133:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3133:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3120:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3120:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3120:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2969:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2277:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2285:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2274:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "2267:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1946:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1952:3:7",
														"type": ""
													}
												],
												"src": "1865:1352:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3303:209:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3349:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3358:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3361:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3351:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3351:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3351:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3324:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3333:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3320:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3316:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:32:7"
															},
															"nodeType": "YulIf",
															"src": "3313:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3374:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3393:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3387:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3378:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3466:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3475:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3478:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3468:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3468:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3468:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3425:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3436:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3451:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3456:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3447:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3447:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3460:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "3443:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3443:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3432:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3432:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3422:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3422:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3415:50:7"
															},
															"nodeType": "YulIf",
															"src": "3412:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3491:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3501:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3491:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3269:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3280:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3292:6:7",
														"type": ""
													}
												],
												"src": "3222:290:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3646:175:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3656:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3668:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3679:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3664:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3664:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3656:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3691:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3709:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3714:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3718:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3701:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3695:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3736:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3751:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3759:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3729:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3729:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3783:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3794:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3779:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3779:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3811:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3799:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3772:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3772:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3607:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3618:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3626:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3637:4:7",
														"type": ""
													}
												],
												"src": "3517:304:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4000:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4017:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4028:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4010:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4010:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4010:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4051:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4062:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4047:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4047:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4067:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4040:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4040:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4040:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4090:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4101:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4086:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4086:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4106:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4079:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4079:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4079:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4149:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4161:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4172:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4157:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4157:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4149:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3977:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3991:4:7",
														"type": ""
													}
												],
												"src": "3826:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4234:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4244:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4255:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4258:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4251:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4251:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4244:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4283:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4285:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4285:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4285:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4275:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4278:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4272:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:10:7"
															},
															"nodeType": "YulIf",
															"src": "4269:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4217:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4220:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4226:3:7",
														"type": ""
													}
												],
												"src": "4186:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4417:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4427:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4439:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4450:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4427:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4469:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4480:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4462:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4462:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4462:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4386:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4397:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4408:4:7",
														"type": ""
													}
												],
												"src": "4316:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526103e86009546200001691906200053a565b600755600880546001600160a01b0319167376e98f575e5b6382ff3bc9e988f9920984f2a57617905561dead60009081526020527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf835462000085906c0e063191caf768f40cc2bc00006200055d565b600955600a80546001600160a01b0319167376e98f575e5b6382ff3bc9e988f9920984f2a576179055348015620000bb57600080fd5b506040805180820182526004808252631ba6a4a760e11b6020808401829052845180860190955291845290830152906003620000f883826200061d565b5060046200010782826200061d565b505050620001246200011e6200040360201b60201c565b62000407565b6200013d336c0e063191caf768f40cc2bc000062000459565b600c80546001600160a01b031916734cf76043b3f97ba06917cbd90f9e3a2aac1b306e9081179091556040805163c45a015560e01b81529051829163c45a01559160048083019260209291908290030181865afa158015620001a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c99190620006e9565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000217573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023d9190620006e9565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156200028b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b19190620006e9565b600b80546001600160a01b039283166001600160a01b031991821617909155600d8054909116734cf76043b3f97ba06917cbd90f9e3a2aac1b306e17905533600081815260106020526040808220805460ff1990811660019081179092557f9a8f3285986f133c5ab38a828780fbebff64111ad29b63b7783e7e3874351ca680548216831790557f9e93e1db4a1f807cc22b2aecf4deeb0bf5745f1ecb319e87c68c5624c0fa6b698054821683179055600c54909516835281832080549095161790935591519091600080516020620020aa83398151915291a26040517376e98f575e5b6382ff3bc9e988f9920984f2a57690600080516020620020aa83398151915290600090a260405161dead90600080516020620020aa83398151915290600090a2600c546040516001600160a01b0390911690600080516020620020aa83398151915290600090a25062000731565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620004b45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620004c891906200071b565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052601160045260246000fd5b6000826200055857634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111562000573576200057362000524565b92915050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620005a457607f821691505b602082108103620005c557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200051f57600081815260208120601f850160051c81016020861015620005f45750805b601f850160051c820191505b81811015620006155782815560010162000600565b505050505050565b81516001600160401b0381111562000639576200063962000579565b62000651816200064a84546200058f565b84620005cb565b602080601f831160018114620006895760008415620006705750858301515b600019600386901b1c1916600185901b17855562000615565b600085815260208120601f198616915b82811015620006ba5788860151825594840194600190910190840162000699565b5085821015620006d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620006fc57600080fd5b81516001600160a01b03811681146200071457600080fd5b9392505050565b8082018082111562000573576200057362000524565b61196980620007416000396000f3fe60806040526004361061021e5760003560e01c80638da5cb5b11610123578063c816841b116100ab578063dd62ed3e1161006f578063dd62ed3e14610696578063e9451f5f146106b6578063eafb5a3c146106cb578063f2fde38b146106eb578063fdf3dd9c1461070b57600080fd5b8063c816841b146105d5578063c831f606146105f5578063d61782d714610622578063d89135cd14610642578063dc9d75b01461068157600080fd5b8063a01c3483116100f2578063a01c34831461053a578063a457c2d714610550578063a9059cbb14610570578063b2bdfa7b14610590578063c31c9c07146105b057600080fd5b80638da5cb5b146104dc5780639358928b146104fa57806395d89b411461050f578063984ae06e1461052457600080fd5b80633fd8b02f116101a657806367e00e881161017557806367e00e881461040957806370a0823114610439578063715018a61461046f578063735de9f7146104845780638cd4426d146104bc57600080fd5b80633fd8b02f146103be57806342966c68146103d3578063469132ce146103f357806354de7bee146102fb57600080fd5b8063227b453f116101ed578063227b453f1461031057806323b872dd146103325780633078381c14610352578063313ce56714610382578063395093511461039e57600080fd5b806306fdde0314610281578063095ea7b3146102ac57806318160ddd146102dc5780631dc36945146102fb57600080fd5b3661027c5760405162461bcd60e51b8152602060048201526024808201527f44697265637420455448207472616e736665727320617265206e6f7420616c6c6044820152631bddd95960e21b60648201526084015b60405180910390fd5b600080fd5b34801561028d57600080fd5b5061029661072b565b6040516102a39190611738565b60405180910390f35b3480156102b857600080fd5b506102cc6102c736600461179b565b6107bd565b60405190151581526020016102a3565b3480156102e857600080fd5b506002545b6040519081526020016102a3565b34801561030757600080fd5b506102ed600081565b34801561031c57600080fd5b5061033061032b3660046117c7565b6107d7565b005b34801561033e57600080fd5b506102cc61034d3660046117eb565b610800565b34801561035e57600080fd5b506102cc61036d3660046117c7565b60106020526000908152604090205460ff1681565b34801561038e57600080fd5b50604051601281526020016102a3565b3480156103aa57600080fd5b506102cc6103b936600461179b565b61089b565b3480156103ca57600080fd5b506102ed603c81565b3480156103df57600080fd5b506103306103ee36600461182c565b6108b8565b3480156103ff57600080fd5b506102ed60075481565b34801561041557600080fd5b506102cc6104243660046117c7565b60116020526000908152604090205460ff1681565b34801561044557600080fd5b506102ed6104543660046117c7565b6001600160a01b031660009081526020819052604090205490565b34801561047b57600080fd5b506103306108c5565b34801561049057600080fd5b50600c546104a4906001600160a01b031681565b6040516001600160a01b0390911681526020016102a3565b3480156104c857600080fd5b506103306104d736600461179b565b610917565b3480156104e857600080fd5b506005546001600160a01b03166104a4565b34801561050657600080fd5b506102ed61099b565b34801561051b57600080fd5b506102966109e6565b34801561053057600080fd5b506102ed60095481565b34801561054657600080fd5b506104a461dead81565b34801561055c57600080fd5b506102cc61056b36600461179b565b6109f5565b34801561057c57600080fd5b506102cc61058b36600461179b565b610a70565b34801561059c57600080fd5b506006546104a4906001600160a01b031681565b3480156105bc57600080fd5b506013546104a49061010090046001600160a01b031681565b3480156105e157600080fd5b50600b546104a4906001600160a01b031681565b34801561060157600080fd5b506102ed6106103660046117c7565b600f6020526000908152604090205481565b34801561062e57600080fd5b506008546104a4906001600160a01b031681565b34801561064e57600080fd5b5061dead60009081526020527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83546102ed565b34801561068d57600080fd5b506102ed606481565b3480156106a257600080fd5b506102ed6106b1366004611845565b610af7565b3480156106c257600080fd5b506102ed600181565b3480156106d757600080fd5b506103306106e63660046117c7565b610b22565b3480156106f757600080fd5b506103306107063660046117c7565b610d67565b34801561071757600080fd5b506103306107263660046117c7565b610ddd565b60606003805461073a9061187e565b80601f01602080910402602001604051908101604052809291908181526020018280546107669061187e565b80156107b35780601f10610788576101008083540402835291602001916107b3565b820191906000526020600020905b81548152906001019060200180831161079657829003601f168201915b5050505050905090565b6000336107cb818585610e09565b60019150505b92915050565b6107df610f2d565b6001600160a01b03166000908152601060205260409020805460ff19169055565b600061080d848484610f89565b60006108198533610af7565b90508281101561087c5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610273565b610890853361088b86856118ce565b610e09565b506001949350505050565b6000336107cb8185856108ae8383610af7565b61088b91906118e1565b6108c2338261140f565b50565b6108cd610f2d565b6005546040516001600160a01b03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a2600680546001600160a01b0319169055565b61091f610f2d565b60085460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af1158015610972573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099691906118f4565b505050565b61dead600090815260208190527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83546109e1906c0e063191caf768f40cc2bc00006118ce565b905090565b60606004805461073a9061187e565b60003381610a038286610af7565b905083811015610a635760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610273565b6108908286868403610e09565b6000333b1580610a8a5750600d546001600160a01b031633145b80610a9f5750600b546001600160a01b031633145b610aeb5760405162461bcd60e51b815260206004820181905260248201527f426f747320617265206e6f7420616c6c6f77656420746f206275792f73656c6c6044820152606401610273565b336107cb818585610f89565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b2a610f2d565b6001600160a01b038116610b965760405162461bcd60e51b815260206004820152602d60248201527f4e657720726f7574657220616464726573732063616e6e6f742062652074686560448201526c207a65726f206164647265737360981b6064820152608401610273565b60008190506000816001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bff9190611916565b6001600160a01b031663c9c6539630846001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611916565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190611916565b90506001600160a01b038116610d2e5760405162461bcd60e51b815260206004820152601260248201527113995dc81c185a5c881b9bdd08199bdd5b9960721b6044820152606401610273565b600c80546001600160a01b0319166001600160a01b03938416179055166000908152601160205260409020805460ff1916600117905550565b610d6f610f2d565b6001600160a01b038116610dd45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610273565b6108c281611541565b610de5610f2d565b6001600160a01b03166000908152601060205260409020805460ff19166001179055565b6001600160a01b038316610e6b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610273565b6001600160a01b038216610ecc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610273565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b03163314610f875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610273565b565b323314610fe25760405162461bcd60e51b815260206004820152602160248201527f436f6e74726163747320617265206e6f7420616c6c6f77656420746f2073656c6044820152601b60fa1b6064820152608401610273565b600081116110445760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610273565b80611064846001600160a01b031660009081526020819052604090205490565b10156110a95760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610273565b61deac196001600160a01b038316016110d45780600960008282546110ce91906118ce565b90915550505b600a546001600160a01b0384811691161461116e576007548161110c846001600160a01b031660009081526020819052604090205490565b61111691906118e1565b111561116e5760405162461bcd60e51b815260206004820152602160248201527f45786365656473206d6178696d756d20746f6b656e73207065722077616c6c656044820152601d60fa1b6064820152608401610273565b6001600160a01b03831660009081526010602052604090205460ff161580156111a557506005546001600160a01b03848116911614155b80156111bf5750600c546001600160a01b03848116911614155b1561122c576001600160a01b0383166000908152600f602052604090205442101561122c5760405162461bcd60e51b815260206004820152601960248201527f54696d65206c6f636b206973207374696c6c20616374697665000000000000006044820152606401610273565b6001600160a01b03821660009081526010602052604090205460ff1615801561126357506005546001600160a01b03838116911614155b801561127d5750600c546001600160a01b03838116911614155b15611329576001600160a01b0382166000908152600f602052604090205415806112bf57506001600160a01b0382166000908152600f60205260409020544210155b6113045760405162461bcd60e51b8152602060048201526016602482015275526563697069656e7420696e2074696d65206c6f636b60501b6044820152606401610273565b61130f603c426118e1565b6001600160a01b0383166000908152600f60205260409020555b600b546001600160a01b0383811691161480156113545750600c546001600160a01b03848116911614155b15611404576001600160a01b0383166000908152600f6020526040902054156113df576001600160a01b0383166000908152600f60205260409020544210156113df5760405162461bcd60e51b815260206004820152601e60248201527f53656c6c2074696d65206c6f636b206973207374696c6c2061637469766500006044820152606401610273565b6113ea603c426118e1565b6001600160a01b0384166000908152600f60205260409020555b610996838383611593565b6001600160a01b03821661146f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610273565b6001600160a01b038216600090815260208190526040902054818110156114e35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610273565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166115f75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610273565b6001600160a01b0382166116595760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610273565b6001600160a01b038316600090815260208190526040902054818110156116d15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610273565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050565b600060208083528351808285015260005b8181101561176557858101830151858201604001528201611749565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146108c257600080fd5b600080604083850312156117ae57600080fd5b82356117b981611786565b946020939093013593505050565b6000602082840312156117d957600080fd5b81356117e481611786565b9392505050565b60008060006060848603121561180057600080fd5b833561180b81611786565b9250602084013561181b81611786565b929592945050506040919091013590565b60006020828403121561183e57600080fd5b5035919050565b6000806040838503121561185857600080fd5b823561186381611786565b9150602083013561187381611786565b809150509250929050565b600181811c9082168061189257607f821691505b6020821081036118b257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156107d1576107d16118b8565b808201808211156107d1576107d16118b8565b60006020828403121561190657600080fd5b815180151581146117e457600080fd5b60006020828403121561192857600080fd5b81516117e48161178656fea2646970667358221220868b0efdc92cfa635718fb4a81cabd64e5cec9421dee5d77c7f2a9e1a439866764736f6c63430008110033c93bc17a700271bf59796cbfa01b47b8b95654209793470e3cdbadf87465a843",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x3E8 PUSH1 0x9 SLOAD PUSH3 0x16 SWAP2 SWAP1 PUSH3 0x53A JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x76E98F575E5B6382FF3BC9E988F9920984F2A576 OR SWAP1 SSTORE PUSH2 0xDEAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SLOAD PUSH3 0x85 SWAP1 PUSH13 0xE063191CAF768F40CC2BC0000 PUSH3 0x55D JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x76E98F575E5B6382FF3BC9E988F9920984F2A576 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x1BA6A4A7 PUSH1 0xE1 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP1 PUSH1 0x3 PUSH3 0xF8 DUP4 DUP3 PUSH3 0x61D JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x107 DUP3 DUP3 PUSH3 0x61D JUMP JUMPDEST POP POP POP PUSH3 0x124 PUSH3 0x11E PUSH3 0x403 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x407 JUMP JUMPDEST PUSH3 0x13D CALLER PUSH13 0xE063191CAF768F40CC2BC0000 PUSH3 0x459 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x4CF76043B3F97BA06917CBD90F9E3A2AAC1B306E SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1C9 SWAP2 SWAP1 PUSH3 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x217 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x23D SWAP2 SWAP1 PUSH3 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x28B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2B1 SWAP2 SWAP1 PUSH3 0x6E9 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x4CF76043B3F97BA06917CBD90F9E3A2AAC1B306E OR SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH32 0x9A8F3285986F133C5AB38A828780FBEBFF64111AD29B63B7783E7E3874351CA6 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0x9E93E1DB4A1F807CC22B2AECF4DEEB0BF5745F1ECB319E87C68C5624C0FA6B69 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0xC SLOAD SWAP1 SWAP6 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x20AA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG2 PUSH1 0x40 MLOAD PUSH20 0x76E98F575E5B6382FF3BC9E988F9920984F2A576 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x20AA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH2 0xDEAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x20AA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x20AA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH3 0x731 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x4C8 SWAP2 SWAP1 PUSH3 0x71B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x558 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0x573 JUMPI PUSH3 0x573 PUSH3 0x524 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x5A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x5C5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x51F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x5F4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x615 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x600 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x639 JUMPI PUSH3 0x639 PUSH3 0x579 JUMP JUMPDEST PUSH3 0x651 DUP2 PUSH3 0x64A DUP5 SLOAD PUSH3 0x58F JUMP JUMPDEST DUP5 PUSH3 0x5CB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x689 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x670 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x615 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6BA JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x699 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x6D9 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x573 JUMPI PUSH3 0x573 PUSH3 0x524 JUMP JUMPDEST PUSH2 0x1969 DUP1 PUSH3 0x741 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0xE9451F5F EQ PUSH2 0x6B6 JUMPI DUP1 PUSH4 0xEAFB5A3C EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xFDF3DD9C EQ PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC816841B EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xC831F606 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xD61782D7 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xDC9D75B0 EQ PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA01C3483 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA01C3483 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x590 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x984AE06E EQ PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD8B02F GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x67E00E88 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x67E00E88 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x8CD4426D EQ PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x469132CE EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x54DE7BEE EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x227B453F GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x227B453F EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x3078381C EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x1DC36945 EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x44697265637420455448207472616E736665727320617265206E6F7420616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1BDDD959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x17EB JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x3C DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x182C JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x8C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x4A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x4D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x917 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x99B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x9E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A4 PUSH2 0xDEAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x56B CALLDATASIZE PUSH1 0x4 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x58B CALLDATASIZE PUSH1 0x4 PUSH2 0x179B JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x4A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x4A4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x4A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x610 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x4A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDEAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SLOAD PUSH2 0x2ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x64 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x6B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0xB22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x706 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x726 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x73A SWAP1 PUSH2 0x187E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x766 SWAP1 PUSH2 0x187E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x788 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x796 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7CB DUP2 DUP6 DUP6 PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DF PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80D DUP5 DUP5 DUP5 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP6 CALLER PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x890 DUP6 CALLER PUSH2 0x88B DUP7 DUP6 PUSH2 0x18CE JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7CB DUP2 DUP6 DUP6 PUSH2 0x8AE DUP4 DUP4 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x88B SWAP2 SWAP1 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x8C2 CALLER DUP3 PUSH2 0x140F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8CD PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x91F PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x972 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x996 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDEAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SLOAD PUSH2 0x9E1 SWAP1 PUSH13 0xE063191CAF768F40CC2BC0000 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x73A SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xA03 DUP3 DUP7 PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x890 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x0 CALLER EXTCODESIZE ISZERO DUP1 PUSH2 0xA8A JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST DUP1 PUSH2 0xA9F JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F747320617265206E6F7420616C6C6F77656420746F206275792F73656C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST CALLER PUSH2 0x7CB DUP2 DUP6 DUP6 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2A PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720726F7574657220616464726573732063616E6E6F7420626520746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13995DC81C185A5C881B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SSTORE AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD6F PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x8C2 DUP2 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0xDE5 PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xECC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726163747320617265206E6F7420616C6C6F77656420746F2073656C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST DUP1 PUSH2 0x1064 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x10A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0xDEAC NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADD PUSH2 0x10D4 JUMPI DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x18CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x116E JUMPI PUSH1 0x7 SLOAD DUP2 PUSH2 0x110C DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1116 SWAP2 SWAP1 PUSH2 0x18E1 JUMP JUMPDEST GT ISZERO PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178696D756D20746F6B656E73207065722077616C6C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x11A5 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11BF JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x122C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54696D65206C6F636B206973207374696C6C2061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1263 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x127D JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1329 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 PUSH2 0x12BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO JUMPDEST PUSH2 0x1304 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x526563697069656E7420696E2074696D65206C6F636B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x130F PUSH1 0x3C TIMESTAMP PUSH2 0x18E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1354 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1404 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x13DF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C2074696D65206C6F636B206973207374696C6C206163746976650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x13EA PUSH1 0x3C TIMESTAMP PUSH2 0x18E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x996 DUP4 DUP4 DUP4 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x146F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x14E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x16D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1765 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1749 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17B9 DUP2 PUSH2 0x1786 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17E4 DUP2 PUSH2 0x1786 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x180B DUP2 PUSH2 0x1786 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x181B DUP2 PUSH2 0x1786 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1863 DUP2 PUSH2 0x1786 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1873 DUP2 PUSH2 0x1786 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1892 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7D1 PUSH2 0x18B8 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7D1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17E4 DUP2 PUSH2 0x1786 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DUP12 0xE REVERT 0xC9 0x2C STATICCALL PUSH4 0x5718FB4A DUP2 0xCA 0xBD PUSH5 0xE5CEC9421D 0xEE 0x5D PUSH24 0xC7F2A9E1A439866764736F6C63430008110033C93BC17A70 MUL PUSH18 0xBF59796CBFA01B47B8B95654209793470E3C 0xDB 0xAD 0xF8 PUSH21 0x65A843000000000000000000000000000000000000 ",
							"sourceMap": "2020:8829:6:-:0;;;2796:4;2775:18;;:25;;;;:::i;:::-;2739:61;;2841:98;;;-1:-1:-1;;;;;;2841:98:6;2896:42;2841:98;;;2984:42;-1:-1:-1;3519:18:2;;;;;;;3069:37:6;;2471:26;3069:37;:::i;:::-;3033:73;;3113:71;;;-1:-1:-1;;;;;;3113:71:6;3142:42;3113:71;;;4496:1148;;;;;;;;;-1:-1:-1;1980:113:2;;;;;;;;;;;;-1:-1:-1;;;1980:113:2;;;;;;;;;;;;;;;;;;;;;;;2046:5;:13;1980:113;2046:5;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;4545:31:6::1;4551:10;2471:26;4545:5;:31::i;:::-;4740:13;:30:::0;;-1:-1:-1;;;;;;4740:30:6::1;4638:42;4740:30:::0;;::::1;::::0;;;4809:24:::1;::::0;;-1:-1:-1;;;4809:24:6;;;;4638:42;;4809:22:::1;::::0;:24:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;4638:42;4809:24:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4791:60:6::1;;4860:4;4867:14;-1:-1:-1::0;;;;;4867:19:6::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4791:98;::::0;-1:-1:-1;;;;;;4791:98:6::1;::::0;;;;;;-1:-1:-1;;;;;3747:15:7;;;4791:98:6::1;::::0;::::1;3729:34:7::0;3799:15;;3779:18;;;3772:43;3664:18;;4791:98:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4777:11;:112:::0;;-1:-1:-1;;;;;4777:112:6;;::::1;-1:-1:-1::0;;;;;;4777:112:6;;::::1;;::::0;;;4897:20:::1;:65:::0;;;;::::1;4920:42;4897:65;::::0;;5132:10:::1;4777:11;5109:34:::0;;;:22:::1;:34;::::0;;;;;:41;;-1:-1:-1;;5109:41:6;;::::1;4777:112:::0;5109:41;;::::1;::::0;;;5157:66;:73;;;::::1;::::0;::::1;::::0;;5237:66;:73;;;::::1;::::0;::::1;::::0;;5349:13:::1;::::0;;;::::1;5318:46:::0;;;;;:53;;;;::::1;;::::0;;;5385:34;;5132:10;;-1:-1:-1;;;;;;;;;;;5385:34:6;::::1;5431:66;::::0;5454:42:::1;::::0;-1:-1:-1;;;;;;;;;;;5431:66:6;;;::::1;5509;::::0;5532:42:::1;::::0;-1:-1:-1;;;;;;;;;;;5509:66:6;;;::::1;5619:13;::::0;5588:46:::1;::::0;-1:-1:-1;;;;;5619:13:6;;::::1;::::0;-1:-1:-1;;;;;;;;;;;5588:46:6;5619:13:::1;::::0;5588:46:::1;4532:1112;2020:8829:::0;;640:96:5;719:10;;640:96::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8520:535:2:-;-1:-1:-1;;;;;8603:21:2;;8595:65;;;;-1:-1:-1;;;8595:65:2;;4028:2:7;8595:65:2;;;4010:21:7;4067:2;4047:18;;;4040:30;4106:33;4086:18;;;4079:61;4157:18;;8595:65:2;;;;;;;;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;4462:25:7;;;8952:37:2;;4435:18:7;8952:37:2;;;;;;;8520:535;;:::o;12073:91::-;;;;:::o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:217;186:1;212;202:132;;256:10;251:3;247:20;244:1;237:31;291:4;288:1;281:15;319:4;316:1;309:15;202:132;-1:-1:-1;348:9:7;;146:217::o;368:128::-;435:9;;;456:11;;;453:37;;;470:18;;:::i;:::-;368:128;;;;:::o;501:127::-;562:10;557:3;553:20;550:1;543:31;593:4;590:1;583:15;617:4;614:1;607:15;633:380;712:1;708:12;;;;755;;;776:61;;830:4;822:6;818:17;808:27;;776:61;883:2;875:6;872:14;852:18;849:38;846:161;;929:10;924:3;920:20;917:1;910:31;964:4;961:1;954:15;992:4;989:1;982:15;846:161;;633:380;;;:::o;1144:545::-;1246:2;1241:3;1238:11;1235:448;;;1282:1;1307:5;1303:2;1296:17;1352:4;1348:2;1338:19;1422:2;1410:10;1406:19;1403:1;1399:27;1393:4;1389:38;1458:4;1446:10;1443:20;1440:47;;;-1:-1:-1;1481:4:7;1440:47;1536:2;1531:3;1527:12;1524:1;1520:20;1514:4;1510:31;1500:41;;1591:82;1609:2;1602:5;1599:13;1591:82;;;1654:17;;;1635:1;1624:13;1591:82;;;1595:3;;;1144:545;;;:::o;1865:1352::-;1985:10;;-1:-1:-1;;;;;2007:30:7;;2004:56;;;2040:18;;:::i;:::-;2069:97;2159:6;2119:38;2151:4;2145:11;2119:38;:::i;:::-;2113:4;2069:97;:::i;:::-;2221:4;;2285:2;2274:14;;2302:1;2297:663;;;;3004:1;3021:6;3018:89;;;-1:-1:-1;3073:19:7;;;3067:26;3018:89;-1:-1:-1;;1822:1:7;1818:11;;;1814:24;1810:29;1800:40;1846:1;1842:11;;;1797:57;3120:81;;2267:944;;2297:663;1091:1;1084:14;;;1128:4;1115:18;;-1:-1:-1;;2333:20:7;;;2451:236;2465:7;2462:1;2459:14;2451:236;;;2554:19;;;2548:26;2533:42;;2646:27;;;;2614:1;2602:14;;;;2481:19;;2451:236;;;2455:3;2715:6;2706:7;2703:19;2700:201;;;2776:19;;;2770:26;-1:-1:-1;;2859:1:7;2855:14;;;2871:3;2851:24;2847:37;2843:42;2828:58;2813:74;;2700:201;-1:-1:-1;;;;;2947:1:7;2931:14;;;2927:22;2914:36;;-1:-1:-1;1865:1352:7:o;3222:290::-;3292:6;3345:2;3333:9;3324:7;3320:23;3316:32;3313:52;;;3361:1;3358;3351:12;3313:52;3387:16;;-1:-1:-1;;;;;3432:31:7;;3422:42;;3412:70;;3478:1;3475;3468:12;3412:70;3501:5;3222:290;-1:-1:-1;;;3222:290:7:o;4186:125::-;4251:9;;;4272:10;;;4269:36;;;4285:18;;:::i;4316:177::-;2020:8829:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CIRCULATING_SUPPLY_1091": {
									"entryPoint": null,
									"id": 1091,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEAD_WALLET_1084": {
									"entryPoint": null,
									"id": 1084,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1715": {
									"entryPoint": null,
									"id": 1715,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_763": {
									"entryPoint": null,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_698": {
									"entryPoint": 3593,
									"id": 698,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_752": {
									"entryPoint": null,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_653": {
									"entryPoint": 5135,
									"id": 653,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3885,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_owner_1025": {
									"entryPoint": null,
									"id": 1025,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 5441,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1886": {
									"entryPoint": 3977,
									"id": 1886,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_524": {
									"entryPoint": 5523,
									"id": 524,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_319": {
									"entryPoint": 2807,
									"id": 319,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_344": {
									"entryPoint": 1981,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_276": {
									"entryPoint": null,
									"id": 276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1636": {
									"entryPoint": 2232,
									"id": 1636,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buybackandburnAddress_1081": {
									"entryPoint": null,
									"id": 1081,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyfee_1064": {
									"entryPoint": null,
									"id": 1064,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@circulatingSupply_1414": {
									"entryPoint": 2459,
									"id": 1414,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_252": {
									"entryPoint": null,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_447": {
									"entryPoint": 2549,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@excludeFromLockPeriod_1378": {
									"entryPoint": 3549,
									"id": 1378,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@excludedFromLockPeriod_1183": {
									"entryPoint": null,
									"id": 1183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fee_denominator_1070": {
									"entryPoint": null,
									"id": 1070,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@includeInTimeLock_1392": {
									"entryPoint": 2007,
									"id": 1392,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increaseAllowance_406": {
									"entryPoint": 2203,
									"id": 406,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1133": {
									"entryPoint": null,
									"id": 1133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockPeriod_1058": {
									"entryPoint": null,
									"id": 1058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxTokensPerWallet_1075": {
									"entryPoint": null,
									"id": 1075,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_232": {
									"entryPoint": 1835,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1048": {
									"entryPoint": 2245,
									"id": 1048,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rescueERC20_1624": {
									"entryPoint": 2327,
									"id": 1624,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sellfee_1067": {
									"entryPoint": null,
									"id": 1067,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNewRouter_1364": {
									"entryPoint": 2850,
									"id": 1364,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapRouter_1196": {
									"entryPoint": null,
									"id": 1196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_242": {
									"entryPoint": 2534,
									"id": 242,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@timeStamps_1179": {
									"entryPoint": null,
									"id": 1179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalBurned_1402": {
									"entryPoint": null,
									"id": 1402,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_262": {
									"entryPoint": null,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1707": {
									"entryPoint": 2048,
									"id": 1707,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 3431,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1662": {
									"entryPoint": 2672,
									"id": 1662,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferfee_1061": {
									"entryPoint": null,
									"id": 1061,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapPair_1148": {
									"entryPoint": null,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapPairs_1187": {
									"entryPoint": null,
									"id": 1187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapRouter_1151": {
									"entryPoint": null,
									"id": 1151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$1019__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0fb15f1d1670556d93dd903347428faa4f0296a22c199218a3925475a0091315__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_233f9acf124cb1c1c2dd0d3e69dcc92fc28738f6559ae746f968f9f8f623ca16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52bcbaa1ed6777d01f8cf40ae7a891b900433429266503732d7209712bf7ebec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63a0154662069415fa27a48a593f4fdfea2896bfb1733699eeca8e46753a1281__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72a8f4699bd31e4d4bf29e6b3bbd8de7ad11d90ef94a87135c1bf5c84a95434f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc6bf99fdb08b516f44e6358c37414cbe1a01107ad7a6464d0705a47e799ed1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd95855e7362b40a1af009b256f3b9c8bfba337d252efa0c48f8ec55da2d3740__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e914626b01dc2ef388f33ebf8d73f5d385aad82193d55f793f3d4dad12129832__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fdc40d5bf1e9a3e37562540d9a9f4a6980aaf3d1865b341beb849fcd9353b021__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14022:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:7"
																	},
																	{
																		"hexValue": "44697265637420455448207472616e736665727320617265206e6f7420616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:34:7",
																		"type": "",
																		"value": "Direct ETH transfers are not all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "360:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:7"
																	},
																	{
																		"hexValue": "6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "365:6:7",
																		"type": "",
																		"value": "owed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "338:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "381:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "393:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "404:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "389:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "389:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "381:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72a8f4699bd31e4d4bf29e6b3bbd8de7ad11d90ef94a87135c1bf5c84a95434f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:7",
														"type": ""
													}
												],
												"src": "14:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "540:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "550:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "560:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "554:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "578:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "589:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "571:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "571:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "601:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "621:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "615:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "615:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "605:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "648:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "659:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "644:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "644:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "664:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "637:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "637:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "637:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "680:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "689:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "684:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "749:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "778:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "789:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "774:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "774:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "793:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "770:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "770:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "812:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "820:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "808:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "808:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "824:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "804:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "804:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "798:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "798:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "763:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "710:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "713:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "707:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "721:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "723:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "732:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "735:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "728:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "728:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "723:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "703:3:7",
																"statements": []
															},
															"src": "699:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "863:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "874:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "859:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "859:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "883:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "888:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "848:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "848:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "899:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "915:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "934:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "942:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "930:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "930:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "951:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "947:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "947:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "926:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "926:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "911:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "911:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "907:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "899:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "509:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "520:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "531:4:7",
														"type": ""
													}
												],
												"src": "419:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1017:86:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1081:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1090:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1093:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1083:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1083:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1083:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1040:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1051:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1066:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1071:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1062:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1062:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1075:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1058:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1058:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1047:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1047:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1037:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1037:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1030:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:50:7"
															},
															"nodeType": "YulIf",
															"src": "1027:70:7"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1006:5:7",
														"type": ""
													}
												],
												"src": "972:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1195:228:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1241:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1250:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1253:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1243:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1243:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1243:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1216:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1225:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1212:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1212:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1237:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:32:7"
															},
															"nodeType": "YulIf",
															"src": "1205:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1266:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1292:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1279:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1279:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1270:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1336:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1311:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1311:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1351:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1361:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1351:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1375:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1402:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1413:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1398:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1385:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1385:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1375:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1153:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1164:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1176:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1184:6:7",
														"type": ""
													}
												],
												"src": "1108:315:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1533:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1545:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1556:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1541:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1541:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1533:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1575:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1600:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1593:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1593:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1586:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1586:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1568:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1568:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1492:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1503:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1514:4:7",
														"type": ""
													}
												],
												"src": "1428:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1743:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1754:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1739:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1731:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1773:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1784:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1766:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1766:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1766:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1690:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1701:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1712:4:7",
														"type": ""
													}
												],
												"src": "1620:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1872:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1918:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1930:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1920:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1920:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1893:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1902:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1889:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1889:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1885:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1885:32:7"
															},
															"nodeType": "YulIf",
															"src": "1882:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1943:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1969:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1956:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1956:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1947:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2013:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1988:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1988:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2028:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2038:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1838:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1849:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1861:6:7",
														"type": ""
													}
												],
												"src": "1802:247:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2158:352:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2204:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2216:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2206:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2206:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2206:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2179:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2188:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2175:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2175:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2200:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2171:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:32:7"
															},
															"nodeType": "YulIf",
															"src": "2168:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2229:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2242:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2233:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2299:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2274:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2274:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2314:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2324:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2314:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2338:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2370:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2381:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2353:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2353:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2342:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2419:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2394:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2394:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2394:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2436:17:7",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2446:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2436:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2462:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2500:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2485:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2485:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2472:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2462:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2108:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2119:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2131:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2139:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2147:6:7",
														"type": ""
													}
												],
												"src": "2054:456:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2622:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2634:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2645:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2630:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2630:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2622:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2664:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2679:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2687:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2675:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2675:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2657:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2657:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2581:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2592:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:7",
														"type": ""
													}
												],
												"src": "2515:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2774:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2820:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2832:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2822:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2822:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2795:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2804:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2791:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2791:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2816:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2787:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2787:32:7"
															},
															"nodeType": "YulIf",
															"src": "2784:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2845:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2868:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2855:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2845:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2740:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2751:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2763:6:7",
														"type": ""
													}
												],
												"src": "2704:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3017:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3027:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3039:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3050:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3035:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3035:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3027:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3069:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3084:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3100:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3105:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3096:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3096:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3109:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3092:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3092:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3080:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3080:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3062:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3062:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1019__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2986:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2997:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3008:4:7",
														"type": ""
													}
												],
												"src": "2889:230:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3225:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3235:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3247:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3258:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3235:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3277:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3292:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3308:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3313:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3304:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3304:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3317:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3300:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3300:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3270:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3270:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3194:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3205:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3216:4:7",
														"type": ""
													}
												],
												"src": "3124:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3449:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3459:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3471:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3482:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3467:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3459:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3501:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3516:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3532:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3537:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3528:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3528:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3541:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3524:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3524:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3512:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3512:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3494:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3494:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3494:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3418:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3429:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3440:4:7",
														"type": ""
													}
												],
												"src": "3332:219:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3643:301:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3689:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3698:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3701:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3691:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3691:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3691:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3664:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3673:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3660:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3685:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3656:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:32:7"
															},
															"nodeType": "YulIf",
															"src": "3653:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3714:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3740:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3727:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3727:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3718:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3784:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3759:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3799:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3809:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3799:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3823:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3855:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3866:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3851:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3851:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3838:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3827:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3904:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3879:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3879:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3921:17:7",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3931:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3921:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3601:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3612:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3624:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3632:6:7",
														"type": ""
													}
												],
												"src": "3556:388:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4004:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4014:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4028:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4031:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4024:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4014:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4045:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4075:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4081:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4071:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4071:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4049:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4122:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4124:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4138:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4146:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4134:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4134:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4124:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4102:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:26:7"
															},
															"nodeType": "YulIf",
															"src": "4092:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4212:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4233:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4240:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4245:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4236:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4236:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4226:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4226:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4226:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4277:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4280:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4270:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4270:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4270:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4305:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4308:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4298:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4298:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4298:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4168:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4191:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4199:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4188:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4188:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4165:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4165:38:7"
															},
															"nodeType": "YulIf",
															"src": "4162:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3984:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3993:6:7",
														"type": ""
													}
												],
												"src": "3949:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4508:230:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4525:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4536:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4518:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4518:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4559:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4570:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4555:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4575:2:7",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4548:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4598:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4609:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4594:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4594:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4614:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4587:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4669:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4680:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4665:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4665:18:7"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4685:10:7",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4658:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4658:38:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4658:38:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4705:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4717:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4728:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4713:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4713:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4705:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4485:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4499:4:7",
														"type": ""
													}
												],
												"src": "4334:404:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4792:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4799:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4804:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4795:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4795:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4785:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4785:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4832:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4835:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4825:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4825:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4825:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4856:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4849:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4849:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4849:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4743:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4924:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4934:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4946:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4949:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4975:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4977:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4977:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4977:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4966:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4972:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4963:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:11:7"
															},
															"nodeType": "YulIf",
															"src": "4960:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4906:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4909:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4915:4:7",
														"type": ""
													}
												],
												"src": "4875:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5056:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5066:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5077:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5080:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5073:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5073:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5066:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5105:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5107:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5107:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5107:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5097:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5100:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5094:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5094:10:7"
															},
															"nodeType": "YulIf",
															"src": "5091:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5039:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5042:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5048:3:7",
														"type": ""
													}
												],
												"src": "5008:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5275:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5285:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5297:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5293:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5285:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5327:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5358:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5363:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5354:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5354:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5367:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5350:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5350:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5338:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5338:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5320:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5320:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5391:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5402:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5387:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5387:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5407:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5236:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5247:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5255:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5266:4:7",
														"type": ""
													}
												],
												"src": "5138:282:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5503:199:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5549:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5558:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5561:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5551:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5551:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5551:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5524:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5533:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5520:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5520:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5545:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:32:7"
															},
															"nodeType": "YulIf",
															"src": "5513:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5574:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5587:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5587:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5578:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5656:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5665:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5668:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5658:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5658:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5658:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5625:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5646:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5639:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5639:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5632:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5632:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5622:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5622:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:40:7"
															},
															"nodeType": "YulIf",
															"src": "5612:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5681:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5691:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5681:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5469:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5480:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5492:6:7",
														"type": ""
													}
												],
												"src": "5425:277:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5881:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5898:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5909:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5891:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5891:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5891:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5932:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5943:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5928:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5948:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5921:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5921:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5971:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5982:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5967:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5967:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5987:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5960:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5960:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6042:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6053:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6038:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6038:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6058:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6031:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6075:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6087:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6098:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6083:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6083:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6075:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5858:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5872:4:7",
														"type": ""
													}
												],
												"src": "5707:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6287:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6304:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6315:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6297:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6297:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6297:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6338:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6349:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6334:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6354:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6327:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6377:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6388:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6373:18:7"
																	},
																	{
																		"hexValue": "426f747320617265206e6f7420616c6c6f77656420746f206275792f73656c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6393:34:7",
																		"type": "",
																		"value": "Bots are not allowed to buy/sell"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6366:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6366:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6366:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6437:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6449:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6460:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6445:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6445:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6437:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc6bf99fdb08b516f44e6358c37414cbe1a01107ad7a6464d0705a47e799ed1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6264:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6278:4:7",
														"type": ""
													}
												],
												"src": "6113:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6648:235:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6665:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6676:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6658:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6658:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6658:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6699:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6710:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6695:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6695:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6715:2:7",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6688:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6688:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6688:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6738:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6749:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6734:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6734:18:7"
																	},
																	{
																		"hexValue": "4e657720726f7574657220616464726573732063616e6e6f7420626520746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6754:34:7",
																		"type": "",
																		"value": "New router address cannot be the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6727:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6727:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6727:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6809:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6820:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6805:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6805:18:7"
																	},
																	{
																		"hexValue": "207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6825:15:7",
																		"type": "",
																		"value": " zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6798:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6798:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6850:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6862:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6873:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6858:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6858:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6850:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_233f9acf124cb1c1c2dd0d3e69dcc92fc28738f6559ae746f968f9f8f623ca16__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6625:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6639:4:7",
														"type": ""
													}
												],
												"src": "6474:409:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6969:170:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7015:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7024:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7027:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7017:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7017:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7017:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6990:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6986:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6986:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7011:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6982:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6982:32:7"
															},
															"nodeType": "YulIf",
															"src": "6979:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7040:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7059:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7053:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7053:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7044:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7103:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7078:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7078:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7078:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7118:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7128:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7118:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6935:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6946:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6958:6:7",
														"type": ""
													}
												],
												"src": "6888:251:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7273:175:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7283:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7295:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7306:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7291:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7291:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7283:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7318:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7336:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7341:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7332:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7345:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7328:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7328:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7322:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7363:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7378:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7386:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7374:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7374:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7356:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7356:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7356:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7410:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7421:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7406:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7406:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7430:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7438:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7426:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7426:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7399:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7399:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7399:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7234:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7245:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7253:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7264:4:7",
														"type": ""
													}
												],
												"src": "7144:304:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7627:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7644:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7655:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7637:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7637:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7637:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7678:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7689:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7674:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7674:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7694:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7667:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7667:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7717:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7728:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7713:18:7"
																	},
																	{
																		"hexValue": "4e65772070616972206e6f7420666f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7733:20:7",
																		"type": "",
																		"value": "New pair not found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7706:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7706:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7706:48:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7763:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7775:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7786:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7771:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7771:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7763:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e914626b01dc2ef388f33ebf8d73f5d385aad82193d55f793f3d4dad12129832__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7604:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7618:4:7",
														"type": ""
													}
												],
												"src": "7453:342:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7974:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7991:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8002:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7984:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7984:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7984:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8025:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8036:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8021:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8021:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8041:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8014:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8014:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8014:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8064:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8075:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8060:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8060:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8080:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8053:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8053:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8053:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8135:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8146:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8131:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8131:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8151:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8124:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8124:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8169:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8181:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8192:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8177:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8177:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8169:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7951:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7965:4:7",
														"type": ""
													}
												],
												"src": "7800:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8381:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8398:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8409:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8391:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8391:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8391:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8432:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8443:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8428:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8428:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8448:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8421:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8421:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8421:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8471:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8482:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8467:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8467:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8487:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8460:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8460:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8460:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8542:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8553:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8538:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8538:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8558:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8531:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8531:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8531:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8574:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8586:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8597:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8582:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8582:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8574:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8358:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8372:4:7",
														"type": ""
													}
												],
												"src": "8207:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8786:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8803:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8814:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8796:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8837:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8848:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8833:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8833:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8853:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8826:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8826:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8826:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8876:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8887:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8872:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8872:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8892:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8865:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8865:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8865:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8947:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8958:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8943:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8943:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8963:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8936:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8936:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8936:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8977:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8989:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9000:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8985:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8985:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8977:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8763:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8777:4:7",
														"type": ""
													}
												],
												"src": "8612:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9189:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9206:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9217:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9199:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9199:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9199:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9240:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9251:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9236:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9236:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9256:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9229:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9229:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9229:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9279:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9290:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9275:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9275:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9295:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9268:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9268:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9268:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9339:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9351:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9362:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9347:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9347:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9339:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9166:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9180:4:7",
														"type": ""
													}
												],
												"src": "9015:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9550:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9567:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9578:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9560:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9560:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9560:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9601:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9612:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9597:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9597:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9617:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9590:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9590:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9590:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9640:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9651:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9636:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9636:18:7"
																	},
																	{
																		"hexValue": "436f6e74726163747320617265206e6f7420616c6c6f77656420746f2073656c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9656:34:7",
																		"type": "",
																		"value": "Contracts are not allowed to sel"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9629:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9629:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9629:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9711:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9722:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9707:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9707:18:7"
																	},
																	{
																		"hexValue": "6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9727:3:7",
																		"type": "",
																		"value": "l"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9700:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9700:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9700:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9740:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9752:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9763:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9748:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9748:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9740:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63a0154662069415fa27a48a593f4fdfea2896bfb1733699eeca8e46753a1281__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9527:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9541:4:7",
														"type": ""
													}
												],
												"src": "9376:397:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9952:231:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9969:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9980:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9962:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9962:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9962:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10003:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10014:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9999:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9999:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10019:2:7",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9992:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9992:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9992:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10042:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10053:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10038:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10038:18:7"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10058:34:7",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10031:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10031:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10031:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10113:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10124:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10109:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10109:18:7"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10129:11:7",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10102:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10102:39:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10102:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10150:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10162:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10173:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10158:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10158:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10150:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9929:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9943:4:7",
														"type": ""
													}
												],
												"src": "9778:405:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10362:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10379:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10390:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10372:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10372:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10372:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10413:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10424:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10409:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10409:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10429:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10402:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10402:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10402:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10452:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10463:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10448:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10448:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10468:22:7",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10441:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10441:50:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10441:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10500:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10512:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10523:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10508:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10500:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10339:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10353:4:7",
														"type": ""
													}
												],
												"src": "10188:344:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10711:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10728:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10739:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10721:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10721:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10721:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10762:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10773:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10758:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10778:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10751:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10751:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10751:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10801:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10812:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10797:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10797:18:7"
																	},
																	{
																		"hexValue": "45786365656473206d6178696d756d20746f6b656e73207065722077616c6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10817:34:7",
																		"type": "",
																		"value": "Exceeds maximum tokens per walle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10790:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10790:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10872:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10883:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10868:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10868:18:7"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10888:3:7",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10861:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10861:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10861:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10901:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10913:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10924:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10909:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10909:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10901:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52bcbaa1ed6777d01f8cf40ae7a891b900433429266503732d7209712bf7ebec__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10688:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10702:4:7",
														"type": ""
													}
												],
												"src": "10537:397:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11113:175:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11130:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11141:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11123:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11123:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11123:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11164:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11175:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11160:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11160:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11180:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11153:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11153:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11153:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11203:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11214:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11199:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11199:18:7"
																	},
																	{
																		"hexValue": "54696d65206c6f636b206973207374696c6c20616374697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11219:27:7",
																		"type": "",
																		"value": "Time lock is still active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11192:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11192:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11192:55:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11256:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11268:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11279:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11264:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11264:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11256:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fdc40d5bf1e9a3e37562540d9a9f4a6980aaf3d1865b341beb849fcd9353b021__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11090:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11104:4:7",
														"type": ""
													}
												],
												"src": "10939:349:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11467:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11484:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11495:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11477:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11477:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11477:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11518:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11529:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11514:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11514:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11534:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11507:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11507:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11507:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11557:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11568:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11553:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11553:18:7"
																	},
																	{
																		"hexValue": "526563697069656e7420696e2074696d65206c6f636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11573:24:7",
																		"type": "",
																		"value": "Recipient in time lock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11546:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11546:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11546:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11607:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11619:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11630:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11615:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11615:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11607:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0fb15f1d1670556d93dd903347428faa4f0296a22c199218a3925475a0091315__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11444:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11458:4:7",
														"type": ""
													}
												],
												"src": "11293:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11818:180:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11835:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11846:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11828:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11828:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11828:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11869:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11880:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11865:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11865:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11885:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11858:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11858:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11858:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11908:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11919:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11904:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11904:18:7"
																	},
																	{
																		"hexValue": "53656c6c2074696d65206c6f636b206973207374696c6c20616374697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11924:32:7",
																		"type": "",
																		"value": "Sell time lock is still active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11897:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11897:60:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11897:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11966:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11978:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11989:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11974:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11974:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11966:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd95855e7362b40a1af009b256f3b9c8bfba337d252efa0c48f8ec55da2d3740__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11795:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11809:4:7",
														"type": ""
													}
												],
												"src": "11644:354:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12177:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12194:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12205:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12187:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12187:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12228:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12239:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12224:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12224:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12244:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12217:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12217:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12217:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12267:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12278:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12263:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12263:18:7"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12283:34:7",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12256:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12256:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12256:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12338:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12349:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12334:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12334:18:7"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12354:3:7",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12327:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12327:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12327:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12367:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12379:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12390:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12375:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12375:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12367:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12154:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12168:4:7",
														"type": ""
													}
												],
												"src": "12003:397:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12579:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12596:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12607:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12589:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12589:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12589:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12630:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12641:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12626:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12626:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12646:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12619:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12619:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12619:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12669:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12680:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12665:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12665:18:7"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12685:34:7",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12658:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12658:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12658:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12740:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12751:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12736:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12736:18:7"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12756:4:7",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12729:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12729:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12729:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12770:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12782:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12793:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12778:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12778:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12770:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12556:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12570:4:7",
														"type": ""
													}
												],
												"src": "12405:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12982:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12999:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13010:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12992:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12992:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12992:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13033:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13044:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13029:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13029:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13049:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13022:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13022:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13022:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13072:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13083:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13068:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13068:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13088:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13061:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13061:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13061:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13143:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13154:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13139:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13139:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13159:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13132:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13132:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13132:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13176:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13188:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13199:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13184:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13184:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13176:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12959:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12973:4:7",
														"type": ""
													}
												],
												"src": "12808:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13388:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13405:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13416:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13398:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13398:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13398:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13439:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13450:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13435:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13435:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13455:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13428:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13428:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13428:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13478:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13489:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13474:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13474:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13494:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13467:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13467:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13467:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13549:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13560:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13545:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13545:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13565:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13538:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13538:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13538:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13580:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13592:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13603:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13588:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13588:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13580:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13365:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13379:4:7",
														"type": ""
													}
												],
												"src": "13214:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13792:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13809:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13820:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13802:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13802:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13802:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13843:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13854:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13839:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13839:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13859:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13832:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13832:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13832:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13882:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13893:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13878:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13878:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13898:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13871:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13871:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13871:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13953:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13964:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13949:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13949:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13969:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13942:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13942:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13942:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13987:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13999:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14010:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13995:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13995:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13987:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13769:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13783:4:7",
														"type": ""
													}
												],
												"src": "13618:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_72a8f4699bd31e4d4bf29e6b3bbd8de7ad11d90ef94a87135c1bf5c84a95434f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Direct ETH transfers are not all\")\n        mstore(add(headStart, 96), \"owed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1019__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bc6bf99fdb08b516f44e6358c37414cbe1a01107ad7a6464d0705a47e799ed1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Bots are not allowed to buy/sell\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_233f9acf124cb1c1c2dd0d3e69dcc92fc28738f6559ae746f968f9f8f623ca16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"New router address cannot be the\")\n        mstore(add(headStart, 96), \" zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_e914626b01dc2ef388f33ebf8d73f5d385aad82193d55f793f3d4dad12129832__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"New pair not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_63a0154662069415fa27a48a593f4fdfea2896bfb1733699eeca8e46753a1281__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Contracts are not allowed to sel\")\n        mstore(add(headStart, 96), \"l\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_52bcbaa1ed6777d01f8cf40ae7a891b900433429266503732d7209712bf7ebec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Exceeds maximum tokens per walle\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fdc40d5bf1e9a3e37562540d9a9f4a6980aaf3d1865b341beb849fcd9353b021__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Time lock is still active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0fb15f1d1670556d93dd903347428faa4f0296a22c199218a3925475a0091315__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Recipient in time lock\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd95855e7362b40a1af009b256f3b9c8bfba337d252efa0c48f8ec55da2d3740__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Sell time lock is still active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061021e5760003560e01c80638da5cb5b11610123578063c816841b116100ab578063dd62ed3e1161006f578063dd62ed3e14610696578063e9451f5f146106b6578063eafb5a3c146106cb578063f2fde38b146106eb578063fdf3dd9c1461070b57600080fd5b8063c816841b146105d5578063c831f606146105f5578063d61782d714610622578063d89135cd14610642578063dc9d75b01461068157600080fd5b8063a01c3483116100f2578063a01c34831461053a578063a457c2d714610550578063a9059cbb14610570578063b2bdfa7b14610590578063c31c9c07146105b057600080fd5b80638da5cb5b146104dc5780639358928b146104fa57806395d89b411461050f578063984ae06e1461052457600080fd5b80633fd8b02f116101a657806367e00e881161017557806367e00e881461040957806370a0823114610439578063715018a61461046f578063735de9f7146104845780638cd4426d146104bc57600080fd5b80633fd8b02f146103be57806342966c68146103d3578063469132ce146103f357806354de7bee146102fb57600080fd5b8063227b453f116101ed578063227b453f1461031057806323b872dd146103325780633078381c14610352578063313ce56714610382578063395093511461039e57600080fd5b806306fdde0314610281578063095ea7b3146102ac57806318160ddd146102dc5780631dc36945146102fb57600080fd5b3661027c5760405162461bcd60e51b8152602060048201526024808201527f44697265637420455448207472616e736665727320617265206e6f7420616c6c6044820152631bddd95960e21b60648201526084015b60405180910390fd5b600080fd5b34801561028d57600080fd5b5061029661072b565b6040516102a39190611738565b60405180910390f35b3480156102b857600080fd5b506102cc6102c736600461179b565b6107bd565b60405190151581526020016102a3565b3480156102e857600080fd5b506002545b6040519081526020016102a3565b34801561030757600080fd5b506102ed600081565b34801561031c57600080fd5b5061033061032b3660046117c7565b6107d7565b005b34801561033e57600080fd5b506102cc61034d3660046117eb565b610800565b34801561035e57600080fd5b506102cc61036d3660046117c7565b60106020526000908152604090205460ff1681565b34801561038e57600080fd5b50604051601281526020016102a3565b3480156103aa57600080fd5b506102cc6103b936600461179b565b61089b565b3480156103ca57600080fd5b506102ed603c81565b3480156103df57600080fd5b506103306103ee36600461182c565b6108b8565b3480156103ff57600080fd5b506102ed60075481565b34801561041557600080fd5b506102cc6104243660046117c7565b60116020526000908152604090205460ff1681565b34801561044557600080fd5b506102ed6104543660046117c7565b6001600160a01b031660009081526020819052604090205490565b34801561047b57600080fd5b506103306108c5565b34801561049057600080fd5b50600c546104a4906001600160a01b031681565b6040516001600160a01b0390911681526020016102a3565b3480156104c857600080fd5b506103306104d736600461179b565b610917565b3480156104e857600080fd5b506005546001600160a01b03166104a4565b34801561050657600080fd5b506102ed61099b565b34801561051b57600080fd5b506102966109e6565b34801561053057600080fd5b506102ed60095481565b34801561054657600080fd5b506104a461dead81565b34801561055c57600080fd5b506102cc61056b36600461179b565b6109f5565b34801561057c57600080fd5b506102cc61058b36600461179b565b610a70565b34801561059c57600080fd5b506006546104a4906001600160a01b031681565b3480156105bc57600080fd5b506013546104a49061010090046001600160a01b031681565b3480156105e157600080fd5b50600b546104a4906001600160a01b031681565b34801561060157600080fd5b506102ed6106103660046117c7565b600f6020526000908152604090205481565b34801561062e57600080fd5b506008546104a4906001600160a01b031681565b34801561064e57600080fd5b5061dead60009081526020527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83546102ed565b34801561068d57600080fd5b506102ed606481565b3480156106a257600080fd5b506102ed6106b1366004611845565b610af7565b3480156106c257600080fd5b506102ed600181565b3480156106d757600080fd5b506103306106e63660046117c7565b610b22565b3480156106f757600080fd5b506103306107063660046117c7565b610d67565b34801561071757600080fd5b506103306107263660046117c7565b610ddd565b60606003805461073a9061187e565b80601f01602080910402602001604051908101604052809291908181526020018280546107669061187e565b80156107b35780601f10610788576101008083540402835291602001916107b3565b820191906000526020600020905b81548152906001019060200180831161079657829003601f168201915b5050505050905090565b6000336107cb818585610e09565b60019150505b92915050565b6107df610f2d565b6001600160a01b03166000908152601060205260409020805460ff19169055565b600061080d848484610f89565b60006108198533610af7565b90508281101561087c5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610273565b610890853361088b86856118ce565b610e09565b506001949350505050565b6000336107cb8185856108ae8383610af7565b61088b91906118e1565b6108c2338261140f565b50565b6108cd610f2d565b6005546040516001600160a01b03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a2600680546001600160a01b0319169055565b61091f610f2d565b60085460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af1158015610972573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099691906118f4565b505050565b61dead600090815260208190527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83546109e1906c0e063191caf768f40cc2bc00006118ce565b905090565b60606004805461073a9061187e565b60003381610a038286610af7565b905083811015610a635760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610273565b6108908286868403610e09565b6000333b1580610a8a5750600d546001600160a01b031633145b80610a9f5750600b546001600160a01b031633145b610aeb5760405162461bcd60e51b815260206004820181905260248201527f426f747320617265206e6f7420616c6c6f77656420746f206275792f73656c6c6044820152606401610273565b336107cb818585610f89565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b2a610f2d565b6001600160a01b038116610b965760405162461bcd60e51b815260206004820152602d60248201527f4e657720726f7574657220616464726573732063616e6e6f742062652074686560448201526c207a65726f206164647265737360981b6064820152608401610273565b60008190506000816001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bff9190611916565b6001600160a01b031663c9c6539630846001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611916565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190611916565b90506001600160a01b038116610d2e5760405162461bcd60e51b815260206004820152601260248201527113995dc81c185a5c881b9bdd08199bdd5b9960721b6044820152606401610273565b600c80546001600160a01b0319166001600160a01b03938416179055166000908152601160205260409020805460ff1916600117905550565b610d6f610f2d565b6001600160a01b038116610dd45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610273565b6108c281611541565b610de5610f2d565b6001600160a01b03166000908152601060205260409020805460ff19166001179055565b6001600160a01b038316610e6b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610273565b6001600160a01b038216610ecc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610273565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b03163314610f875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610273565b565b323314610fe25760405162461bcd60e51b815260206004820152602160248201527f436f6e74726163747320617265206e6f7420616c6c6f77656420746f2073656c6044820152601b60fa1b6064820152608401610273565b600081116110445760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610273565b80611064846001600160a01b031660009081526020819052604090205490565b10156110a95760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610273565b61deac196001600160a01b038316016110d45780600960008282546110ce91906118ce565b90915550505b600a546001600160a01b0384811691161461116e576007548161110c846001600160a01b031660009081526020819052604090205490565b61111691906118e1565b111561116e5760405162461bcd60e51b815260206004820152602160248201527f45786365656473206d6178696d756d20746f6b656e73207065722077616c6c656044820152601d60fa1b6064820152608401610273565b6001600160a01b03831660009081526010602052604090205460ff161580156111a557506005546001600160a01b03848116911614155b80156111bf5750600c546001600160a01b03848116911614155b1561122c576001600160a01b0383166000908152600f602052604090205442101561122c5760405162461bcd60e51b815260206004820152601960248201527f54696d65206c6f636b206973207374696c6c20616374697665000000000000006044820152606401610273565b6001600160a01b03821660009081526010602052604090205460ff1615801561126357506005546001600160a01b03838116911614155b801561127d5750600c546001600160a01b03838116911614155b15611329576001600160a01b0382166000908152600f602052604090205415806112bf57506001600160a01b0382166000908152600f60205260409020544210155b6113045760405162461bcd60e51b8152602060048201526016602482015275526563697069656e7420696e2074696d65206c6f636b60501b6044820152606401610273565b61130f603c426118e1565b6001600160a01b0383166000908152600f60205260409020555b600b546001600160a01b0383811691161480156113545750600c546001600160a01b03848116911614155b15611404576001600160a01b0383166000908152600f6020526040902054156113df576001600160a01b0383166000908152600f60205260409020544210156113df5760405162461bcd60e51b815260206004820152601e60248201527f53656c6c2074696d65206c6f636b206973207374696c6c2061637469766500006044820152606401610273565b6113ea603c426118e1565b6001600160a01b0384166000908152600f60205260409020555b610996838383611593565b6001600160a01b03821661146f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610273565b6001600160a01b038216600090815260208190526040902054818110156114e35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610273565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166115f75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610273565b6001600160a01b0382166116595760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610273565b6001600160a01b038316600090815260208190526040902054818110156116d15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610273565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050565b600060208083528351808285015260005b8181101561176557858101830151858201604001528201611749565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146108c257600080fd5b600080604083850312156117ae57600080fd5b82356117b981611786565b946020939093013593505050565b6000602082840312156117d957600080fd5b81356117e481611786565b9392505050565b60008060006060848603121561180057600080fd5b833561180b81611786565b9250602084013561181b81611786565b929592945050506040919091013590565b60006020828403121561183e57600080fd5b5035919050565b6000806040838503121561185857600080fd5b823561186381611786565b9150602083013561187381611786565b809150509250929050565b600181811c9082168061189257607f821691505b6020821081036118b257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156107d1576107d16118b8565b808201808211156107d1576107d16118b8565b60006020828403121561190657600080fd5b815180151581146117e457600080fd5b60006020828403121561192857600080fd5b81516117e48161178656fea2646970667358221220868b0efdc92cfa635718fb4a81cabd64e5cec9421dee5d77c7f2a9e1a439866764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0xE9451F5F EQ PUSH2 0x6B6 JUMPI DUP1 PUSH4 0xEAFB5A3C EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xFDF3DD9C EQ PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC816841B EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xC831F606 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xD61782D7 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xDC9D75B0 EQ PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA01C3483 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA01C3483 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x590 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x984AE06E EQ PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD8B02F GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x67E00E88 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x67E00E88 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x8CD4426D EQ PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x469132CE EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x54DE7BEE EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x227B453F GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x227B453F EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x3078381C EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x1DC36945 EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x44697265637420455448207472616E736665727320617265206E6F7420616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1BDDD959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x17EB JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x3C DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x182C JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x8C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x4A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x4D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x917 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x99B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x9E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A4 PUSH2 0xDEAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x56B CALLDATASIZE PUSH1 0x4 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x58B CALLDATASIZE PUSH1 0x4 PUSH2 0x179B JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x4A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x4A4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x4A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x610 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x4A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDEAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SLOAD PUSH2 0x2ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x64 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x6B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0xB22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x706 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x726 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x73A SWAP1 PUSH2 0x187E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x766 SWAP1 PUSH2 0x187E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x788 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x796 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7CB DUP2 DUP6 DUP6 PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DF PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80D DUP5 DUP5 DUP5 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP6 CALLER PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x890 DUP6 CALLER PUSH2 0x88B DUP7 DUP6 PUSH2 0x18CE JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7CB DUP2 DUP6 DUP6 PUSH2 0x8AE DUP4 DUP4 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x88B SWAP2 SWAP1 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x8C2 CALLER DUP3 PUSH2 0x140F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8CD PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x91F PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x972 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x996 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDEAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SLOAD PUSH2 0x9E1 SWAP1 PUSH13 0xE063191CAF768F40CC2BC0000 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x73A SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xA03 DUP3 DUP7 PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x890 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x0 CALLER EXTCODESIZE ISZERO DUP1 PUSH2 0xA8A JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST DUP1 PUSH2 0xA9F JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F747320617265206E6F7420616C6C6F77656420746F206275792F73656C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST CALLER PUSH2 0x7CB DUP2 DUP6 DUP6 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2A PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720726F7574657220616464726573732063616E6E6F7420626520746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13995DC81C185A5C881B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SSTORE AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD6F PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x8C2 DUP2 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0xDE5 PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xECC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726163747320617265206E6F7420616C6C6F77656420746F2073656C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST DUP1 PUSH2 0x1064 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x10A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0xDEAC NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADD PUSH2 0x10D4 JUMPI DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x18CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x116E JUMPI PUSH1 0x7 SLOAD DUP2 PUSH2 0x110C DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1116 SWAP2 SWAP1 PUSH2 0x18E1 JUMP JUMPDEST GT ISZERO PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178696D756D20746F6B656E73207065722077616C6C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x11A5 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11BF JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x122C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54696D65206C6F636B206973207374696C6C2061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1263 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x127D JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1329 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 PUSH2 0x12BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO JUMPDEST PUSH2 0x1304 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x526563697069656E7420696E2074696D65206C6F636B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x130F PUSH1 0x3C TIMESTAMP PUSH2 0x18E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1354 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1404 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x13DF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C2074696D65206C6F636B206973207374696C6C206163746976650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x13EA PUSH1 0x3C TIMESTAMP PUSH2 0x18E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x996 DUP4 DUP4 DUP4 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x146F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x14E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x16D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1765 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1749 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17B9 DUP2 PUSH2 0x1786 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17E4 DUP2 PUSH2 0x1786 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x180B DUP2 PUSH2 0x1786 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x181B DUP2 PUSH2 0x1786 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1863 DUP2 PUSH2 0x1786 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1873 DUP2 PUSH2 0x1786 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1892 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7D1 PUSH2 0x18B8 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7D1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17E4 DUP2 PUSH2 0x1786 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DUP12 0xE REVERT 0xC9 0x2C STATICCALL PUSH4 0x5718FB4A DUP2 0xCA 0xBD PUSH5 0xE5CEC9421D 0xEE 0x5D PUSH24 0xC7F2A9E1A439866764736F6C634300081100330000000000 ",
							"sourceMap": "2020:8829:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8947:46;;-1:-1:-1;;;8947:46:6;;216:2:7;8947:46:6;;;198:21:7;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:7;;;338:34;389:19;;8947:46:6;;;;;;;;2020:8829;;;;2158:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;-1:-1:-1;4444:197:2;;;;;:::i;:::-;;:::i;:::-;;;1593:14:7;;1586:22;1568:41;;1556:2;1541:18;4444:197:2;1428:187:7;3255:106:2;;;;;;;;;;-1:-1:-1;3342:12:2;;3255:106;;;1766:25:7;;;1754:2;1739:18;3255:106:2;1620:177:7;2603:34:6;;;;;;;;;;;;2636:1;2603:34;;6335:119;;;;;;;;;;-1:-1:-1;6335:119:6;;;;;:::i;:::-;;:::i;:::-;;8514:388;;;;;;;;;;-1:-1:-1;8514:388:6;;;;;:::i;:::-;;:::i;4156:54::-;;;;;;;;;;-1:-1:-1;4156:54:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;3104:91:2;;;;;;;;;;-1:-1:-1;3104:91:2;;3186:2;2657:36:7;;2645:2;2630:18;3104:91:2;2515:184:7;5854:234:2;;;;;;;;;;-1:-1:-1;5854:234:2;;;;;:::i;:::-;;:::i;2504:46:6:-;;;;;;;;;;;;2541:9;2504:46;;8207:83;;;;;;;;;;-1:-1:-1;8207:83:6;;;;;:::i;:::-;;:::i;2739:61::-;;;;;;;;;;;;;;;;4217:44;;;;;;;;;;-1:-1:-1;4217:44:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;3419:125:2;;;;;;;;;;-1:-1:-1;3419:125:2;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;2284:137:6;;;;;;;;;;;;;:::i;3708:39::-;;;;;;;;;;-1:-1:-1;3708:39:6;;;;-1:-1:-1;;;;;3708:39:6;;;;;;-1:-1:-1;;;;;3080:32:7;;;3062:51;;3050:2;3035:18;3708:39:6;2889:230:7;8050:149:6;;;;;;;;;;-1:-1:-1;8050:149:6;;;;;:::i;:::-;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1273:6:0;;-1:-1:-1;;;;;1273:6:0;1201:85;;6568:115:6;;;;;;;;;;;;;:::i;2369:102:2:-;;;;;;;;;;;;;:::i;3033:73:6:-;;;;;;;;;;;;;;;;2946:80;;;;;;;;;;;;2984:42;2946:80;;6575:427:2;;;;;;;;;;-1:-1:-1;6575:427:2;;;;;:::i;:::-;;:::i;8304:202:6:-;;;;;;;;;;-1:-1:-1;8304:202:6;;;;;:::i;:::-;;:::i;2067:21::-;;;;;;;;;;-1:-1:-1;2067:21:6;;;;-1:-1:-1;;;;;2067:21:6;;;4345:36;;;;;;;;;;-1:-1:-1;4345:36:6;;;;;;;-1:-1:-1;;;;;4345:36:6;;;3675:26;;;;;;;;;;-1:-1:-1;3675:26:6;;;;-1:-1:-1;;;;;3675:26:6;;;4104:45;;;;;;;;;;-1:-1:-1;4104:45:6;;;;;:::i;:::-;;;;;;;;;;;;;;2841:98;;;;;;;;;;-1:-1:-1;2841:98:6;;;;-1:-1:-1;;;;;2841:98:6;;;6464:94;;;;;;;;;;-1:-1:-1;2984:42:6;6510:7;3519:18:2;;;;;;;6464:94:6;6568:115;2686:46;;;;;;;;;;;;2728:4;2686:46;;3987:149:2;;;;;;;;;;-1:-1:-1;3987:149:2;;;;;:::i;:::-;;:::i;2644:35:6:-;;;;;;;;;;;;2678:1;2644:35;;5659:535;;;;;;;;;;-1:-1:-1;5659:535:6;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;;;;;-1:-1:-1;2074:198:0;;;;;:::i;:::-;;:::i;6202:122:6:-;;;;;;;;;;-1:-1:-1;6202:122:6;;;;;:::i;:::-;;:::i;2158:98:2:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:5;4581:32:2;719:10:5;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;6335:119:6:-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6406:32:6::1;6441:5;6406:32:::0;;;:22:::1;:32;::::0;;;;:40;;-1:-1:-1;;6406:40:6::1;::::0;;6335:119::o;8514:388::-;8612:4;8625:36;8635:6;8643:9;8654:6;8625:9;:36::i;:::-;8668:24;8695:31;8705:6;719:10:5;3987:149:2;:::i;8695:31:6:-;8668:58;;8761:6;8741:16;:26;;8733:79;;;;-1:-1:-1;;;8733:79:6;;4536:2:7;8733:79:6;;;4518:21:7;4575:2;4555:18;;;4548:30;4614:34;4594:18;;;4587:62;-1:-1:-1;;;4665:18:7;;;4658:38;4713:19;;8733:79:6;4334:404:7;8733:79:6;8819:57;8828:6;719:10:5;8850:25:6;8869:6;8850:16;:25;:::i;:::-;8819:8;:57::i;:::-;-1:-1:-1;8890:4:6;;8514:388;-1:-1:-1;;;;8514:388:6:o;5854:234:2:-;5942:4;719:10:5;5996:64:2;719:10:5;6012:7:2;6049:10;6021:25;719:10:5;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;8207:83:6:-;8257:25;8263:10;8275:6;8257:5;:25::i;:::-;8207:83;:::o;2284:137::-;1094:13:0;:11;:13::i;:::-;1273:6;;2356:27:6::1;::::0;-1:-1:-1;;;;;1273:6:0;;;;2356:27:6::1;::::0;;;::::1;2394:6;:19:::0;;-1:-1:-1;;;;;;2394:19:6::1;::::0;;2284:137::o;8050:149::-;1094:13:0;:11;:13::i;:::-;8161:21:6::1;::::0;8135:56:::1;::::0;-1:-1:-1;;;8135:56:6;;-1:-1:-1;;;;;8161:21:6;;::::1;8135:56;::::0;::::1;5320:51:7::0;5387:18;;;5380:34;;;8135:25:6;;::::1;::::0;::::1;::::0;5293:18:7;;8135:56:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8050:149:::0;;:::o;6568:115::-;2984:42;6620:7;3519:18:2;;;;;;;;;6641:37:6;;2471:26;6641:37;:::i;:::-;6634:44;;6568:115;:::o;2369:102:2:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:5;6668:4:2;6749:25;719:10:5;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;5909:2:7;6784:85:2;;;5891:21:7;5948:2;5928:18;;;5921:30;5987:34;5967:18;;;5960:62;-1:-1:-1;;;6038:18:7;;;6031:35;6083:19;;6784:85:2;5707:401:7;6784:85:2;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;8304:202:6:-;8394:4;3248:10;3501:18;3539:8;;3236:61;;-1:-1:-1;3277:20:6;;-1:-1:-1;;;;;3277:20:6;3263:10;:34;3236:61;:90;;;-1:-1:-1;3315:11:6;;-1:-1:-1;;;;;3315:11:6;3301:10;:25;3236:90;3228:135;;;;-1:-1:-1;;;3228:135:6;;6315:2:7;3228:135:6;;;6297:21:7;;;6334:18;;;6327:30;6393:34;6373:18;;;6366:62;6445:18;;3228:135:6;6113:356:7;3228:135:6;719:10:5;8443:36:6::1;719:10:5::0;8461:9:6;8472:6;8443:9:::1;:36::i;3987:149:2:-:0;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;5659:535:6:-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5742:31:6;::::1;5734:89;;;::::0;-1:-1:-1;;;5734:89:6;;6676:2:7;5734:89:6::1;::::0;::::1;6658:21:7::0;6715:2;6695:18;;;6688:30;6754:34;6734:18;;;6727:62;-1:-1:-1;;;6805:18:7;;;6798:43;6858:19;;5734:89:6::1;6474:409:7::0;5734:89:6::1;5830:29;5881:17;5830:69;;5906:13;5940:10;-1:-1:-1::0;;;;;5940:18:6::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5922:50:6::1;;5981:4;5988:10;-1:-1:-1::0;;;;;5988:15:6::1;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5922:84;::::0;-1:-1:-1;;;;;;5922:84:6::1;::::0;;;;;;-1:-1:-1;;;;;7374:15:7;;;5922:84:6::1;::::0;::::1;7356:34:7::0;7426:15;;7406:18;;;7399:43;7291:18;;5922:84:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5906:100:::0;-1:-1:-1;;;;;;6021:19:6;::::1;6013:50;;;::::0;-1:-1:-1;;;6013:50:6;;7655:2:7;6013:50:6::1;::::0;::::1;7637:21:7::0;7694:2;7674:18;;;7667:30;-1:-1:-1;;;7713:18:7;;;7706:48;7771:18;;6013:50:6::1;7453:342:7::0;6013:50:6::1;6131:13;:26:::0;;-1:-1:-1;;;;;;6131:26:6::1;-1:-1:-1::0;;;;;6131:26:6;;::::1;;::::0;;6164:19:::1;-1:-1:-1::0;6164:19:6;;;:12:::1;:19;::::0;;;;:26;;-1:-1:-1;;6164:26:6::1;-1:-1:-1::0;6164:26:6::1;::::0;;-1:-1:-1;5659:535:6:o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;8002:2:7;2154:73:0::1;::::0;::::1;7984:21:7::0;8041:2;8021:18;;;8014:30;8080:34;8060:18;;;8053:62;-1:-1:-1;;;8131:18:7;;;8124:36;8177:19;;2154:73:0::1;7800:402:7::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;6202:122:6:-:0;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6277:32:6::1;;::::0;;;:22:::1;:32;::::0;;;;:39;;-1:-1:-1;;6277:39:6::1;6312:4;6277:39;::::0;;6202:122::o;10457:340:2:-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;8409:2:7;10550:68:2;;;8391:21:7;8448:2;8428:18;;;8421:30;8487:34;8467:18;;;8460:62;-1:-1:-1;;;8538:18:7;;;8531:34;8582:19;;10550:68:2;8207:400:7;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;8814:2:7;10628:68:2;;;8796:21:7;8853:2;8833:18;;;8826:30;8892:34;8872:18;;;8865:62;-1:-1:-1;;;8943:18:7;;;8936:32;8985:19;;10628:68:2;8612:398:7;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1766:25:7;;;10758:32:2;;1739:18:7;10758:32:2;;;;;;;10457:340;;;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:5;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;9217:2:7;1414:68:0;;;9199:21:7;;;9236:18;;;9229:30;9295:34;9275:18;;;9268:62;9347:18;;1414:68:0;9015:356:7;1414:68:0;1359:130::o;9005:1839:6:-;3590:9;3603:10;3590:23;3582:69;;;;-1:-1:-1;;;3582:69:6;;9578:2:7;3582:69:6;;;9560:21:7;9617:2;9597:18;;;9590:30;9656:34;9636:18;;;9629:62;-1:-1:-1;;;9707:18:7;;;9700:31;9748:19;;3582:69:6;9376:397:7;3582:69:6;9130:1:::1;9121:6;:10;9113:64;;;::::0;-1:-1:-1;;;9113:64:6;;9980:2:7;9113:64:6::1;::::0;::::1;9962:21:7::0;10019:2;9999:18;;;9992:30;10058:34;10038:18;;;10031:62;-1:-1:-1;;;10109:18:7;;;10102:39;10158:19;;9113:64:6::1;9778:405:7::0;9113:64:6::1;9213:6;9192:17;9202:6;-1:-1:-1::0;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;9192:17:6::1;:27;;9184:60;;;::::0;-1:-1:-1;;;9184:60:6;;10390:2:7;9184:60:6::1;::::0;::::1;10372:21:7::0;10429:2;10409:18;;;10402:30;-1:-1:-1;;;10448:18:7;;;10441:50;10508:18;;9184:60:6::1;10188:344:7::0;9184:60:6::1;-1:-1:-1::0;;;;;;;9263:24:6;::::1;::::0;9259:77:::1;;9322:6;9300:18;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9259:77:6::1;9475:10;::::0;-1:-1:-1;;;;;9465:20:6;;::::1;9475:10:::0;::::1;9465:20;9461:255;;9652:18;;9642:6;9619:20;9629:9;-1:-1:-1::0;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;9619:20:6::1;:29;;;;:::i;:::-;:51;;9611:97;;;::::0;-1:-1:-1;;;9611:97:6;;10739:2:7;9611:97:6::1;::::0;::::1;10721:21:7::0;10778:2;10758:18;;;10751:30;10817:34;10797:18;;;10790:62;-1:-1:-1;;;10868:18:7;;;10861:31;10909:19;;9611:97:6::1;10537:397:7::0;9611:97:6::1;-1:-1:-1::0;;;;;9780:30:6;::::1;;::::0;;;:22:::1;:30;::::0;;;;;::::1;;9779:31;:52:::0;::::1;;;-1:-1:-1::0;1273:6:0;;-1:-1:-1;;;;;9814:17:6;;::::1;1273:6:0::0;;9814:17:6::1;;9779:52;:88;;;;-1:-1:-1::0;9853:13:6::1;::::0;-1:-1:-1;;;;;9835:32:6;;::::1;9853:13:::0;::::1;9835:32;;9779:88;9775:188;;;-1:-1:-1::0;;;;;9907:18:6;::::1;;::::0;;;:10:::1;:18;::::0;;;;;9888:15:::1;:37;;9880:75;;;::::0;-1:-1:-1;;;9880:75:6;;11141:2:7;9880:75:6::1;::::0;::::1;11123:21:7::0;11180:2;11160:18;;;11153:30;11219:27;11199:18;;;11192:55;11264:18;;9880:75:6::1;10939:349:7::0;9880:75:6::1;-1:-1:-1::0;;;;;10030:33:6;::::1;;::::0;;;:22:::1;:33;::::0;;;;;::::1;;10029:34;:58:::0;::::1;;;-1:-1:-1::0;1273:6:0;;-1:-1:-1;;;;;10067:20:6;;::::1;1273:6:0::0;;10067:20:6::1;;10029:58;:97;;;;-1:-1:-1::0;10112:13:6::1;::::0;-1:-1:-1;;;;;10091:35:6;;::::1;10112:13:::0;::::1;10091:35;;10029:97;10025:290;;;-1:-1:-1::0;;;;;10147:21:6;::::1;;::::0;;;:10:::1;:21;::::0;;;;;:26;;:70:::1;;-1:-1:-1::0;;;;;;10196:21:6;::::1;;::::0;;;:10:::1;:21;::::0;;;;;10177:15:::1;:40;;10147:70;10139:105;;;::::0;-1:-1:-1;;;10139:105:6;;11495:2:7;10139:105:6::1;::::0;::::1;11477:21:7::0;11534:2;11514:18;;;11507:30;-1:-1:-1;;;11553:18:7;;;11546:52;11615:18;;10139:105:6::1;11293:346:7::0;10139:105:6::1;10279:28;2541:9;10279:15;:28;:::i;:::-;-1:-1:-1::0;;;;;10255:21:6;::::1;;::::0;;;:10:::1;:21;::::0;;;;:52;10025:290:::1;10388:11;::::0;-1:-1:-1;;;;;10375:24:6;;::::1;10388:11:::0;::::1;10375:24;:60:::0;::::1;;;-1:-1:-1::0;10421:13:6::1;::::0;-1:-1:-1;;;;;10403:32:6;;::::1;10421:13:::0;::::1;10403:32;;10375:60;10371:417;;;-1:-1:-1::0;;;;;10539:18:6;::::1;;::::0;;;:10:::1;:18;::::0;;;;;:23;10535:136:::1;;-1:-1:-1::0;;;;;10606:18:6;::::1;;::::0;;;:10:::1;:18;::::0;;;;;10587:15:::1;:37;;10579:80;;;::::0;-1:-1:-1;;;10579:80:6;;11846:2:7;10579:80:6::1;::::0;::::1;11828:21:7::0;11885:2;11865:18;;;11858:30;11924:32;11904:18;;;11897:60;11974:18;;10579:80:6::1;11644:354:7::0;10579:80:6::1;10752:28;2541:9;10752:15;:28;:::i;:::-;-1:-1:-1::0;;;;;10731:18:6;::::1;;::::0;;;:10:::1;:18;::::0;;;;:49;10371:417:::1;10796:42;10812:6;10820:9;10831:6;10796:15;:42::i;9375:659:2:-:0;-1:-1:-1;;;;;9458:21:2;;9450:67;;;;-1:-1:-1;;;9450:67:2;;12205:2:7;9450:67:2;;;12187:21:7;12244:2;12224:18;;;12217:30;12283:34;12263:18;;;12256:62;-1:-1:-1;;;12334:18:7;;;12327:31;12375:19;;9450:67:2;12003:397:7;9450:67:2;-1:-1:-1;;;;;9613:18:2;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:2;;12607:2:7;9641:71:2;;;12589:21:7;12646:2;12626:18;;;12619:30;12685:34;12665:18;;;12658:62;-1:-1:-1;;;12736:18:7;;;12729:32;12778:19;;9641:71:2;12405:398:7;9641:71:2;-1:-1:-1;;;;;9746:18:2;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1766:25:7;;;9746:9:2;;:18;9931:37;;1739:18:7;9931:37:2;;;;;;;8135:56:6::1;8050:149:::0;;:::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;7456:788:2:-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;13010:2:7;7544:68:2;;;12992:21:7;13049:2;13029:18;;;13022:30;13088:34;13068:18;;;13061:62;-1:-1:-1;;;13139:18:7;;;13132:35;13184:19;;7544:68:2;12808:401:7;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;13416:2:7;7622:64:2;;;13398:21:7;13455:2;13435:18;;;13428:30;13494:34;13474:18;;;13467:62;-1:-1:-1;;;13545:18:7;;;13538:33;13588:19;;7622:64:2;13214:399:7;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;13820:2:7;7793:72:2;;;13802:21:7;13859:2;13839:18;;;13832:30;13898:34;13878:18;;;13871:62;-1:-1:-1;;;13949:18:7;;;13942:36;13995:19;;7793:72:2;13618:402:7;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1766:25:7;;;8114:13:2;;8163:26;;1739:18:7;8163:26:2;;;;;;;7534:710;7456:788;;;:::o;419:548:7:-;531:4;560:2;589;578:9;571:21;621:6;615:13;664:6;659:2;648:9;644:18;637:34;689:1;699:140;713:6;710:1;707:13;699:140;;;808:14;;;804:23;;798:30;774:17;;;793:2;770:26;763:66;728:10;;699:140;;;703:3;888:1;883:2;874:6;863:9;859:22;855:31;848:42;958:2;951;947:7;942:2;934:6;930:15;926:29;915:9;911:45;907:54;899:62;;;;419:548;;;;:::o;972:131::-;-1:-1:-1;;;;;1047:31:7;;1037:42;;1027:70;;1093:1;1090;1083:12;1108:315;1176:6;1184;1237:2;1225:9;1216:7;1212:23;1208:32;1205:52;;;1253:1;1250;1243:12;1205:52;1292:9;1279:23;1311:31;1336:5;1311:31;:::i;:::-;1361:5;1413:2;1398:18;;;;1385:32;;-1:-1:-1;;;1108:315:7:o;1802:247::-;1861:6;1914:2;1902:9;1893:7;1889:23;1885:32;1882:52;;;1930:1;1927;1920:12;1882:52;1969:9;1956:23;1988:31;2013:5;1988:31;:::i;:::-;2038:5;1802:247;-1:-1:-1;;;1802:247:7:o;2054:456::-;2131:6;2139;2147;2200:2;2188:9;2179:7;2175:23;2171:32;2168:52;;;2216:1;2213;2206:12;2168:52;2255:9;2242:23;2274:31;2299:5;2274:31;:::i;:::-;2324:5;-1:-1:-1;2381:2:7;2366:18;;2353:32;2394:33;2353:32;2394:33;:::i;:::-;2054:456;;2446:7;;-1:-1:-1;;;2500:2:7;2485:18;;;;2472:32;;2054:456::o;2704:180::-;2763:6;2816:2;2804:9;2795:7;2791:23;2787:32;2784:52;;;2832:1;2829;2822:12;2784:52;-1:-1:-1;2855:23:7;;2704:180;-1:-1:-1;2704:180:7:o;3556:388::-;3624:6;3632;3685:2;3673:9;3664:7;3660:23;3656:32;3653:52;;;3701:1;3698;3691:12;3653:52;3740:9;3727:23;3759:31;3784:5;3759:31;:::i;:::-;3809:5;-1:-1:-1;3866:2:7;3851:18;;3838:32;3879:33;3838:32;3879:33;:::i;:::-;3931:7;3921:17;;;3556:388;;;;;:::o;3949:380::-;4028:1;4024:12;;;;4071;;;4092:61;;4146:4;4138:6;4134:17;4124:27;;4092:61;4199:2;4191:6;4188:14;4168:18;4165:38;4162:161;;4245:10;4240:3;4236:20;4233:1;4226:31;4280:4;4277:1;4270:15;4308:4;4305:1;4298:15;4162:161;;3949:380;;;:::o;4743:127::-;4804:10;4799:3;4795:20;4792:1;4785:31;4835:4;4832:1;4825:15;4859:4;4856:1;4849:15;4875:128;4942:9;;;4963:11;;;4960:37;;;4977:18;;:::i;5008:125::-;5073:9;;;5094:10;;;5091:36;;;5107:18;;:::i;5425:277::-;5492:6;5545:2;5533:9;5524:7;5520:23;5516:32;5513:52;;;5561:1;5558;5551:12;5513:52;5593:9;5587:16;5646:5;5639:13;5632:21;5625:5;5622:32;5612:60;;5668:1;5665;5658:12;6888:251;6958:6;7011:2;6999:9;6990:7;6986:23;6982:32;6979:52;;;7027:1;7024;7017:12;6979:52;7059:9;7053:16;7078:31;7103:5;7078:31;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1301000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CIRCULATING_SUPPLY()": "2407",
								"DEAD_WALLET()": "261",
								"_owner()": "2448",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24668",
								"balanceOf(address)": "2601",
								"burn(uint256)": "50816",
								"buybackandburnAddress()": "2426",
								"buyfee()": "308",
								"circulatingSupply()": "2482",
								"decimals()": "289",
								"decreaseAllowance(address,uint256)": "27011",
								"excludeFromLockPeriod(address)": "26900",
								"excludedFromLockPeriod(address)": "2615",
								"fee_denominator()": "328",
								"includeInTimeLock(address)": "26808",
								"increaseAllowance(address,uint256)": "infinite",
								"lockPeriod()": "241",
								"maxTokensPerWallet()": "2385",
								"name()": "infinite",
								"owner()": "2377",
								"renounceOwnership()": "29900",
								"rescueERC20(address,uint256)": "infinite",
								"sellfee()": "261",
								"setNewRouter(address)": "infinite",
								"swapRouter()": "2481",
								"symbol()": "infinite",
								"timeStamps(address)": "2580",
								"totalBurned()": "2424",
								"totalSupply()": "2372",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferfee()": "307",
								"uniswapPair()": "2382",
								"uniswapPairs(address)": "2570",
								"uniswapRouter()": "2448"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite",
								"internalSwap(uint256)": "infinite",
								"isContract(address)": "infinite",
								"takeTaxes(address,bool,bool,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2020,
									"end": 10849,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2796,
									"end": 2800,
									"name": "PUSH",
									"source": 6,
									"value": "3E8"
								},
								{
									"begin": 2775,
									"end": 2793,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2775,
									"end": 2793,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2775,
									"end": 2800,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2775,
									"end": 2800,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2775,
									"end": 2800,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2775,
									"end": 2800,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2775,
									"end": 2800,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2775,
									"end": 2800,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2775,
									"end": 2800,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2739,
									"end": 2800,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2739,
									"end": 2800,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 2939,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2841,
									"end": 2939,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 2939,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 2939,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2938,
									"name": "PUSH",
									"source": 6,
									"value": "76E98F575E5B6382FF3BC9E988F9920984F2A576"
								},
								{
									"begin": 2841,
									"end": 2939,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 2939,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 2939,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2984,
									"end": 3026,
									"name": "PUSH",
									"source": 6,
									"value": "DEAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3537,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3519,
									"end": 3537,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3519,
									"end": 3537,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3519,
									"end": 3537,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3519,
									"end": 3537,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3519,
									"end": 3537,
									"name": "PUSH",
									"source": 2,
									"value": "44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83"
								},
								{
									"begin": 3519,
									"end": 3537,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3069,
									"end": 3106,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 3069,
									"end": 3106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2471,
									"end": 2497,
									"name": "PUSH",
									"source": 6,
									"value": "E063191CAF768F40CC2BC0000"
								},
								{
									"begin": 3069,
									"end": 3106,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 3069,
									"end": 3106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3069,
									"end": 3106,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 3069,
									"end": 3106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3033,
									"end": 3106,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 3033,
									"end": 3106,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3113,
									"end": 3184,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 3113,
									"end": 3184,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3113,
									"end": 3184,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3113,
									"end": 3184,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3142,
									"end": 3184,
									"name": "PUSH",
									"source": 6,
									"value": "76E98F575E5B6382FF3BC9E988F9920984F2A576"
								},
								{
									"begin": 3113,
									"end": 3184,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3113,
									"end": 3184,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3113,
									"end": 3184,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4496,
									"end": 5644,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 4496,
									"end": 5644,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4496,
									"end": 5644,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4496,
									"end": 5644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 4496,
									"end": 5644,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4496,
									"end": 5644,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4496,
									"end": 5644,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4496,
									"end": 5644,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4496,
									"end": 5644,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 4496,
									"end": 5644,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1BA6A4A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4545,
									"end": 4576,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 4551,
									"end": 4561,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 2471,
									"end": 2497,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "E063191CAF768F40CC2BC0000"
								},
								{
									"begin": 4545,
									"end": 4550,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4545,
									"end": 4576,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4545,
									"end": 4576,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 4545,
									"end": 4576,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4740,
									"end": 4753,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 4740,
									"end": 4770,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4740,
									"end": 4770,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4740,
									"end": 4770,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4638,
									"end": 4680,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4CF76043B3F97BA06917CBD90F9E3A2AAC1B306E"
								},
								{
									"begin": 4740,
									"end": 4770,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4740,
									"end": 4770,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4740,
									"end": 4770,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4740,
									"end": 4770,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4740,
									"end": 4770,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4740,
									"end": 4770,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C45A0155"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4638,
									"end": 4680,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4638,
									"end": 4680,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4831,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "C45A0155"
								},
								{
									"begin": 4809,
									"end": 4831,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4638,
									"end": 4680,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4809,
									"end": 4833,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4809,
									"end": 4833,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 4809,
									"end": 4833,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4791,
									"end": 4851,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4851,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "C9C65396"
								},
								{
									"begin": 4860,
									"end": 4864,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4881,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4867,
									"end": 4886,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4886,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "AD5C4648"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4867,
									"end": 4888,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4867,
									"end": 4888,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4867,
									"end": 4888,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4791,
									"end": 4889,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 4791,
									"end": 4889,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3747,
									"end": 3762,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3762,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3762,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4791,
									"end": 4889,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3729,
									"end": 3763,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3799,
									"end": 3814,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3799,
									"end": 3814,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3779,
									"end": 3797,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3779,
									"end": 3797,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3779,
									"end": 3797,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3772,
									"end": 3815,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3664,
									"end": 3682,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3664,
									"end": 3682,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4791,
									"end": 4889,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4791,
									"end": 4889,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4791,
									"end": 4889,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4788,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 4777,
									"end": 4889,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4889,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4777,
									"end": 4889,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4889,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4889,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4777,
									"end": 4889,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4889,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4889,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4889,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4889,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4889,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4889,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4897,
									"end": 4917,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 4897,
									"end": 4962,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4897,
									"end": 4962,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4897,
									"end": 4962,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4897,
									"end": 4962,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4897,
									"end": 4962,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4920,
									"end": 4962,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4CF76043B3F97BA06917CBD90F9E3A2AAC1B306E"
								},
								{
									"begin": 4897,
									"end": 4962,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4897,
									"end": 4962,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4897,
									"end": 4962,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5132,
									"end": 5142,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4788,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5109,
									"end": 5143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5143,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5131,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 5109,
									"end": 5143,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5109,
									"end": 5143,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5143,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5109,
									"end": 5143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5143,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5150,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5150,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5109,
									"end": 5150,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5150,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5150,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4889,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5109,
									"end": 5150,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5150,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5150,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5150,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5150,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5157,
									"end": 5223,
									"name": "PUSH",
									"source": 6,
									"value": "9A8F3285986F133C5AB38A828780FBEBFF64111AD29B63B7783E7E3874351CA6"
								},
								{
									"begin": 5157,
									"end": 5230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5157,
									"end": 5230,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5157,
									"end": 5230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5157,
									"end": 5230,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5157,
									"end": 5230,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5157,
									"end": 5230,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5157,
									"end": 5230,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5157,
									"end": 5230,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5237,
									"end": 5303,
									"name": "PUSH",
									"source": 6,
									"value": "9E93E1DB4A1F807CC22B2AECF4DEEB0BF5745F1ECB319E87C68C5624C0FA6B69"
								},
								{
									"begin": 5237,
									"end": 5310,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5237,
									"end": 5310,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5237,
									"end": 5310,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5237,
									"end": 5310,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5237,
									"end": 5310,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5237,
									"end": 5310,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5237,
									"end": 5310,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5237,
									"end": 5310,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5349,
									"end": 5362,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 5349,
									"end": 5362,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5349,
									"end": 5362,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5349,
									"end": 5362,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5349,
									"end": 5362,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5364,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5364,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5364,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5364,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5364,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5371,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5371,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5371,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5371,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5371,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5371,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5371,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5371,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5385,
									"end": 5419,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5385,
									"end": 5419,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5132,
									"end": 5142,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5132,
									"end": 5142,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4676E9525129958BED49B43FA7E56D15BFAB1BC03BB4EBE3FFE4FE604A81E165"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5385,
									"end": 5419,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5385,
									"end": 5419,
									"modifierDepth": 1,
									"name": "LOG2",
									"source": 6
								},
								{
									"begin": 5431,
									"end": 5497,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5431,
									"end": 5497,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5454,
									"end": 5496,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "76E98F575E5B6382FF3BC9E988F9920984F2A576"
								},
								{
									"begin": 5454,
									"end": 5496,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4676E9525129958BED49B43FA7E56D15BFAB1BC03BB4EBE3FFE4FE604A81E165"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5431,
									"end": 5497,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5431,
									"end": 5497,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5431,
									"end": 5497,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5431,
									"end": 5497,
									"modifierDepth": 1,
									"name": "LOG2",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5575,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5509,
									"end": 5575,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5532,
									"end": 5574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "DEAD"
								},
								{
									"begin": 5532,
									"end": 5574,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4676E9525129958BED49B43FA7E56D15BFAB1BC03BB4EBE3FFE4FE604A81E165"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5509,
									"end": 5575,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5575,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5575,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5575,
									"modifierDepth": 1,
									"name": "LOG2",
									"source": 6
								},
								{
									"begin": 5619,
									"end": 5632,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 5619,
									"end": 5632,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5588,
									"end": 5634,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5588,
									"end": 5634,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5619,
									"end": 5632,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5619,
									"end": 5632,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5619,
									"end": 5632,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5619,
									"end": 5632,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4676E9525129958BED49B43FA7E56D15BFAB1BC03BB4EBE3FFE4FE604A81E165"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5588,
									"end": 5634,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5619,
									"end": 5632,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5619,
									"end": 5632,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5588,
									"end": 5634,
									"modifierDepth": 1,
									"name": "LOG2",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 5644,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4028,
									"end": 4030,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4010,
									"end": 4031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4067,
									"end": 4069,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4047,
									"end": 4065,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4047,
									"end": 4065,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4047,
									"end": 4065,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4040,
									"end": 4070,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4106,
									"end": 4139,
									"name": "PUSH",
									"source": 7,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4086,
									"end": 4104,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4086,
									"end": 4104,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4086,
									"end": 4104,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4079,
									"end": 4140,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4157,
									"end": 4175,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4157,
									"end": 4175,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 8731,
									"end": 8753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4462,
									"end": 4487,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4462,
									"end": 4487,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4462,
									"end": 4487,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4435,
									"end": 4453,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 363,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 146,
									"end": 363,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 186,
									"end": 187,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 213,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 202,
									"end": 334,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 256,
									"end": 266,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 251,
									"end": 254,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 247,
									"end": 267,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 244,
									"end": 245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 268,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 291,
									"end": 295,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 296,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 319,
									"end": 323,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 324,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 202,
									"end": 334,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 202,
									"end": 334,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 348,
									"end": 357,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 348,
									"end": 357,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 363,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 368,
									"end": 496,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 368,
									"end": 496,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 435,
									"end": 444,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 435,
									"end": 444,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 435,
									"end": 444,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 456,
									"end": 467,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 456,
									"end": 467,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 456,
									"end": 467,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 453,
									"end": 490,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 453,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 453,
									"end": 490,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 470,
									"end": 488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 470,
									"end": 488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 470,
									"end": 488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 470,
									"end": 488,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 470,
									"end": 488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 368,
									"end": 496,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 368,
									"end": 496,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 368,
									"end": 496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 368,
									"end": 496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 368,
									"end": 496,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 501,
									"end": 628,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 501,
									"end": 628,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 562,
									"end": 572,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 557,
									"end": 560,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 553,
									"end": 573,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 550,
									"end": 551,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 574,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 593,
									"end": 597,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 590,
									"end": 591,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 583,
									"end": 598,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 617,
									"end": 621,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 614,
									"end": 615,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 607,
									"end": 622,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 633,
									"end": 1013,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 633,
									"end": 1013,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 712,
									"end": 713,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 708,
									"end": 720,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 708,
									"end": 720,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 708,
									"end": 720,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 708,
									"end": 720,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 755,
									"end": 767,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 755,
									"end": 767,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 755,
									"end": 767,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 776,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 776,
									"end": 837,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 822,
									"end": 828,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 818,
									"end": 835,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 808,
									"end": 835,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 808,
									"end": 835,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 776,
									"end": 837,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 776,
									"end": 837,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 883,
									"end": 885,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 875,
									"end": 881,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 872,
									"end": 886,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 852,
									"end": 870,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 849,
									"end": 887,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 846,
									"end": 1007,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 846,
									"end": 1007,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 929,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 924,
									"end": 927,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 920,
									"end": 940,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 917,
									"end": 918,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 910,
									"end": 941,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 964,
									"end": 968,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 961,
									"end": 962,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 954,
									"end": 969,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 992,
									"end": 996,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 982,
									"end": 997,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 846,
									"end": 1007,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 846,
									"end": 1007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 846,
									"end": 1007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 633,
									"end": 1013,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 633,
									"end": 1013,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 633,
									"end": 1013,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 633,
									"end": 1013,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1689,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1144,
									"end": 1689,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1246,
									"end": 1248,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 1244,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1249,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1235,
									"end": 1683,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1235,
									"end": 1683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1235,
									"end": 1683,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1282,
									"end": 1283,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1303,
									"end": 1305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1313,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1352,
									"end": 1356,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1348,
									"end": 1350,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1357,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1422,
									"end": 1424,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1410,
									"end": 1420,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1406,
									"end": 1425,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1404,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1399,
									"end": 1426,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1393,
									"end": 1397,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1389,
									"end": 1427,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1462,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1443,
									"end": 1463,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 1487,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1440,
									"end": 1487,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1481,
									"end": 1485,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 1487,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1440,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1538,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1531,
									"end": 1534,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1527,
									"end": 1539,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1524,
									"end": 1525,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1520,
									"end": 1540,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1518,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1510,
									"end": 1541,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1541,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1541,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1591,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1591,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1607,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1599,
									"end": 1612,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1591,
									"end": 1673,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1591,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1591,
									"end": 1673,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1624,
									"end": 1637,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1591,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1591,
									"end": 1673,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1591,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1591,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 3217,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1865,
									"end": 3217,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 1995,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 1995,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2007,
									"end": 2037,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2007,
									"end": 2037,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2004,
									"end": 2060,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2004,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2004,
									"end": 2060,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2040,
									"end": 2058,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2159,
									"end": 2165,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2119,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2119,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2119,
									"end": 2157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2119,
									"end": 2157,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2119,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2117,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2069,
									"end": 2166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2166,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2069,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2225,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2221,
									"end": 2225,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2285,
									"end": 2287,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2274,
									"end": 2288,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2274,
									"end": 2288,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2302,
									"end": 2303,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2297,
									"end": 2960,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2960,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2297,
									"end": 2960,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3004,
									"end": 3005,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3021,
									"end": 3027,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3018,
									"end": 3107,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3018,
									"end": 3107,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3018,
									"end": 3107,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3073,
									"end": 3092,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3073,
									"end": 3092,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3073,
									"end": 3092,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3067,
									"end": 3093,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3018,
									"end": 3107,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3018,
									"end": 3107,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1822,
									"end": 1823,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1818,
									"end": 1829,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1829,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1829,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 1838,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 1839,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1840,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1847,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1842,
									"end": 1853,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1853,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1854,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3120,
									"end": 3201,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3120,
									"end": 3201,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2267,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2267,
									"end": 3211,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2960,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2297,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1092,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1084,
									"end": 1098,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1084,
									"end": 1098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1084,
									"end": 1098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1132,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2333,
									"end": 2353,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2353,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2687,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 2451,
									"end": 2687,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2465,
									"end": 2472,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2463,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2473,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2687,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2687,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2451,
									"end": 2687,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2554,
									"end": 2573,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2554,
									"end": 2573,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2554,
									"end": 2573,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2548,
									"end": 2574,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2533,
									"end": 2575,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2533,
									"end": 2575,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2646,
									"end": 2673,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2646,
									"end": 2673,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2646,
									"end": 2673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2646,
									"end": 2673,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2614,
									"end": 2615,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2602,
									"end": 2616,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2616,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2616,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2616,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2481,
									"end": 2500,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2481,
									"end": 2500,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2687,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 2451,
									"end": 2687,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2687,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2451,
									"end": 2687,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2455,
									"end": 2458,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2715,
									"end": 2721,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2706,
									"end": 2713,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2703,
									"end": 2722,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2700,
									"end": 2901,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2700,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 2700,
									"end": 2901,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2776,
									"end": 2795,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2776,
									"end": 2795,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2776,
									"end": 2795,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2770,
									"end": 2796,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2859,
									"end": 2860,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2855,
									"end": 2869,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2855,
									"end": 2869,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2855,
									"end": 2869,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2871,
									"end": 2874,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2851,
									"end": 2875,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2847,
									"end": 2884,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2843,
									"end": 2885,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2828,
									"end": 2886,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2813,
									"end": 2887,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2813,
									"end": 2887,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2700,
									"end": 2901,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 2700,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2947,
									"end": 2948,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2931,
									"end": 2945,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 2945,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 2945,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2927,
									"end": 2949,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 2950,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 2950,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1865,
									"end": 3217,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3512,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3222,
									"end": 3512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3292,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3345,
									"end": 3347,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3333,
									"end": 3342,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3324,
									"end": 3331,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3320,
									"end": 3343,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3316,
									"end": 3348,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3313,
									"end": 3365,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3313,
									"end": 3365,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3313,
									"end": 3365,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3361,
									"end": 3362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3358,
									"end": 3359,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3351,
									"end": 3363,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3313,
									"end": 3365,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3313,
									"end": 3365,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3387,
									"end": 3403,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3387,
									"end": 3403,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3432,
									"end": 3463,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3463,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3422,
									"end": 3464,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3422,
									"end": 3464,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3412,
									"end": 3482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3412,
									"end": 3482,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3478,
									"end": 3479,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3475,
									"end": 3476,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3480,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3412,
									"end": 3482,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3412,
									"end": 3482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3501,
									"end": 3506,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3512,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3222,
									"end": 3512,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4186,
									"end": 4311,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 4186,
									"end": 4311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4251,
									"end": 4260,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4251,
									"end": 4260,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4251,
									"end": 4260,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4305,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4305,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4269,
									"end": 4305,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4285,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4285,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4285,
									"end": 4303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4316,
									"end": 4493,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 4316,
									"end": 4493,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2020,
									"end": 10849,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220868b0efdc92cfa635718fb4a81cabd64e5cec9421dee5d77c7f2a9e1a439866764736f6c63430008110033",
									".code": [
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "C816841B"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "E9451F5F"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "EAFB5A3C"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "FDF3DD9C"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "C816841B"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "C831F606"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "D61782D7"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "D89135CD"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "DC9D75B0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "A01C3483"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "A01C3483"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "A457C2D7"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "B2BDFA7B"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "C31C9C07"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "9358928B"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "984AE06E"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "3FD8B02F"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "67E00E88"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "67E00E88"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "735DE9F7"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "8CD4426D"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "3FD8B02F"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "469132CE"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "54DE7BEE"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "227B453F"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "227B453F"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "3078381C"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "1DC36945"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 294,
											"end": 328,
											"name": "PUSH",
											"source": 7,
											"value": "44697265637420455448207472616E736665727320617265206E6F7420616C6C"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 267,
											"end": 329,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 345,
											"end": 363,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 345,
											"end": 363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 338,
											"end": 372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 408,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 389,
											"end": 408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 8993,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 10849,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1607,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1609,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1558,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1428,
											"end": 1615,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1620,
											"end": 1797,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 6335,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 6335,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8514,
											"end": 8902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 8514,
											"end": 8902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4156,
											"end": 4210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2657,
											"end": 2693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2515,
											"end": 2699,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 8207,
											"end": 8290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8207,
											"end": 8290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2800,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4217,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4261,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2284,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3080,
											"end": 3112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3112,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3035,
											"end": 3053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2889,
											"end": 3119,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8050,
											"end": 8199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8050,
											"end": 8199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6568,
											"end": 6683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3106,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2984,
											"end": 3026,
											"name": "PUSH",
											"source": 6,
											"value": "DEAD"
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 3026,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8304,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 8304,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4381,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3701,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4104,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4149,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2984,
											"end": 3026,
											"name": "PUSH",
											"source": 6,
											"value": "DEAD"
										},
										{
											"begin": 6510,
											"end": 6517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6464,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2728,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2732,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2679,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5659,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5659,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 6202,
											"end": 6324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6202,
											"end": 6324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 6335,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6406,
											"end": 6438,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6438,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6438,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6406,
											"end": 6438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6406,
											"end": 6438,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6438,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6438,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6438,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6446,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6446,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6446,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8625,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8643,
											"end": 8652,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8654,
											"end": 8660,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8625,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8625,
											"end": 8661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8625,
											"end": 8661,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8625,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8668,
											"end": 8692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8695,
											"end": 8726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8705,
											"end": 8711,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8695,
											"end": 8726,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8695,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8668,
											"end": 8726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8668,
											"end": 8726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8767,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4536,
											"end": 4538,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4539,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4577,
											"name": "PUSH",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4578,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4614,
											"end": 4648,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4649,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4658,
											"end": 4696,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4713,
											"end": 4732,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4713,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4334,
											"end": 4738,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 8733,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8819,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8828,
											"end": 8834,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8850,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8850,
											"end": 8866,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8850,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8850,
											"end": 8875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8850,
											"end": 8875,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8850,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8819,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8819,
											"end": 8876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8819,
											"end": 8876,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8819,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8890,
											"end": 8894,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8890,
											"end": 8894,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8902,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 8902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8275,
											"end": 8281,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8257,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8282,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8257,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2284,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2383,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 2356,
											"end": 2383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2383,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2394,
											"end": 2413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2413,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2394,
											"end": 2413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2413,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8161,
											"end": 8182,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8191,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8135,
											"end": 8191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8161,
											"end": 8182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8135,
											"end": 8191,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5320,
											"end": 5371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5387,
											"end": 5405,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5387,
											"end": 5405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5387,
											"end": 5405,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5414,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8160,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8160,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 8135,
											"end": 8160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8191,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8135,
											"end": 8191,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 3026,
											"name": "PUSH",
											"source": 6,
											"value": "DEAD"
										},
										{
											"begin": 6620,
											"end": 6627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6641,
											"end": 6678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2497,
											"name": "PUSH",
											"source": 6,
											"value": "E063191CAF768F40CC2BC0000"
										},
										{
											"begin": 6641,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6641,
											"end": 6678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6678,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6641,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5912,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5948,
											"end": 5950,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 5951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5987,
											"end": 6021,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6022,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6102,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6083,
											"end": 6102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5707,
											"end": 6108,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 8304,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8394,
											"end": 8398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3258,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3519,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3547,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 3236,
											"end": 3297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3277,
											"end": 3297,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3277,
											"end": 3297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3277,
											"end": 3297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3263,
											"end": 3273,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3263,
											"end": 3297,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3297,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 3236,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3236,
											"end": 3326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3315,
											"end": 3326,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3326,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3311,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3326,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3236,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6315,
											"end": 6317,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6318,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6297,
											"end": 6318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6297,
											"end": 6318,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6357,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6393,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "426F747320617265206E6F7420616C6C6F77656420746F206275792F73656C6C"
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6428,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 6113,
											"end": 6469,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 3228,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8443,
											"end": 8479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8478,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8443,
											"end": 8479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5659,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5742,
											"end": 5773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5773,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5734,
											"end": 5823,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5734,
											"end": 5823,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5734,
											"end": 5823,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5823,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 6678,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5734,
											"end": 5823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5734,
											"end": 5823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6717,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6718,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6788,
											"name": "PUSH",
											"source": 7,
											"value": "4E657720726F7574657220616464726573732063616E6E6F7420626520746865"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6727,
											"end": 6789,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6841,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6858,
											"end": 6877,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6858,
											"end": 6877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 6474,
											"end": 6883,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5734,
											"end": 5823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5950,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5940,
											"end": 5958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C45A0155"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 5940,
											"end": 5960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 5940,
											"end": 5960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 5972,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C9C65396"
										},
										{
											"begin": 5981,
											"end": 5985,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 5998,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5988,
											"end": 6003,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 5988,
											"end": 6005,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 5988,
											"end": 6005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5922,
											"end": 6006,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7374,
											"end": 7389,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7389,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7389,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5922,
											"end": 6006,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7441,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7399,
											"end": 7442,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7309,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7291,
											"end": 7309,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 6006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 5922,
											"end": 6006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 5922,
											"end": 6006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 6006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6021,
											"end": 6040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6021,
											"end": 6040,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 6013,
											"end": 6063,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6063,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6013,
											"end": 6063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6013,
											"end": 6063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7637,
											"end": 7658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 7696,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7674,
											"end": 7692,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7674,
											"end": 7692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7667,
											"end": 7697,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13995DC81C185A5C881B9BDD08199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 7453,
											"end": 7795,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 6013,
											"end": 6063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6157,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6157,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6157,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6183,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6164,
											"end": 6183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6190,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6164,
											"end": 6190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6190,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6190,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5659,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7984,
											"end": 8005,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8041,
											"end": 8043,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8114,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8160,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8196,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 8177,
											"end": 8196,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7800,
											"end": 8202,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6202,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6277,
											"end": 6309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6309,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6316,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6316,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6277,
											"end": 6316,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6316,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8409,
											"end": 8411,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8412,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8450,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8487,
											"end": 8521,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8460,
											"end": 8522,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8531,
											"end": 8565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8601,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 8582,
											"end": 8601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 8207,
											"end": 8607,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8816,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8796,
											"end": 8817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8853,
											"end": 8855,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8826,
											"end": 8856,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8892,
											"end": 8926,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 8927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8943,
											"end": 8961,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8943,
											"end": 8961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8943,
											"end": 8961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8936,
											"end": 8968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8985,
											"end": 9004,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 8985,
											"end": 9004,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 8612,
											"end": 9010,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9217,
											"end": 9219,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9199,
											"end": 9220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9254,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9236,
											"end": 9254,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9254,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9229,
											"end": 9259,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9329,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9275,
											"end": 9293,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9275,
											"end": 9293,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 9293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9015,
											"end": 9371,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 10844,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 9005,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3599,
											"name": "ORIGIN",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3613,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3613,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9580,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9617,
											"end": 9619,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9590,
											"end": 9620,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9656,
											"end": 9690,
											"name": "PUSH",
											"source": 7,
											"value": "436F6E74726163747320617265206E6F7420616C6C6F77656420746F2073656C"
										},
										{
											"begin": 9636,
											"end": 9654,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9636,
											"end": 9654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9636,
											"end": 9654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9629,
											"end": 9691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9707,
											"end": 9725,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9707,
											"end": 9725,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9707,
											"end": 9725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9700,
											"end": 9731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9748,
											"end": 9767,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9748,
											"end": 9767,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 9376,
											"end": 9773,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 3582,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9130,
											"end": 9131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9121,
											"end": 9127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9131,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 9113,
											"end": 9177,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9113,
											"end": 9177,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9113,
											"end": 9177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 9982,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9113,
											"end": 9177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9113,
											"end": 9177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9962,
											"end": 9983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10019,
											"end": 10021,
											"name": "PUSH",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 9999,
											"end": 10017,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9999,
											"end": 10017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9992,
											"end": 10022,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10092,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 10038,
											"end": 10056,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10038,
											"end": 10056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10038,
											"end": 10056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10031,
											"end": 10093,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10109,
											"end": 10127,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10109,
											"end": 10127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10127,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10102,
											"end": 10141,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 9778,
											"end": 10183,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 9113,
											"end": 9177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9219,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9192,
											"end": 9209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 9202,
											"end": 9208,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9192,
											"end": 9209,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 9192,
											"end": 9209,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9192,
											"end": 9219,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9192,
											"end": 9219,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 9184,
											"end": 9244,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9184,
											"end": 9244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10390,
											"end": 10392,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9184,
											"end": 9244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9184,
											"end": 9244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9244,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10372,
											"end": 10393,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10429,
											"end": 10431,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10448,
											"end": 10466,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10448,
											"end": 10466,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10448,
											"end": 10466,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10441,
											"end": 10491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9184,
											"end": 9244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 10188,
											"end": 10532,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9184,
											"end": 9244,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 9184,
											"end": 9244,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DEAC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9263,
											"end": 9287,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9263,
											"end": 9287,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9263,
											"end": 9287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9259,
											"end": 9336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 9259,
											"end": 9336,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9322,
											"end": 9328,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 9300,
											"end": 9318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9328,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9328,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9328,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9328,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 9300,
											"end": 9328,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9328,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9300,
											"end": 9328,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9328,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 9300,
											"end": 9328,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9328,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9259,
											"end": 9336,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 9259,
											"end": 9336,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9475,
											"end": 9485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 9475,
											"end": 9485,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9465,
											"end": 9485,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9465,
											"end": 9485,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9465,
											"end": 9485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9475,
											"end": 9485,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9475,
											"end": 9485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9465,
											"end": 9485,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9716,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 9461,
											"end": 9716,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9652,
											"end": 9670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9652,
											"end": 9670,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9642,
											"end": 9648,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9619,
											"end": 9639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 9629,
											"end": 9638,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9619,
											"end": 9639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 9619,
											"end": 9639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9619,
											"end": 9648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 9619,
											"end": 9648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9619,
											"end": 9648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9619,
											"end": 9648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 9619,
											"end": 9648,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9619,
											"end": 9648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 9619,
											"end": 9648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9619,
											"end": 9670,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9619,
											"end": 9670,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 9611,
											"end": 9708,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9611,
											"end": 9708,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9611,
											"end": 9708,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9708,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10739,
											"end": 10741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9611,
											"end": 9708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9611,
											"end": 9708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10721,
											"end": 10742,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10778,
											"end": 10780,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10751,
											"end": 10781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "PUSH",
											"source": 7,
											"value": "45786365656473206D6178696D756D20746F6B656E73207065722077616C6C65"
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 10852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10861,
											"end": 10892,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10909,
											"end": 10928,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10909,
											"end": 10928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9611,
											"end": 9708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 10537,
											"end": 10934,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9611,
											"end": 9708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 9611,
											"end": 9708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9780,
											"end": 9810,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9780,
											"end": 9810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 9780,
											"end": 9810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9780,
											"end": 9810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9780,
											"end": 9810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9810,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9810,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 9780,
											"end": 9810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9810,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9831,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 9779,
											"end": 9831,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9814,
											"end": 9831,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 9831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 9831,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9814,
											"end": 9831,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 9831,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 9779,
											"end": 9831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9867,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9867,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 9779,
											"end": 9867,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9853,
											"end": 9866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 9853,
											"end": 9866,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9835,
											"end": 9867,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9853,
											"end": 9866,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9853,
											"end": 9866,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9867,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9835,
											"end": 9867,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9867,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 9779,
											"end": 9867,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9963,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 9775,
											"end": 9963,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9925,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 9907,
											"end": 9925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9903,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9925,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9925,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9880,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 9880,
											"end": 9955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9880,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9880,
											"end": 9955,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9880,
											"end": 9955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9880,
											"end": 9955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11141,
											"end": 11143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9880,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9880,
											"end": 9955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9880,
											"end": 9955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11123,
											"end": 11144,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11180,
											"end": 11182,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 11160,
											"end": 11178,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11160,
											"end": 11178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11160,
											"end": 11178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11153,
											"end": 11183,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11219,
											"end": 11246,
											"name": "PUSH",
											"source": 7,
											"value": "54696D65206C6F636B206973207374696C6C2061637469766500000000000000"
										},
										{
											"begin": 11199,
											"end": 11217,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11199,
											"end": 11217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11199,
											"end": 11217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11192,
											"end": 11247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11264,
											"end": 11282,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11264,
											"end": 11282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9880,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 10939,
											"end": 11288,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9880,
											"end": 9955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 9880,
											"end": 9955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10030,
											"end": 10063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10030,
											"end": 10063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 10030,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10030,
											"end": 10063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10063,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10030,
											"end": 10063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10063,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10063,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10030,
											"end": 10063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10063,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 10029,
											"end": 10087,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10067,
											"end": 10087,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10067,
											"end": 10087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10067,
											"end": 10087,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10067,
											"end": 10087,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10067,
											"end": 10087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 10029,
											"end": 10087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10126,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10126,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 10029,
											"end": 10126,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10112,
											"end": 10125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 10112,
											"end": 10125,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10091,
											"end": 10126,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10126,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10112,
											"end": 10125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10112,
											"end": 10125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10126,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10126,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 10029,
											"end": 10126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10025,
											"end": 10315,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10025,
											"end": 10315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 10025,
											"end": 10315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10147,
											"end": 10168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10147,
											"end": 10168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 10147,
											"end": 10168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10147,
											"end": 10168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10168,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10168,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10168,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10173,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 10147,
											"end": 10217,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 10196,
											"end": 10217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10177,
											"end": 10192,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10177,
											"end": 10217,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10177,
											"end": 10217,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 10147,
											"end": 10217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10139,
											"end": 10244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 10139,
											"end": 10244,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10139,
											"end": 10244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10139,
											"end": 10244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10139,
											"end": 10244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10139,
											"end": 10244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11495,
											"end": 11497,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10139,
											"end": 10244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10139,
											"end": 10244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10139,
											"end": 10244,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11498,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11534,
											"end": 11536,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11507,
											"end": 11537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "526563697069656E7420696E2074696D65206C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11598,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10139,
											"end": 10244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 11293,
											"end": 11639,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10139,
											"end": 10244,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 10139,
											"end": 10244,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10279,
											"end": 10307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 2541,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 10279,
											"end": 10294,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10279,
											"end": 10307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 10279,
											"end": 10307,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10279,
											"end": 10307,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 10279,
											"end": 10307,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10255,
											"end": 10276,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10276,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10276,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 10255,
											"end": 10276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10255,
											"end": 10276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10276,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10255,
											"end": 10276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10276,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10307,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10025,
											"end": 10315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 10025,
											"end": 10315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 10388,
											"end": 10399,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10375,
											"end": 10399,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10399,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10399,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10399,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10435,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10435,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 10375,
											"end": 10435,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10421,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 10421,
											"end": 10434,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10403,
											"end": 10435,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10403,
											"end": 10435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10403,
											"end": 10435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10421,
											"end": 10434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10421,
											"end": 10434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10403,
											"end": 10435,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10403,
											"end": 10435,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10435,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 10375,
											"end": 10435,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10788,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 10371,
											"end": 10788,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10557,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 10539,
											"end": 10557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10562,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 10535,
											"end": 10671,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 10606,
											"end": 10624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10587,
											"end": 10602,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10587,
											"end": 10624,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10587,
											"end": 10624,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10579,
											"end": 10659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 10579,
											"end": 10659,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10579,
											"end": 10659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10579,
											"end": 10659,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10579,
											"end": 10659,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10579,
											"end": 10659,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11846,
											"end": 11848,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10579,
											"end": 10659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10579,
											"end": 10659,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10579,
											"end": 10659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 11849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 11887,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11858,
											"end": 11888,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11924,
											"end": 11956,
											"name": "PUSH",
											"source": 7,
											"value": "53656C6C2074696D65206C6F636B206973207374696C6C206163746976650000"
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 11957,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11974,
											"end": 11992,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11974,
											"end": 11992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10579,
											"end": 10659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 11644,
											"end": 11998,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10579,
											"end": 10659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 10579,
											"end": 10659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10752,
											"end": 10780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 2541,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 10752,
											"end": 10767,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10752,
											"end": 10780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 10752,
											"end": 10780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10752,
											"end": 10780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 10752,
											"end": 10780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10749,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 10731,
											"end": 10749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10780,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 10371,
											"end": 10788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10812,
											"end": 10818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 10829,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10831,
											"end": 10837,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 10796,
											"end": 10838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12205,
											"end": 12207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12187,
											"end": 12208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12246,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 12224,
											"end": 12242,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12224,
											"end": 12242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12224,
											"end": 12242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12217,
											"end": 12247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12283,
											"end": 12317,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 12263,
											"end": 12281,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12263,
											"end": 12281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12256,
											"end": 12318,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12334,
											"end": 12352,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12334,
											"end": 12352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12334,
											"end": 12352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12327,
											"end": 12358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12375,
											"end": 12394,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 12375,
											"end": 12394,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 12003,
											"end": 12400,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9588,
											"end": 9610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12607,
											"end": 12609,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12589,
											"end": 12610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12646,
											"end": 12648,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 12626,
											"end": 12644,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12626,
											"end": 12644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12626,
											"end": 12644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12619,
											"end": 12649,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12685,
											"end": 12719,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 12665,
											"end": 12683,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12665,
											"end": 12683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12665,
											"end": 12683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12658,
											"end": 12720,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12729,
											"end": 12761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12778,
											"end": 12797,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 12778,
											"end": 12797,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 12405,
											"end": 12803,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8135,
											"end": 8191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13010,
											"end": 13012,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12992,
											"end": 13013,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13049,
											"end": 13051,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 13029,
											"end": 13047,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13029,
											"end": 13047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13029,
											"end": 13047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13022,
											"end": 13052,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13088,
											"end": 13122,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13068,
											"end": 13086,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13068,
											"end": 13086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13068,
											"end": 13086,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13061,
											"end": 13123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13139,
											"end": 13157,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13139,
											"end": 13157,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13139,
											"end": 13157,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13132,
											"end": 13167,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13203,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 13184,
											"end": 13203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 12808,
											"end": 13209,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13416,
											"end": 13418,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13455,
											"end": 13457,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 13435,
											"end": 13453,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13435,
											"end": 13453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13435,
											"end": 13453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13428,
											"end": 13458,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13494,
											"end": 13528,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13467,
											"end": 13529,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13545,
											"end": 13563,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13545,
											"end": 13563,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13588,
											"end": 13607,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 13588,
											"end": 13607,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 13214,
											"end": 13613,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13820,
											"end": 13822,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13802,
											"end": 13823,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13859,
											"end": 13861,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 13839,
											"end": 13857,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13839,
											"end": 13857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13839,
											"end": 13857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13832,
											"end": 13862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13898,
											"end": 13932,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 13878,
											"end": 13896,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13878,
											"end": 13896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13878,
											"end": 13896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13871,
											"end": 13933,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13949,
											"end": 13967,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13949,
											"end": 13967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13949,
											"end": 13967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13942,
											"end": 13978,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13995,
											"end": 14014,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 13995,
											"end": 14014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 13618,
											"end": 14020,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 8244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 419,
											"end": 967,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 419,
											"end": 967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 531,
											"end": 535,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 591,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 571,
											"end": 592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 615,
											"end": 628,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 664,
											"end": 670,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 659,
											"end": 661,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 648,
											"end": 657,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 644,
											"end": 662,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 637,
											"end": 671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 699,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 713,
											"end": 719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 710,
											"end": 711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 707,
											"end": 720,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 699,
											"end": 839,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 699,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 699,
											"end": 839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 808,
											"end": 822,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 808,
											"end": 822,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 804,
											"end": 827,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 804,
											"end": 827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 798,
											"end": 828,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 774,
											"end": 791,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 774,
											"end": 791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 774,
											"end": 791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 793,
											"end": 795,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 796,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 763,
											"end": 829,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 728,
											"end": 738,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 728,
											"end": 738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 699,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 699,
											"end": 839,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 699,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 699,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 703,
											"end": 706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 888,
											"end": 889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 885,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 863,
											"end": 872,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 859,
											"end": 881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 848,
											"end": 890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 953,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 947,
											"end": 954,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 942,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 934,
											"end": 940,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 930,
											"end": 945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 926,
											"end": 955,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 915,
											"end": 924,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 911,
											"end": 956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 907,
											"end": 961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 899,
											"end": 961,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 899,
											"end": 961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 899,
											"end": 961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 899,
											"end": 961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 419,
											"end": 967,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 419,
											"end": 967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 419,
											"end": 967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 419,
											"end": 967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 419,
											"end": 967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1103,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 972,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1037,
											"end": 1079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1037,
											"end": 1079,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1027,
											"end": 1097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1423,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1108,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1223,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1235,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1240,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1257,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 1205,
											"end": 1257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1257,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 1205,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1302,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 1311,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1342,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 1311,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1366,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1415,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1416,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1416,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1417,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1417,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 2049,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1802,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1902,
											"end": 1911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1889,
											"end": 1912,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1885,
											"end": 1917,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1934,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 1882,
											"end": 1934,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1932,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1934,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 1882,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1969,
											"end": 1978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1979,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 2013,
											"end": 2018,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 1988,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2019,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 1988,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2043,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 2049,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1802,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2510,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2054,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2153,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2188,
											"end": 2197,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2179,
											"end": 2186,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2175,
											"end": 2198,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2203,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2168,
											"end": 2220,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2168,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 2168,
											"end": 2220,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2206,
											"end": 2218,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2168,
											"end": 2220,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 2168,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 2299,
											"end": 2304,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 2274,
											"end": 2305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2305,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 2274,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2385,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 2353,
											"end": 2385,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 2394,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 2394,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2510,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2510,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2446,
											"end": 2453,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2446,
											"end": 2453,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2500,
											"end": 2502,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2704,
											"end": 2884,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2704,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2804,
											"end": 2813,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2802,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2814,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2819,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2784,
											"end": 2836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2834,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2836,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2784,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2855,
											"end": 2878,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2704,
											"end": 2884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2704,
											"end": 2884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3944,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3556,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3638,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3687,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3673,
											"end": 3682,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3671,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3683,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3688,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3705,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 3653,
											"end": 3705,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3703,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3705,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 3653,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3749,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3727,
											"end": 3750,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3759,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 3784,
											"end": 3789,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3759,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3759,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3759,
											"end": 3790,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 3759,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3814,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3866,
											"end": 3868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3879,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 3838,
											"end": 3870,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3879,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3879,
											"end": 3912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3879,
											"end": 3912,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 3879,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3944,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3944,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 4329,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3949,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4083,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4083,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 4092,
											"end": 4153,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 4138,
											"end": 4144,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4151,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 4153,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 4092,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4202,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4203,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 4162,
											"end": 4323,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4240,
											"end": 4243,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4236,
											"end": 4256,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4284,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4277,
											"end": 4278,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4270,
											"end": 4285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4312,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4313,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4323,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 4162,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 4329,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 4329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 4329,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 4329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4870,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 4743,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4814,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4799,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4785,
											"end": 4816,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4839,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4832,
											"end": 4833,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4825,
											"end": 4840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4859,
											"end": 4863,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5003,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4875,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 4997,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4960,
											"end": 4997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 4977,
											"end": 4995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5008,
											"end": 5133,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5008,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5094,
											"end": 5104,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5094,
											"end": 5104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5094,
											"end": 5104,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5127,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5091,
											"end": 5127,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5107,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 5107,
											"end": 5125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5425,
											"end": 5702,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 5425,
											"end": 5702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5545,
											"end": 5547,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5533,
											"end": 5542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5543,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5548,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5565,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 5513,
											"end": 5565,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5563,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5565,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 5513,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5593,
											"end": 5602,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5587,
											"end": 5603,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5651,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5652,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5653,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5625,
											"end": 5630,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5654,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 5612,
											"end": 5672,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5668,
											"end": 5669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5666,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5670,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6888,
											"end": 7139,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6888,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6990,
											"end": 6997,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6986,
											"end": 7009,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6979,
											"end": 7031,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6979,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 6979,
											"end": 7031,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7029,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6979,
											"end": 7031,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 6979,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7068,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7053,
											"end": 7069,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7103,
											"end": 7108,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 7078,
											"end": 7109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								},
								"4676E9525129958BED49B43FA7E56D15BFAB1BC03BB4EBE3FFE4FE604A81E165": "c93bc17a700271bf59796cbfa01b47b8b95654209793470e3cdbadf87465a843"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Base7minutes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CIRCULATING_SUPPLY()": "984ae06e",
							"DEAD_WALLET()": "a01c3483",
							"_owner()": "b2bdfa7b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"buybackandburnAddress()": "d61782d7",
							"buyfee()": "1dc36945",
							"circulatingSupply()": "9358928b",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"excludeFromLockPeriod(address)": "fdf3dd9c",
							"excludedFromLockPeriod(address)": "3078381c",
							"fee_denominator()": "dc9d75b0",
							"includeInTimeLock(address)": "227b453f",
							"increaseAllowance(address,uint256)": "39509351",
							"lockPeriod()": "3fd8b02f",
							"maxTokensPerWallet()": "469132ce",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rescueERC20(address,uint256)": "8cd4426d",
							"sellfee()": "e9451f5f",
							"setNewRouter(address)": "eafb5a3c",
							"swapRouter()": "c31c9c07",
							"symbol()": "95d89b41",
							"timeStamps(address)": "c831f606",
							"totalBurned()": "d89135cd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferfee()": "54de7bee",
							"uniswapPair()": "c816841b",
							"uniswapPairs(address)": "67e00e88",
							"uniswapRouter()": "735de9f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ExcludedFromLockPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"IncludedInTimeLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRouter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPair\",\"type\":\"address\"}],\"name\":\"RouterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CIRCULATING_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEAD_WALLET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buybackandburnAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"excludeFromLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"excludedFromLockPeriod\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee_denominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"includeInTimeLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokensPerWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAdd\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRouterAddress\",\"type\":\"address\"}],\"name\":\"setNewRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"timeStamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"uniswapPairs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Base7minutes.sol\":\"ONEMINUTE\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Base7minutes.sol\":{\"keccak256\":\"0x5f08e20aa6533a51d03e81edff11460a971ea81e3528a599e5b9cb313fe6f274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b25c364d4416da7e0fed8b9d121e4124b6340c40f15c08e149676c1c143128\",\"dweb:/ipfs/QmQkw28THcmgK9doM6bMoazVmUCktuqJiiRtFwho87StDD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 193,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 199,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 201,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 203,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 205,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1025,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1075,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "maxTokensPerWallet",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1081,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "buybackandburnAddress",
								"offset": 0,
								"slot": "8",
								"type": "t_address_payable"
							},
							{
								"astId": 1091,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "CIRCULATING_SUPPLY",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1094,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "dev_wallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1148,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "uniswapPair",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1151,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "uniswapRouter",
								"offset": 0,
								"slot": "12",
								"type": "t_contract(IUniswapV2Router02)1019"
							},
							{
								"astId": 1153,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "uniswapRouterAddress",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 1175,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "_allowances",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1179,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "timeStamps",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1183,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "excludedFromLockPeriod",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1187,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "uniswapPairs",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1191,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "balance",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1193,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "inSwap",
								"offset": 0,
								"slot": "19",
								"type": "t_bool"
							},
							{
								"astId": 1196,
								"contract": "contracts/Base7minutes.sol:ONEMINUTE",
								"label": "swapRouter",
								"offset": 1,
								"slot": "19",
								"type": "t_contract(IUniswapV2Router02)1019"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)1019": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							889
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 890,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								889
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 177,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 177,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 177,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 177,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 177,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 177,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 171,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 172,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 174,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 177,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "888:2238:1",
							"usedErrors": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							889
						],
						"ERC20": [
							764
						],
						"IERC20": [
							842
						],
						"IERC20Metadata": [
							867
						]
					},
					"id": 765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 765,
							"sourceUnit": 843,
							"src": "130:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 765,
							"sourceUnit": 868,
							"src": "153:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 765,
							"sourceUnit": 890,
							"src": "195:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 184,
										"name": "Context",
										"nameLocations": [
											"1550:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "1550:7:2"
									},
									"id": 185,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:2"
								},
								{
									"baseName": {
										"id": 186,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 842,
										"src": "1559:6:2"
									},
									"id": 187,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:2"
								},
								{
									"baseName": {
										"id": 188,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 867,
										"src": "1567:14:2"
									},
									"id": 189,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 183,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 764,
							"linearizedBaseContracts": [
								764,
								867,
								842,
								889
							],
							"name": "ERC20",
							"nameLocation": "1541:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 193,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "1588:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 192,
										"keyType": {
											"id": 190,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 191,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 199,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "1640:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 198,
										"keyType": {
											"id": 194,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 197,
											"keyType": {
												"id": 195,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 196,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "1714:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 200,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "1749:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 202,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "1775:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 204,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2036:57:2",
										"statements": [
											{
												"expression": {
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 213,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2046:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 214,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2054:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:2"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2069:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "2079:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:2"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 222,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1992:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2013:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 209,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:2"
									},
									"scope": 764,
									"src": "1980:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2227:29:2",
										"statements": [
											{
												"expression": {
													"id": 229,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2244:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 228,
												"id": 230,
												"nodeType": "Return",
												"src": "2237:12:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 225,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:2"
									},
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2212:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:2"
									},
									"scope": 764,
									"src": "2158:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										860
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2440:31:2",
										"statements": [
											{
												"expression": {
													"id": 239,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 205,
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 238,
												"id": 240,
												"nodeType": "Return",
												"src": "2450:14:2"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:2"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:2"
									},
									"scope": 764,
									"src": "2369:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										866
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3169:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "3179:9:2"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:2"
									},
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3162:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 246,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:2"
									},
									"scope": 764,
									"src": "3104:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										791
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "3325:36:2",
										"statements": [
											{
												"expression": {
													"id": 259,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 201,
													"src": "3342:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 258,
												"id": 260,
												"nodeType": "Return",
												"src": "3335:19:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 255,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:2"
									},
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:2"
									},
									"scope": 764,
									"src": "3255:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										799
									],
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "3502:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 271,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3519:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 273,
													"indexExpression": {
														"id": 272,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "3529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 274,
												"nodeType": "Return",
												"src": "3512:25:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:2"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "3438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "3493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:2"
									},
									"scope": 764,
									"src": "3419:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										809
									],
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3825:104:2",
										"statements": [
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "3835:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 287,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 289,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "3851:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "3883:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 294,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "3890:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "3894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 292,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3873:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 286,
												"id": 299,
												"nodeType": "Return",
												"src": "3911:11:2"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 283,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:2"
									},
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3819:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:2"
									},
									"scope": 764,
									"src": "3740:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										819
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "4085:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 312,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "4102:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 314,
														"indexExpression": {
															"id": 313,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "4114:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "4121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 311,
												"id": 317,
												"nodeType": "Return",
												"src": "4095:34:2"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 308,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:2"
									},
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4021:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4076:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:2"
									},
									"scope": 764,
									"src": "3987:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										829
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "4533:108:2",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "4543:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 330,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 332,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "4559:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4590:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "4597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "4606:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "4581:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 329,
												"id": 342,
												"nodeType": "Return",
												"src": "4623:11:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 326,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:2"
									},
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4461:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4527:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:2"
									},
									"scope": 764,
									"src": "4444:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										841
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "5306:153:2",
										"statements": [
											{
												"assignments": [
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "5316:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 357,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 359,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "5334:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 363,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5372:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5387:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "5356:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5414:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "5420:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5424:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "5404:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 356,
												"id": 375,
												"nodeType": "Return",
												"src": "5441:11:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 353,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:2"
									},
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5225:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5239:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5251:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:2"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:2"
									},
									"scope": 764,
									"src": "5203:256:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "5948:140:2",
										"statements": [
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 405,
														"src": "5958:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 387,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 389,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "5974:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 393,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "6005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 396,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "6031:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 397,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "6038:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 395,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "6021:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 399,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "6049:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "5996:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 386,
												"id": 404,
												"nodeType": "Return",
												"src": "6070:11:2"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5881:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5898:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5942:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:2"
									},
									"scope": 764,
									"src": "5854:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "6674:328:2",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "6684:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 416,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "6700:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:2"
											},
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "6722:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 421,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"arguments": [
														{
															"id": 424,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6759:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "6766:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 423,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "6749:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 429,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "6792:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 430,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "6812:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:2"
											},
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 436,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6912:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 437,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6919:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 438,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "6928:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 439,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "6947:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 435,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "6903:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 442,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 415,
												"id": 445,
												"nodeType": "Return",
												"src": "6984:11:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6619:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:2"
									},
									"scope": 764,
									"src": "6575:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7534:710:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 458,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7552:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 459,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "7630:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "7718:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "7724:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 480,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "7728:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "7697:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:2"
											},
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "7746:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"baseExpression": {
														"id": 485,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "7768:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 487,
													"indexExpression": {
														"id": 486,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "7778:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 490,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "7801:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 491,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "7816:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:2"
											},
											{
												"id": 510,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:2",
												"statements": [
													{
														"expression": {
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 496,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "7899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 498,
																"indexExpression": {
																	"id": 497,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "7909:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 499,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "7917:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 500,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "7931:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 503,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:2"
													},
													{
														"expression": {
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 504,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "8114:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 506,
																"indexExpression": {
																	"id": 505,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "8124:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 507,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "8131:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 509,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 512,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "8172:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8178:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8182:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "8163:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "EmitStatement",
												"src": "8158:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "8220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8230:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "8200:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:2"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7475:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7489:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:2"
									},
									"scope": 764,
									"src": "7456:788:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "8585:470:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "8603:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 534,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 543,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8713:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 542,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "8671:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:2"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 551,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "8731:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 552,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "8747:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:2"
											},
											{
												"id": 561,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:2",
												"statements": [
													{
														"expression": {
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 555,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "8899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 557,
																"indexExpression": {
																	"id": 556,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "8909:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 558,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "8921:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 560,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 563,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8982:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "8952:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "8947:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 572,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9041:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9000:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:2"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8535:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8552:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:2"
									},
									"scope": 764,
									"src": "8520:535:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "9440:594:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 590,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "9458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 591,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9549:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9570:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "9528:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:2"
											},
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "9588:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"baseExpression": {
														"id": 610,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "9613:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 612,
													"indexExpression": {
														"id": 611,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9623:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 615,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "9649:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 616,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "9667:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:2"
											},
											{
												"id": 633,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:2",
												"statements": [
													{
														"expression": {
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 621,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "9746:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 623,
																"indexExpression": {
																	"id": 622,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "9756:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 624,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "9767:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 625,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "9784:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 628,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:2"
													},
													{
														"expression": {
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 629,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "9883:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 630,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "9899:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 632,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9961:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "9931:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "EmitStatement",
												"src": "9926:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9999:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10020:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9979:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:2"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "9390:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "9407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:2"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:2"
									},
									"scope": 764,
									"src": "9375:659:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "10540:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 664,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "10558:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 665,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "10636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 675,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:2"
											},
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 683,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "10707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 686,
															"indexExpression": {
																"id": 684,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "10719:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 687,
														"indexExpression": {
															"id": 685,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "10726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 688,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "10737:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 692,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "10767:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "10774:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "10783:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 691,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "10758:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "EmitStatement",
												"src": "10753:37:2"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "10475:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "10490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "10507:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:2"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:2"
									},
									"scope": 764,
									"src": "10457:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "11168:321:2",
										"statements": [
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 740,
														"src": "11178:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"arguments": [
														{
															"id": 711,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "11215:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "11222:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 710,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "11205:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "11244:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 717,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 716,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 739,
												"nodeType": "IfStatement",
												"src": "11240:243:2",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "11283:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 723,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "11305:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 724,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "11325:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 722,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 728,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:2"
														},
														{
															"id": 737,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "11416:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 731,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 703,
																				"src": "11423:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 732,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "11432:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 733,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 705,
																					"src": "11451:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 698,
																			"src": "11407:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 736,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "11103:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "11118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "11135:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:2"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:2"
									},
									"scope": 764,
									"src": "11078:411:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "12162:2:2",
										"statements": []
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "12103:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "12117:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "12129:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:2"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:2"
									},
									"scope": 764,
									"src": "12073:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "12840:2:2",
										"statements": []
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "12781:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "12795:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "12807:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:2"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:2"
									},
									"scope": 764,
									"src": "12752:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 765,
							"src": "1532:11312:2",
							"usedErrors": []
						}
					],
					"src": "105:12740:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							842
						]
					},
					"id": 843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 766,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 767,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 842,
							"linearizedBaseContracts": [
								842
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 776,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 785,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 842,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 842,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 842,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 842,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 842,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 842,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 843,
							"src": "202:2534:3",
							"usedErrors": []
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							842
						],
						"IERC20Metadata": [
							867
						]
					},
					"id": 868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 844,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 868,
							"sourceUnit": 843,
							"src": "135:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 847,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 842,
										"src": "305:6:4"
									},
									"id": 848,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 846,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 867,
							"linearizedBaseContracts": [
								867,
								842
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 851,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 867,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 867,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 863,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 867,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 868,
							"src": "277:405:4",
							"usedErrors": []
						}
					],
					"src": "110:573:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							889
						]
					},
					"id": 890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 870,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 889,
							"linearizedBaseContracts": [
								889
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 875,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 874,
												"id": 877,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 889,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 884,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 883,
												"id": 886,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 889,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 890,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"contracts/Base7minutes.sol": {
				"ast": {
					"absolutePath": "contracts/Base7minutes.sol",
					"exportedSymbols": {
						"Context": [
							889
						],
						"ERC20": [
							764
						],
						"IERC20": [
							842
						],
						"IERC20Metadata": [
							867
						],
						"IUniswapV2Factory": [
							905
						],
						"IUniswapV2Router02": [
							1019
						],
						"ONEMINUTE": [
							1887
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							177
						]
					},
					"id": 1888,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 891,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 765,
							"src": "62:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 868,
							"src": "119:75:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 113,
							"src": "196:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 178,
							"src": "250:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 905,
							"linearizedBaseContracts": [
								905
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "326:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "360:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "379:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "371:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "395:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "387:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:32:6"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "429:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "421:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:14:6"
									},
									"scope": 905,
									"src": "351:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1888,
							"src": "316:122:6",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1019,
							"linearizedBaseContracts": [
								1019
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "454:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "489:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:6"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "522:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:9:6"
									},
									"scope": 1019,
									"src": "480:51:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "546:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:2:6"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "576:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "575:9:6"
									},
									"scope": 1019,
									"src": "537:48:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "602:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "633:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "625:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "658:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "650:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "680:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "675:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "710:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "705:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "705:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "740:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "735:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "735:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "766:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "761:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "761:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "795:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "787:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "813:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "808:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "808:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:214:6"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "852:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "847:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "847:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "866:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "861:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "880:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "875:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:44:6"
									},
									"scope": 1019,
									"src": "593:298:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "906:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "940:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "932:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "961:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "956:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "956:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "995:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "990:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "990:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1025:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1020:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1020:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1056:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1048:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1074:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1069:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1069:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:168:6"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1121:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1116:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1116:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1139:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1134:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1134:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1155:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1150:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1150:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:50:6"
									},
									"scope": 1019,
									"src": "897:269:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1181:50:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1247:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1242:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1242:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1271:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1266:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1313:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1294:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 966,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1294:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 967,
													"nodeType": "ArrayTypeName",
													"src": "1294:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1336:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1328:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1354:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1349:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:138:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1378:0:6"
									},
									"scope": 1019,
									"src": "1172:207:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 987,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "1394:50:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1460:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1455:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1455:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1502:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1483:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 978,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1483:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 979,
													"nodeType": "ArrayTypeName",
													"src": "1483:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1525:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1517:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1517:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1543:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1538:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1538:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:114:6"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1575:0:6"
									},
									"scope": 1019,
									"src": "1385:191:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "1591:53:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1660:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1655:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1684:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1679:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1679:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1726:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1707:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 992,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1707:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 993,
													"nodeType": "ArrayTypeName",
													"src": "1707:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1749:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1741:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1767:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1762:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1762:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:138:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1791:0:6"
									},
									"scope": 1019,
									"src": "1582:210:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1807:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1847:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1842:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1842:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1871:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1866:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1866:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1913:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1894:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1006,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1894:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1007,
													"nodeType": "ArrayTypeName",
													"src": "1894:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1936:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1928:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1954:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1949:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1949:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:138:6"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2002:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1988:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1014,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1988:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1015,
													"nodeType": "ArrayTypeName",
													"src": "1988:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:23:6"
									},
									"scope": 1019,
									"src": "1798:213:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1888,
							"src": "444:1570:6",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1020,
										"name": "ERC20",
										"nameLocations": [
											"2042:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 764,
										"src": "2042:5:6"
									},
									"id": 1021,
									"nodeType": "InheritanceSpecifier",
									"src": "2042:5:6"
								},
								{
									"baseName": {
										"id": 1022,
										"name": "Ownable",
										"nameLocations": [
											"2049:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "2049:7:6"
									},
									"id": 1023,
									"nodeType": "InheritanceSpecifier",
									"src": "2049:7:6"
								}
							],
							"canonicalName": "ONEMINUTE",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1887,
							"linearizedBaseContracts": [
								1887,
								112,
								764,
								867,
								842,
								889
							],
							"name": "ONEMINUTE",
							"nameLocation": "2029:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b2bdfa7b",
									"id": 1025,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "2082:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "2067:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1024,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2067:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820",
									"id": 1029,
									"name": "OwnershipRenounced",
									"nameLocation": "2159:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2194:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "2178:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2177:31:6"
									},
									"src": "2153:56:6"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "2340:81:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1036,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "2375:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1035,
														"name": "OwnershipRenounced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "2356:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "EmitStatement",
												"src": "2351:32:6"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1040,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "2394:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2411:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2403:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1041,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2403:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2403:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2394:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "2394:19:6"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1032,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1031,
												"name": "onlyOwner",
												"nameLocations": [
													"2320:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2320:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2320:9:6"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2293:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1033,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2330:8:6"
									},
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:2:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:0:6"
									},
									"scope": 1887,
									"src": "2284:137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1055,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "2456:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "2431:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1049,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2431:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1111111111111000000000000000000_by_1",
											"typeString": "int_const 1111111111111000000000000000000"
										},
										"id": 1054,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3131315f3131315f3131315f313131",
											"id": 1050,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2471:17:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1111111111111_by_1",
												"typeString": "int_const 1111111111111"
											},
											"value": "1_111_111_111_111"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1053,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1051,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2491:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1052,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2495:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "2491:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "2471:26:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1111111111111000000000000000000_by_1",
											"typeString": "int_const 1111111111111000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "3fd8b02f",
									"id": 1058,
									"mutability": "constant",
									"name": "lockPeriod",
									"nameLocation": "2528:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "2504:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1056,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2504:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1057,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2541:9:6",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "54de7bee",
									"id": 1061,
									"mutability": "constant",
									"name": "transferfee",
									"nameLocation": "2581:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "2557:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1059,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2557:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1060,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2595:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1dc36945",
									"id": 1064,
									"mutability": "constant",
									"name": "buyfee",
									"nameLocation": "2627:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "2603:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1062,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2603:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1063,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2636:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e9451f5f",
									"id": 1067,
									"mutability": "constant",
									"name": "sellfee",
									"nameLocation": "2668:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "2644:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1065,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2644:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1066,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2678:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "dc9d75b0",
									"id": 1070,
									"mutability": "constant",
									"name": "fee_denominator",
									"nameLocation": "2710:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "2686:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1068,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2686:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "315f3030",
										"id": 1069,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2728:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "1_00"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "469132ce",
									"id": 1075,
									"mutability": "mutable",
									"name": "maxTokensPerWallet",
									"nameLocation": "2754:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "2739:61:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1071,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2739:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1074,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1072,
											"name": "CIRCULATING_SUPPLY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1091,
											"src": "2775:18:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "31303030",
											"id": 1073,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2796:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000_by_1",
												"typeString": "int_const 1000"
											},
											"value": "1000"
										},
										"src": "2775:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d61782d7",
									"id": 1081,
									"mutability": "mutable",
									"name": "buybackandburnAddress",
									"nameLocation": "2864:21:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "2841:98:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1076,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2841:15:6",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307837364539386635373545354236333832666633426339453938384639393230393834463241353736",
												"id": 1079,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2896:42:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x76E98f575E5B6382ff3Bc9E988F9920984F2A576"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1078,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "2888:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 1077,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2888:8:6",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 1080,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2888:51:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a01c3483",
									"id": 1084,
									"mutability": "constant",
									"name": "DEAD_WALLET",
									"nameLocation": "2970:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "2946:80:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1082,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2946:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 1083,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2984:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "984ae06e",
									"id": 1091,
									"mutability": "mutable",
									"name": "CIRCULATING_SUPPLY",
									"nameLocation": "3048:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "3033:73:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1085,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3033:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1090,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1086,
											"name": "TOTAL_SUPPLY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1055,
											"src": "3069:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"arguments": [
												{
													"id": 1088,
													"name": "DEAD_WALLET",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1084,
													"src": "3094:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 1087,
												"name": "balanceOf",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 276,
												"src": "3084:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
													"typeString": "function (address) view returns (uint256)"
												}
											},
											"id": 1089,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3084:22:6",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3069:37:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1094,
									"mutability": "mutable",
									"name": "dev_wallet",
									"nameLocation": "3129:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "3113:71:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1092,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3113:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837364539386635373545354236333832666633426339453938384639393230393834463241353736",
										"id": 1093,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3142:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x76E98f575E5B6382ff3Bc9E988F9920984F2A576"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "3221:154:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "3236:23:6",
																	"subExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1098,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3248:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3252:6:6",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3248:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1097,
																			"name": "isContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1133,
																			"src": "3237:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address) view returns (bool)"
																			}
																		},
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3237:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1102,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3263:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3267:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3263:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1104,
																		"name": "uniswapRouterAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "3277:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3263:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3236:61:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1107,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3301:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3305:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3301:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1109,
																	"name": "uniswapPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "3315:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3301:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3236:90:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f747320617265206e6f7420616c6c6f77656420746f206275792f73656c6c",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3328:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc6bf99fdb08b516f44e6358c37414cbe1a01107ad7a6464d0705a47e799ed1e",
																"typeString": "literal_string \"Bots are not allowed to buy/sell\""
															},
															"value": "Bots are not allowed to buy/sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc6bf99fdb08b516f44e6358c37414cbe1a01107ad7a6464d0705a47e799ed1e",
																"typeString": "literal_string \"Bots are not allowed to buy/sell\""
															}
														],
														"id": 1096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3228:135:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "3228:135:6"
											},
											{
												"id": 1115,
												"nodeType": "PlaceholderStatement",
												"src": "3370:1:6"
											}
										]
									},
									"id": 1117,
									"name": "onlyWallets",
									"nameLocation": "3207:11:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3218:2:6"
									},
									"src": "3198:177:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "3447:104:6",
										"statements": [
											{
												"assignments": [
													1125
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "3462:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "3454:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1126,
												"nodeType": "VariableDeclarationStatement",
												"src": "3454:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3482:44:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3493:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "_addr",
																		"nodeType": "YulIdentifier",
																		"src": "3513:5:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "3501:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:18:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3493:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1119,
														"isOffset": false,
														"isSlot": false,
														"src": "3513:5:6",
														"valueSize": 1
													},
													{
														"declaration": 1125,
														"isOffset": false,
														"isSlot": false,
														"src": "3493:4:6",
														"valueSize": 1
													}
												],
												"id": 1127,
												"nodeType": "InlineAssembly",
												"src": "3473:53:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "3539:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3546:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3539:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1123,
												"id": 1131,
												"nodeType": "Return",
												"src": "3532:15:6"
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "3392:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "3411:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3403:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3402:15:6"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3441:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3441:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:6:6"
									},
									"scope": 1887,
									"src": "3383:168:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "3575:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1136,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "3590:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3593:6:6",
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "3590:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1138,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3607:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3603:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3590:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163747320617265206e6f7420616c6c6f77656420746f2073656c6c",
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3615:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63a0154662069415fa27a48a593f4fdfea2896bfb1733699eeca8e46753a1281",
																"typeString": "literal_string \"Contracts are not allowed to sell\""
															},
															"value": "Contracts are not allowed to sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63a0154662069415fa27a48a593f4fdfea2896bfb1733699eeca8e46753a1281",
																"typeString": "literal_string \"Contracts are not allowed to sell\""
															}
														],
														"id": 1135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3582:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "3582:69:6"
											},
											{
												"id": 1144,
												"nodeType": "PlaceholderStatement",
												"src": "3658:1:6"
											}
										]
									},
									"id": 1146,
									"name": "onlyEOAs",
									"nameLocation": "3564:8:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3572:2:6"
									},
									"src": "3555:108:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c816841b",
									"id": 1148,
									"mutability": "mutable",
									"name": "uniswapPair",
									"nameLocation": "3690:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "3675:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1147,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3675:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "735de9f7",
									"id": 1151,
									"mutability": "mutable",
									"name": "uniswapRouter",
									"nameLocation": "3734:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "3708:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1150,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1149,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"3708:18:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1019,
											"src": "3708:18:6"
										},
										"referencedDeclaration": 1019,
										"src": "3708:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1153,
									"mutability": "mutable",
									"name": "uniswapRouterAddress",
									"nameLocation": "3770:20:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "3754:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1152,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3754:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "eb7c1e97c05570337fe795ab9d5755a8f731c9c52e756b720275940fa2833276",
									"id": 1161,
									"name": "RouterUpdated",
									"nameLocation": "3807:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldRouter",
												"nameLocation": "3837:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "3821:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "newRouter",
												"nameLocation": "3864:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "3848:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "newPair",
												"nameLocation": "3891:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "3875:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:79:6"
									},
									"src": "3801:99:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c93bc17a700271bf59796cbfa01b47b8b95654209793470e3cdbadf87465a843",
									"id": 1165,
									"name": "ExcludedFromLockPeriod",
									"nameLocation": "3912:22:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3951:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3935:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:25:6"
									},
									"src": "3906:54:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e8bc6ca8488704bf9b677c388e3cc5cfd561aec258a678115c00e2db1cb04bfa",
									"id": 1169,
									"name": "IncludedInTimeLock",
									"nameLocation": "3972:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4007:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "3991:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3990:25:6"
									},
									"src": "3966:50:6"
								},
								{
									"constant": false,
									"id": 1175,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "4085:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "4027:69:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1174,
										"keyType": {
											"id": 1170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4036:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4027:49:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1173,
											"keyType": {
												"id": 1171,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4056:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4047:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4067:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c831f606",
									"id": 1179,
									"mutability": "mutable",
									"name": "timeStamps",
									"nameLocation": "4139:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "4104:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1178,
										"keyType": {
											"id": 1176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4112:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4104:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4123:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3078381c",
									"id": 1183,
									"mutability": "mutable",
									"name": "excludedFromLockPeriod",
									"nameLocation": "4188:22:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "4156:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1182,
										"keyType": {
											"id": 1180,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4164:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4156:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1181,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4175:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67e00e88",
									"id": 1187,
									"mutability": "mutable",
									"name": "uniswapPairs",
									"nameLocation": "4249:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "4217:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1186,
										"keyType": {
											"id": 1184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4225:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4217:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1185,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4236:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1191,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "4305:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "4268:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1190,
										"keyType": {
											"id": 1188,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4277:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4268:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1189,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4288:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1193,
									"mutability": "mutable",
									"name": "inSwap",
									"nameLocation": "4332:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "4319:19:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1192,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4319:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 1196,
									"mutability": "mutable",
									"name": "swapRouter",
									"nameLocation": "4371:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "4345:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1195,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1194,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"4345:18:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1019,
											"src": "4345:18:6"
										},
										"referencedDeclaration": 1019,
										"src": "4345:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "4412:69:6",
										"statements": [
											{
												"expression": {
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1198,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "4423:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4432:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4423:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "4423:13:6"
											},
											{
												"id": 1202,
												"nodeType": "PlaceholderStatement",
												"src": "4447:1:6"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1203,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "4459:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4468:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4459:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "4459:14:6"
											}
										]
									},
									"id": 1208,
									"name": "inSwapFlag",
									"nameLocation": "4401:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4412:0:6"
									},
									"src": "4392:89:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "4532:1112:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1216,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4551:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4555:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4551:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "4563:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "4545:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4545:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "4545:31:6"
											},
											{
												"assignments": [
													1223
												],
												"declarations": [
													{
														"constant": false,
														"id": 1223,
														"mutability": "mutable",
														"name": "_uniswapRouter",
														"nameLocation": "4602:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "4583:33:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 1222,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1221,
																"name": "IUniswapV2Router02",
																"nameLocations": [
																	"4583:18:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1019,
																"src": "4583:18:6"
															},
															"referencedDeclaration": 1019,
															"src": "4583:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307834636637363034334233663937626130363931376342643930463965334132414143314233303665",
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4638:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1224,
														"name": "IUniswapV2Router02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "4619:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1019_$",
															"typeString": "type(contract IUniswapV2Router02)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4619:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4583:98:6"
											},
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "4740:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1229,
														"name": "_uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "4756:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "4740:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "4740:30:6"
											},
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1232,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "4777:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1241,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4860:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																			"typeString": "contract ONEMINUTE"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																			"typeString": "contract ONEMINUTE"
																		}
																	],
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4852:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1239,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4852:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4852:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1243,
																		"name": "_uniswapRouter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "4867:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4882:4:6",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 915,
																	"src": "4867:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4867:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1234,
																				"name": "_uniswapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1223,
																				"src": "4809:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4824:7:6",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 910,
																			"src": "4809:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4809:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1233,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "4791:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$905_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4791:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$905",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4841:10:6",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 904,
															"src": "4791:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4791:98:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4777:112:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "4777:112:6"
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1249,
														"name": "uniswapRouterAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "4897:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307834636637363034334233663937626130363931376342643930463965334132414143314233303665",
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4920:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e"
													},
													"src": "4897:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "4897:65:6"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1253,
															"name": "excludedFromLockPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5109:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1256,
														"indexExpression": {
															"expression": {
																"id": 1254,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5132:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5136:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5132:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5109:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5146:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5109:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "5109:41:6"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1260,
															"name": "excludedFromLockPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5157:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1262,
														"indexExpression": {
															"hexValue": "307837364539386635373545354236333832666633426339453938384639393230393834463241353736",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5180:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x76E98f575E5B6382ff3Bc9E988F9920984F2A576"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5157:66:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5226:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5157:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "5157:73:6"
											},
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1266,
															"name": "excludedFromLockPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5237:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1268,
														"indexExpression": {
															"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5260:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x000000000000000000000000000000000000dEaD"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5237:66:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5306:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5237:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "5237:73:6"
											},
											{
												"expression": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1272,
															"name": "excludedFromLockPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5318:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1277,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1275,
																	"name": "uniswapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "5349:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5341:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1273,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5341:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5341:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5318:46:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5367:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5318:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "5318:53:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1282,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5408:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5412:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5408:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1281,
														"name": "ExcludedFromLockPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "5385:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5385:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "EmitStatement",
												"src": "5380:39:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "307837364539386635373545354236333832666633426339453938384639393230393834463241353736",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5454:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x76E98f575E5B6382ff3Bc9E988F9920984F2A576"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1286,
														"name": "ExcludedFromLockPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "5431:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5431:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "EmitStatement",
												"src": "5426:71:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5532:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x000000000000000000000000000000000000dEaD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1290,
														"name": "ExcludedFromLockPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "5509:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5509:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "EmitStatement",
												"src": "5504:71:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1297,
																	"name": "uniswapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "5619:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5611:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1295,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5611:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5611:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1294,
														"name": "ExcludedFromLockPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "5588:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5588:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "EmitStatement",
												"src": "5583:51:6"
											}
										]
									},
									"id": 1302,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "374d494e",
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4516:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4cc0a7d5a9e029054358c3d995d4d7fc08e11e3333fe4a7fde259b4d59c23c28",
														"typeString": "literal_string \"7MIN\""
													},
													"value": "7MIN"
												},
												{
													"hexValue": "374d494e",
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4524:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4cc0a7d5a9e029054358c3d995d4d7fc08e11e3333fe4a7fde259b4d59c23c28",
														"typeString": "literal_string \"7MIN\""
													},
													"value": "7MIN"
												}
											],
											"id": 1213,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1210,
												"name": "ERC20",
												"nameLocations": [
													"4510:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 764,
												"src": "4510:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4510:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4507:2:6"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4532:0:6"
									},
									"scope": 1887,
									"src": "4496:1148:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "5727:467:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1310,
																"name": "_newRouterAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "5742:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5771:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5763:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1311,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5763:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5763:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5742:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e657720726f7574657220616464726573732063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5775:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_233f9acf124cb1c1c2dd0d3e69dcc92fc28738f6559ae746f968f9f8f623ca16",
																"typeString": "literal_string \"New router address cannot be the zero address\""
															},
															"value": "New router address cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_233f9acf124cb1c1c2dd0d3e69dcc92fc28738f6559ae746f968f9f8f623ca16",
																"typeString": "literal_string \"New router address cannot be the zero address\""
															}
														],
														"id": 1309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5734:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5734:89:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "5734:89:6"
											},
											{
												"assignments": [
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "_newRouter",
														"nameLocation": "5849:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "5830:29:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 1320,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1319,
																"name": "IUniswapV2Router02",
																"nameLocations": [
																	"5830:18:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1019,
																"src": "5830:18:6"
															},
															"referencedDeclaration": 1019,
															"src": "5830:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1325,
												"initialValue": {
													"arguments": [
														{
															"id": 1323,
															"name": "_newRouterAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "5881:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1322,
														"name": "IUniswapV2Router02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "5862:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1019_$",
															"typeString": "type(contract IUniswapV2Router02)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5830:69:6"
											},
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "_pair",
														"nameLocation": "5914:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "5906:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1326,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5906:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1336,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5981:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																		"typeString": "contract ONEMINUTE"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																		"typeString": "contract ONEMINUTE"
																	}
																],
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5973:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1334,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5973:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5973:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1338,
																	"name": "_newRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "5988:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5999:4:6",
																"memberName": "WETH",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 915,
																"src": "5988:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																	"typeString": "function () pure external returns (address)"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5988:17:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1329,
																			"name": "_newRouter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "5940:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																				"typeString": "contract IUniswapV2Router02"
																			}
																		},
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5951:7:6",
																		"memberName": "factory",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 910,
																		"src": "5940:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																			"typeString": "function () pure external returns (address)"
																		}
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5940:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1328,
																"name": "IUniswapV2Factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "5922:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$905_$",
																	"typeString": "type(contract IUniswapV2Factory)"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5922:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$905",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5962:10:6",
														"memberName": "createPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 904,
														"src": "5922:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) external returns (address)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5922:84:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5906:100:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1344,
																"name": "_pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "6021:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6038:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6030:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1345,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6030:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6030:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6021:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65772070616972206e6f7420666f756e64",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6042:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e914626b01dc2ef388f33ebf8d73f5d385aad82193d55f793f3d4dad12129832",
																"typeString": "literal_string \"New pair not found\""
															},
															"value": "New pair not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e914626b01dc2ef388f33ebf8d73f5d385aad82193d55f793f3d4dad12129832",
																"typeString": "literal_string \"New pair not found\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6013:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "6013:50:6"
											},
											{
												"expression": {
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1353,
														"name": "uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "6131:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1354,
														"name": "_newRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "6147:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "6131:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "6131:26:6"
											},
											{
												"expression": {
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1357,
															"name": "uniswapPairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "6164:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1359,
														"indexExpression": {
															"id": 1358,
															"name": "_pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "6177:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6164:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6186:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6164:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "6164:26:6"
											}
										]
									},
									"functionSelector": "eafb5a3c",
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1306,
												"name": "onlyOwner",
												"nameLocations": [
													"5717:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5717:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5717:9:6"
										}
									],
									"name": "setNewRouter",
									"nameLocation": "5668:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "_newRouterAddress",
												"nameLocation": "5689:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "5681:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5681:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5680:27:6"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5727:0:6"
									},
									"scope": 1887,
									"src": "5659:535:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "6270:54:6",
										"statements": [
											{
												"expression": {
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1371,
															"name": "excludedFromLockPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "6277:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1373,
														"indexExpression": {
															"id": 1372,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "6300:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6277:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6312:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6277:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "6277:39:6"
											}
										]
									},
									"functionSelector": "fdf3dd9c",
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1368,
												"name": "onlyOwner",
												"nameLocations": [
													"6260:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6260:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6260:9:6"
										}
									],
									"name": "excludeFromLockPeriod",
									"nameLocation": "6211:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "6241:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "6233:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6233:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6232:18:6"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6270:0:6"
									},
									"scope": 1887,
									"src": "6202:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "6399:55:6",
										"statements": [
											{
												"expression": {
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1385,
															"name": "excludedFromLockPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "6406:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1387,
														"indexExpression": {
															"id": 1386,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "6429:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6406:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6441:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6406:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "6406:40:6"
											}
										]
									},
									"functionSelector": "227b453f",
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1382,
												"name": "onlyOwner",
												"nameLocations": [
													"6389:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6389:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6389:9:6"
										}
									],
									"name": "includeInTimeLock",
									"nameLocation": "6344:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "6370:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "6362:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6362:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6361:18:6"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6399:0:6"
									},
									"scope": 1887,
									"src": "6335:119:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "6519:39:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1398,
															"name": "DEAD_WALLET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "6541:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1397,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "6531:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6531:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1396,
												"id": 1400,
												"nodeType": "Return",
												"src": "6524:29:6"
											}
										]
									},
									"functionSelector": "d89135cd",
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalBurned",
									"nameLocation": "6473:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6484:2:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "6510:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6509:9:6"
									},
									"scope": 1887,
									"src": "6464:94:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "6629:54:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1407,
														"name": "TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "6641:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 1409,
																"name": "DEAD_WALLET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "6666:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1408,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "6656:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6656:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6641:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1406,
												"id": 1412,
												"nodeType": "Return",
												"src": "6634:44:6"
											}
										]
									},
									"functionSelector": "9358928b",
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nameLocation": "6577:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6594:2:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "6620:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6620:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6619:9:6"
									},
									"scope": 1887,
									"src": "6568:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "6794:429:6",
										"statements": [
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "6813:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "6805:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6805:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"nodeType": "VariableDeclarationStatement",
												"src": "6805:11:6"
											},
											{
												"condition": {
													"id": 1430,
													"name": "isbuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1418,
													"src": "6831:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1435,
														"name": "issell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "6863:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"expression": {
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1440,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "6894:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1441,
																"name": "transferfee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "6900:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6894:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1443,
														"nodeType": "ExpressionStatement",
														"src": "6894:17:6"
													},
													"id": 1444,
													"nodeType": "IfStatement",
													"src": "6859:52:6",
													"trueBody": {
														"expression": {
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1436,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "6872:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1437,
																"name": "sellfee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "6878:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6872:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1439,
														"nodeType": "ExpressionStatement",
														"src": "6872:13:6"
													}
												},
												"id": 1445,
												"nodeType": "IfStatement",
												"src": "6827:84:6",
												"trueBody": {
													"expression": {
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1431,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "6839:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 1432,
															"name": "buyfee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "6845:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6839:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1434,
													"nodeType": "ExpressionStatement",
													"src": "6839:12:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1446,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "6927:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6934:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6927:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1451,
												"nodeType": "IfStatement",
												"src": "6923:28:6",
												"trueBody": {
													"expression": {
														"id": 1449,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "6945:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1426,
													"id": 1450,
													"nodeType": "Return",
													"src": "6938:13:6"
												}
											},
											{
												"assignments": [
													1453
												],
												"declarations": [
													{
														"constant": false,
														"id": 1453,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "6970:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "6962:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1452,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6962:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1454,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "6982:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1455,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "6991:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6982:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1457,
														"name": "fee_denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "6997:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6982:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6962:50:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1460,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "7027:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7039:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7027:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1482,
												"nodeType": "IfStatement",
												"src": "7023:157:6",
												"trueBody": {
													"id": 1481,
													"nodeType": "Block",
													"src": "7042:138:6",
													"statements": [
														{
															"expression": {
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1463,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "7059:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1468,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1466,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7075:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																					"typeString": "contract ONEMINUTE"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																					"typeString": "contract ONEMINUTE"
																				}
																			],
																			"id": 1465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7067:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1464,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7067:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7067:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7059:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1469,
																	"name": "feeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1453,
																	"src": "7085:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7059:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1471,
															"nodeType": "ExpressionStatement",
															"src": "7059:35:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1473,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1416,
																		"src": "7123:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1476,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7137:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																					"typeString": "contract ONEMINUTE"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																					"typeString": "contract ONEMINUTE"
																				}
																			],
																			"id": 1475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7129:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1474,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7129:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7129:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1478,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1453,
																		"src": "7144:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1472,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "7114:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7114:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1480,
															"nodeType": "EmitStatement",
															"src": "7109:45:6"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1483,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "7197:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1484,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "7206:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7197:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1486,
												"nodeType": "Return",
												"src": "7190:25:6"
											}
										]
									},
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "takeTaxes",
									"nameLocation": "6702:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "6712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "isbuy",
												"nameLocation": "6731:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "6726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6726:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "issell",
												"nameLocation": "6743:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "6738:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6738:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6759:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "6751:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6711:55:6"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "6785:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6785:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6784:9:6"
									},
									"scope": 1887,
									"src": "6693:530:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1605,
										"nodeType": "Block",
										"src": "7305:735:6",
										"statements": [
											{
												"assignments": [
													1499
												],
												"declarations": [
													{
														"constant": false,
														"id": 1499,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "7343:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1605,
														"src": "7326:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1497,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7326:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1498,
															"nodeType": "ArrayTypeName",
															"src": "7326:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1505,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7364:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7350:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7354:7:6",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1501,
															"nodeType": "ArrayTypeName",
															"src": "7354:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7350:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7326:40:6"
											},
											{
												"expression": {
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1506,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "7377:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1508,
														"indexExpression": {
															"hexValue": "30",
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7382:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7377:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1511,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7395:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																	"typeString": "contract ONEMINUTE"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																	"typeString": "contract ONEMINUTE"
																}
															],
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7387:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1509,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7387:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7387:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7377:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1514,
												"nodeType": "ExpressionStatement",
												"src": "7377:23:6"
											},
											{
												"expression": {
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1515,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "7411:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1517,
														"indexExpression": {
															"hexValue": "31",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7416:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7411:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1518,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "7421:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7432:4:6",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 915,
															"src": "7421:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7421:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7411:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "7411:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1523,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "7455:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1528,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1526,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7475:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																			"typeString": "contract ONEMINUTE"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																			"typeString": "contract ONEMINUTE"
																		}
																	],
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7467:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1524,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7467:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7467:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7455:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1533,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1531,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "7490:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7482:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7482:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7482:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7455:47:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7511:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1535,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7511:7:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1534,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7506:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7506:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7520:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7506:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7455:68:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "7451:168:6",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "7525:94:6",
													"statements": [
														{
															"expression": {
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1540,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "7540:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1549,
																		"indexExpression": {
																			"arguments": [
																				{
																					"id": 1543,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "7560:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																						"typeString": "contract ONEMINUTE"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																						"typeString": "contract ONEMINUTE"
																					}
																				],
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7552:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1541,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7552:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7552:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7540:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1550,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1547,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1196,
																				"src": "7575:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			],
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7567:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1545,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7567:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7567:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7540:47:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7595:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1552,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7595:7:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 1551,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7590:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7590:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7604:3:6",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "7590:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7540:67:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1557,
															"nodeType": "ExpressionStatement",
															"src": "7540:67:6"
														}
													]
												}
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1572,
															"nodeType": "Block",
															"src": "7836:2:6",
															"statements": []
														},
														"errorName": "",
														"id": 1573,
														"nodeType": "TryCatchClause",
														"src": "7836:2:6"
													},
													{
														"block": {
															"id": 1575,
															"nodeType": "Block",
															"src": "7845:33:6",
															"statements": [
																{
																	"functionReturnParameters": 1494,
																	"id": 1574,
																	"nodeType": "Return",
																	"src": "7860:7:6"
																}
															]
														},
														"errorName": "",
														"id": 1576,
														"nodeType": "TryCatchClause",
														"src": "7839:39:6"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 1562,
															"name": "contractTokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "7711:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7746:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1564,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "7762:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1567,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7789:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																		"typeString": "contract ONEMINUTE"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																		"typeString": "contract ONEMINUTE"
																	}
																],
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7781:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1565,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7781:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7781:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1569,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7809:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7815:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7809:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1560,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "7635:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7646:50:6",
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 975,
														"src": "7635:61:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7635:200:6",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "TryStatement",
												"src": "7631:247:6"
											},
											{
												"assignments": [
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7893:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1605,
														"src": "7888:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1578,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7888:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1580,
												"nodeType": "VariableDeclarationStatement",
												"src": "7888:12:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1583,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7924:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																		"typeString": "contract ONEMINUTE"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																		"typeString": "contract ONEMINUTE"
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7916:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7916:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7916:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7930:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "7916:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7940:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7916:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1604,
												"nodeType": "IfStatement",
												"src": "7913:118:6",
												"trueBody": {
													"id": 1603,
													"nodeType": "Block",
													"src": "7943:88:6",
													"statements": [
														{
															"expression": {
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1588,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1579,
																			"src": "7945:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		null
																	],
																	"id": 1589,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "7944:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$__$",
																		"typeString": "tuple(bool,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "",
																			"id": 1599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8026:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			},
																			"value": ""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				}
																			],
																			"expression": {
																				"id": 1590,
																				"name": "buybackandburnAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1081,
																				"src": "7957:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7979:4:6",
																			"memberName": "call",
																			"nodeType": "MemberAccess",
																			"src": "7957:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																			}
																		},
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"names": [
																			"value",
																			"gas"
																		],
																		"nodeType": "FunctionCallOptions",
																		"options": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1594,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "7999:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																								"typeString": "contract ONEMINUTE"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_ONEMINUTE_$1887",
																								"typeString": "contract ONEMINUTE"
																							}
																						],
																						"id": 1593,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7991:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1592,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "7991:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7991:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 1596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8005:7:6",
																				"memberName": "balance",
																				"nodeType": "MemberAccess",
																				"src": "7991:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "3335303030",
																				"id": 1597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8019:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_35000_by_1",
																					"typeString": "int_const 35000"
																				},
																				"value": "35000"
																			}
																		],
																		"src": "7957:68:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7957:72:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bool,bytes memory)"
																	}
																},
																"src": "7944:85:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1602,
															"nodeType": "ExpressionStatement",
															"src": "7944:85:6"
														}
													]
												}
											}
										]
									},
									"id": 1606,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1493,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1492,
												"name": "inSwapFlag",
												"nameLocations": [
													"7294:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1208,
												"src": "7294:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7294:10:6"
										}
									],
									"name": "internalSwap",
									"nameLocation": "7242:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "contractTokenBalance",
												"nameLocation": "7263:20:6",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "7255:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7255:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7254:30:6"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7305:0:6"
									},
									"scope": 1887,
									"src": "7233:807:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "8124:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1619,
															"name": "buybackandburnAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "8161:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1620,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "8184:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1616,
																	"name": "tokenAdd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "8142:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1615,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "8135:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$842_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8135:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$842",
																"typeString": "contract IERC20"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8152:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 809,
														"src": "8135:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8135:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "8135:56:6"
											}
										]
									},
									"functionSelector": "8cd4426d",
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1613,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1612,
												"name": "onlyOwner",
												"nameLocations": [
													"8114:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "8114:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8114:9:6"
										}
									],
									"name": "rescueERC20",
									"nameLocation": "8059:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "tokenAdd",
												"nameLocation": "8079:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "8071:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8071:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8097:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "8089:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8070:34:6"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8124:0:6"
									},
									"scope": 1887,
									"src": "8050:149:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "8246:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1630,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8263:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8267:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8263:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1632,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "8275:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1629,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "8257:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8257:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1634,
												"nodeType": "ExpressionStatement",
												"src": "8257:25:6"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8216:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8229:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "8221:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8221:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8220:16:6"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8246:0:6"
									},
									"scope": 1887,
									"src": "8207:83:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										301
									],
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "8400:106:6",
										"statements": [
											{
												"assignments": [
													1649
												],
												"declarations": [
													{
														"constant": false,
														"id": 1649,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "8415:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1661,
														"src": "8407:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1648,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8407:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1652,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1650,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "8424:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8424:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8407:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1654,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "8453:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1655,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "8461:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1656,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "8472:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1653,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1886
														],
														"referencedDeclaration": 1886,
														"src": "8443:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "8443:36:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8494:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1647,
												"id": 1660,
												"nodeType": "Return",
												"src": "8487:11:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1644,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1643,
												"name": "onlyWallets",
												"nameLocations": [
													"8373:11:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1117,
												"src": "8373:11:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8373:11:6"
										}
									],
									"name": "transfer",
									"nameLocation": "8313:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1642,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8364:8:6"
									},
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8330:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "8322:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8322:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8349:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "8341:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8321:35:6"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "8394:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8394:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8393:6:6"
									},
									"scope": 1887,
									"src": "8304:202:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "8618:284:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1675,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "8635:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "8643:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1677,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "8654:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1674,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1886
														],
														"referencedDeclaration": 1886,
														"src": "8625:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8625:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "8625:36:6"
											},
											{
												"assignments": [
													1681
												],
												"declarations": [
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "8676:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1706,
														"src": "8668:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8668:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1687,
												"initialValue": {
													"arguments": [
														{
															"id": 1683,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "8705:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1684,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "8713:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8713:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1682,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "8695:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8695:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8668:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1689,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "8741:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1690,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "8761:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8741:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8769:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 1688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8733:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8733:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "8733:79:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1696,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "8828:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1697,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "8836:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8836:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1699,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "8850:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1700,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "8869:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8850:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1695,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "8819:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8819:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "8819:57:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8890:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1673,
												"id": 1705,
												"nodeType": "Return",
												"src": "8883:11:6"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "8523:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1670,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8594:8:6"
									},
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8544:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "8536:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8536:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8560:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "8552:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8579:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "8571:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8535:51:6"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "8612:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8612:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8611:6:6"
									},
									"scope": 1887,
									"src": "8514:388:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "8940:57:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420455448207472616e736665727320617265206e6f7420616c6c6f776564",
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8954:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72a8f4699bd31e4d4bf29e6b3bbd8de7ad11d90ef94a87135c1bf5c84a95434f",
																"typeString": "literal_string \"Direct ETH transfers are not allowed\""
															},
															"value": "Direct ETH transfers are not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_72a8f4699bd31e4d4bf29e6b3bbd8de7ad11d90ef94a87135c1bf5c84a95434f",
																"typeString": "literal_string \"Direct ETH transfers are not allowed\""
															}
														],
														"id": 1710,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "8947:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8947:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "8947:46:6"
											}
										]
									},
									"id": 1715,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8920:2:6"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8940:0:6"
									},
									"scope": 1887,
									"src": "8912:85:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										524
									],
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "9102:1742:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1728,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "9121:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9130:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9121:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9133:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 1727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9113:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9113:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "9113:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1736,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1717,
																		"src": "9202:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1735,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "9192:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9192:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1738,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "9213:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9192:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9221:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9184:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9184:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "9184:60:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1743,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "9263:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1744,
														"name": "DEAD_WALLET",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "9276:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9263:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1751,
												"nodeType": "IfStatement",
												"src": "9259:77:6",
												"trueBody": {
													"id": 1750,
													"nodeType": "Block",
													"src": "9289:47:6",
													"statements": [
														{
															"expression": {
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1746,
																	"name": "CIRCULATING_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "9300:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1747,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "9322:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9300:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1749,
															"nodeType": "ExpressionStatement",
															"src": "9300:28:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1752,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "9465:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1753,
														"name": "dev_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "9475:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9465:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1767,
												"nodeType": "IfStatement",
												"src": "9461:255:6",
												"trueBody": {
													"id": 1766,
													"nodeType": "Block",
													"src": "9487:229:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1757,
																						"name": "recipient",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1719,
																						"src": "9629:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1756,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 276,
																					"src": "9619:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9619:20:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1759,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1721,
																				"src": "9642:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9619:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1761,
																			"name": "maxTokensPerWallet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1075,
																			"src": "9652:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9619:51:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d6178696d756d20746f6b656e73207065722077616c6c6574",
																		"id": 1763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9672:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_52bcbaa1ed6777d01f8cf40ae7a891b900433429266503732d7209712bf7ebec",
																			"typeString": "literal_string \"Exceeds maximum tokens per wallet\""
																		},
																		"value": "Exceeds maximum tokens per wallet"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_52bcbaa1ed6777d01f8cf40ae7a891b900433429266503732d7209712bf7ebec",
																			"typeString": "literal_string \"Exceeds maximum tokens per wallet\""
																		}
																	],
																	"id": 1755,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9611:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9611:97:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1765,
															"nodeType": "ExpressionStatement",
															"src": "9611:97:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9779:31:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1768,
																	"name": "excludedFromLockPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "9780:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1770,
																"indexExpression": {
																	"id": 1769,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "9803:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9780:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1772,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "9814:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1773,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9824:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9824:7:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9814:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9779:52:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1777,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "9835:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1780,
																	"name": "uniswapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "9853:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9845:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1778,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9845:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9845:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9835:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9779:88:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1795,
												"nodeType": "IfStatement",
												"src": "9775:188:6",
												"trueBody": {
													"id": 1794,
													"nodeType": "Block",
													"src": "9869:94:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1785,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "9888:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9894:9:6",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "9888:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1787,
																				"name": "timeStamps",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1179,
																				"src": "9907:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1789,
																			"indexExpression": {
																				"id": 1788,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1717,
																				"src": "9918:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9907:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9888:37:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54696d65206c6f636b206973207374696c6c20616374697665",
																		"id": 1791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9927:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fdc40d5bf1e9a3e37562540d9a9f4a6980aaf3d1865b341beb849fcd9353b021",
																			"typeString": "literal_string \"Time lock is still active\""
																		},
																		"value": "Time lock is still active"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fdc40d5bf1e9a3e37562540d9a9f4a6980aaf3d1865b341beb849fcd9353b021",
																			"typeString": "literal_string \"Time lock is still active\""
																		}
																	],
																	"id": 1784,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9880:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9880:75:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1793,
															"nodeType": "ExpressionStatement",
															"src": "9880:75:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10029:34:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1796,
																	"name": "excludedFromLockPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "10030:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1798,
																"indexExpression": {
																	"id": 1797,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "10053:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10030:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1800,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "10067:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1801,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10080:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10080:7:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10067:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "10029:58:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1805,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "10091:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1808,
																	"name": "uniswapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "10112:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10104:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1806,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10104:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10104:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10091:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10029:97:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1838,
												"nodeType": "IfStatement",
												"src": "10025:290:6",
												"trueBody": {
													"id": 1837,
													"nodeType": "Block",
													"src": "10128:187:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1813,
																					"name": "timeStamps",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "10147:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1815,
																				"indexExpression": {
																					"id": 1814,
																					"name": "recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1719,
																					"src": "10158:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10147:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10172:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "10147:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1818,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "10177:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10183:9:6",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "10177:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 1820,
																					"name": "timeStamps",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "10196:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1822,
																				"indexExpression": {
																					"id": 1821,
																					"name": "recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1719,
																					"src": "10207:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10196:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10177:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "10147:70:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "526563697069656e7420696e2074696d65206c6f636b",
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10219:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0fb15f1d1670556d93dd903347428faa4f0296a22c199218a3925475a0091315",
																			"typeString": "literal_string \"Recipient in time lock\""
																		},
																		"value": "Recipient in time lock"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_0fb15f1d1670556d93dd903347428faa4f0296a22c199218a3925475a0091315",
																			"typeString": "literal_string \"Recipient in time lock\""
																		}
																	],
																	"id": 1812,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10139:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10139:105:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1827,
															"nodeType": "ExpressionStatement",
															"src": "10139:105:6"
														},
														{
															"expression": {
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1828,
																		"name": "timeStamps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "10255:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1830,
																	"indexExpression": {
																		"id": 1829,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1719,
																		"src": "10266:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10255:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1831,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "10279:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10285:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "10279:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1833,
																		"name": "lockPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1058,
																		"src": "10297:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10279:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10255:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1836,
															"nodeType": "ExpressionStatement",
															"src": "10255:52:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1839,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "10375:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1840,
															"name": "uniswapPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "10388:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10375:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1842,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "10403:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1845,
																	"name": "uniswapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "10421:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1019",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10413:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1843,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10413:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10413:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10403:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10375:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1876,
												"nodeType": "IfStatement",
												"src": "10371:417:6",
												"trueBody": {
													"id": 1875,
													"nodeType": "Block",
													"src": "10437:351:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1849,
																		"name": "timeStamps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "10539:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1851,
																	"indexExpression": {
																		"id": 1850,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1717,
																		"src": "10550:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10539:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10561:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10539:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1865,
															"nodeType": "IfStatement",
															"src": "10535:136:6",
															"trueBody": {
																"id": 1864,
																"nodeType": "Block",
																"src": "10564:107:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1860,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1855,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "10587:5:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1856,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10593:9:6",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "10587:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"baseExpression": {
																							"id": 1857,
																							"name": "timeStamps",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1179,
																							"src": "10606:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1859,
																						"indexExpression": {
																							"id": 1858,
																							"name": "sender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1717,
																							"src": "10617:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10606:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10587:37:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "53656c6c2074696d65206c6f636b206973207374696c6c20616374697665",
																					"id": 1861,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10626:32:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_bd95855e7362b40a1af009b256f3b9c8bfba337d252efa0c48f8ec55da2d3740",
																						"typeString": "literal_string \"Sell time lock is still active\""
																					},
																					"value": "Sell time lock is still active"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_bd95855e7362b40a1af009b256f3b9c8bfba337d252efa0c48f8ec55da2d3740",
																						"typeString": "literal_string \"Sell time lock is still active\""
																					}
																				],
																				"id": 1854,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "10579:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10579:80:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1863,
																		"nodeType": "ExpressionStatement",
																		"src": "10579:80:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1866,
																		"name": "timeStamps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "10731:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1868,
																	"indexExpression": {
																		"id": 1867,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1717,
																		"src": "10742:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10731:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1869,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "10752:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10758:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "10752:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1871,
																		"name": "lockPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1058,
																		"src": "10770:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10752:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10731:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1874,
															"nodeType": "ExpressionStatement",
															"src": "10731:49:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1880,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "10812:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1881,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "10820:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1882,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "10831:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1877,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "10796:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ONEMINUTE_$1887_$",
																"typeString": "type(contract super ONEMINUTE)"
															}
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10802:9:6",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "10796:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10796:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "10796:42:6"
											}
										]
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1725,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1724,
												"name": "onlyEOAs",
												"nameLocations": [
													"9093:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1146,
												"src": "9093:8:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9093:8:6"
										}
									],
									"name": "_transfer",
									"nameLocation": "9014:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9084:8:6"
									},
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9032:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "9024:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9048:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "9040:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9040:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9067:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "9059:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9059:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9023:51:6"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9102:0:6"
									},
									"scope": 1887,
									"src": "9005:1839:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1888,
							"src": "2020:8829:6",
							"usedErrors": []
						}
					],
					"src": "35:10814:6"
				},
				"id": 6
			}
		}
	}
}