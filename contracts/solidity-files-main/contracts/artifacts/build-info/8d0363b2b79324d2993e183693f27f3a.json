{
	"id": "8d0363b2b79324d2993e183693f27f3a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/brosniper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // Import the IERC20 interface\r\n\r\ninterface IPancakeSwapRouter {\r\n    function swapExactETHForTokens(uint256 amountOutMin, address[] calldata path, address to, uint256 deadline)\r\n        external\r\n        payable\r\n        returns (uint256[] memory amounts);\r\n    function swapExactTokensForETH(uint256 amountIn, uint256 amountOutMin, address[] calldata path, address to, uint256 deadline)\r\n        external\r\n        returns (uint256[] memory amounts);\r\n}\r\n\r\ncontract PancakeSwapSniper {\r\n    address private constant PANCAKESWAP_ROUTER_ADDRESS = 0x10ED43C718714eb63d5aA57B78B54704E256024E; // 0x10ED43C718714eb63d5aA57B78B54704E256024E 0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 Replace with the PancakeSwap Router address\r\n    address private constant WBNB_ADDRESS = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c; // WBNB token address\r\n    address private TARGET_TOKEN_ADDRESS; // Dynamic target token address\r\n    IPancakeSwapRouter private router;\r\n    uint256 private initialBNBInvestment;\r\n    bool private sold;\r\n\r\n    constructor() {\r\n        router = IPancakeSwapRouter(PANCAKESWAP_ROUTER_ADDRESS);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function setTargetTokenAddress(address _targetTokenAddress) external {\r\n        // This function allows you to dynamically set the target token address\r\n        require(TARGET_TOKEN_ADDRESS == address(0), \"Target token address already set\");\r\n        TARGET_TOKEN_ADDRESS = _targetTokenAddress;\r\n    }\r\n\r\n    function swapBNBForToken() external payable {\r\n        require(TARGET_TOKEN_ADDRESS != address(0), \"Target token address not set\");\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = WBNB_ADDRESS;\r\n        path[1] = TARGET_TOKEN_ADDRESS;\r\n\r\n        uint256 amountOutMin = 0; // No minimum token amount specified, allow any amount\r\n\r\n        uint256 deadline = block.timestamp + 300; // Replace with your desired deadline in seconds\r\n\r\n        router.swapExactETHForTokens{value: msg.value}(amountOutMin, path, address(this), deadline);\r\n\r\n        // Store the initial BNB investment\r\n        if (initialBNBInvestment == 0) {\r\n            initialBNBInvestment = msg.value;\r\n        }\r\n\r\n        // Check if tokens are worth 10x the initial investment and sell\r\n        if (getTokenBalance() >= initialBNBInvestment * 10) {\r\n            sellTokensForBNB();\r\n            sold = true;\r\n        }\r\n    }\r\n\r\n    function sellTokensForBNB() private {\r\n        address[] memory path = new address[](2);\r\n        path[0] = TARGET_TOKEN_ADDRESS;\r\n        path[1] = WBNB_ADDRESS;\r\n\r\n        uint256 amountIn = getTokenBalance();\r\n\r\n        uint256 deadline = block.timestamp + 300; // Replace with your desired deadline in seconds\r\n\r\n        router.swapExactTokensForETH(amountIn, 0, path, address(this), deadline);\r\n    }\r\n\r\n    function getTokenBalance() private view returns (uint256) {\r\n        // Get the balance of the target token held by this contract\r\n        return IERC20(TARGET_TOKEN_ADDRESS).balanceOf(address(this));\r\n    }\r\n\r\n    function withdrawBNB() external {\r\n        uint256 amount = address(this).balance;\r\n        (bool success, ) = msg.sender.call{value: amount}(\"\");\r\n        require(success, \"BNB withdrawal failed\");\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/brosniper.sol": {
				"IPancakeSwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/brosniper.sol\":\"IPancakeSwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/brosniper.sol\":{\"keccak256\":\"0x3605bd2ffef62e0bff3c93e11c977cedc362d0935d4f1a79d1c312054cf4f170\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf68a3e5d6e6aefee80866af9f566b4cc3ff6da97c6f79fa030f277fa40c938c\",\"dweb:/ipfs/QmcyP54KpwMeLFMPB3r6gTXnnEmdZwRcJoBN8pDK2gf57E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PancakeSwapSniper": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_targetTokenAddress",
									"type": "address"
								}
							],
							"name": "setTargetTokenAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapBNBForToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawBNB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/brosniper.sol\":575:3345  contract PancakeSwapSniper {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/brosniper.sol\":1140:1228  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/brosniper.sol\":1165:1171  router */\n  0x01\n    /* \"contracts/brosniper.sol\":1165:1220  router = IPancakeSwapRouter(PANCAKESWAP_ROUTER_ADDRESS) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/brosniper.sol\":663:705  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n    /* \"contracts/brosniper.sol\":1165:1220  router = IPancakeSwapRouter(PANCAKESWAP_ROUTER_ADDRESS) */\n  or\n  swap1\n  sstore\n    /* \"contracts/brosniper.sol\":575:3345  contract PancakeSwapSniper {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/brosniper.sol\":575:3345  contract PancakeSwapSniper {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d111d13\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x387da661\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7a0e335c\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/brosniper.sol\":3137:3342  function withdrawBNB() external {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/brosniper.sol\":1582:2501  function swapBNBForToken() external payable {\r... */\n    tag_4:\n      tag_9\n      tag_12\n      jump\t// in\n        /* \"contracts/brosniper.sol\":1273:1574  function setTargetTokenAddress(address _targetTokenAddress) external {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_9\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n        /* \"contracts/brosniper.sol\":3137:3342  function withdrawBNB() external {\r... */\n    tag_10:\n        /* \"contracts/brosniper.sol\":3248:3282  msg.sender.call{value: amount}(\"\") */\n      mload(0x40)\n        /* \"contracts/brosniper.sol\":3197:3218  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/brosniper.sol\":3180:3194  uint256 amount */\n      0x00\n      swap1\n        /* \"contracts/brosniper.sol\":3248:3258  msg.sender */\n      caller\n      swap1\n        /* \"contracts/brosniper.sol\":3197:3218  address(this).balance */\n      dup4\n      swap1\n        /* \"contracts/brosniper.sol\":3248:3282  msg.sender.call{value: amount}(\"\") */\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_23\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_22)\n    tag_23:\n      0x60\n      swap2\n      pop\n    tag_22:\n      pop\n        /* \"contracts/brosniper.sol\":3229:3282  (bool success, ) = msg.sender.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/brosniper.sol\":3301:3308  success */\n      dup1\n        /* \"contracts/brosniper.sol\":3293:3334  require(success, \"BNB withdrawal failed\") */\n      tag_24\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n        /* \"contracts/brosniper.sol\":3137:3342  function withdrawBNB() external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/brosniper.sol\":1582:2501  function swapBNBForToken() external payable {\r... */\n    tag_12:\n        /* \"contracts/brosniper.sol\":1677:1678  0 */\n      0x00\n        /* \"contracts/brosniper.sol\":1645:1665  TARGET_TOKEN_ADDRESS */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/brosniper.sol\":1637:1712  require(TARGET_TOKEN_ADDRESS != address(0), \"Target token address not set\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap1\n      tag_30\n      jump\t// in\n    tag_28:\n        /* \"contracts/brosniper.sol\":1749:1765  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/brosniper.sol\":1763:1764  2 */\n      0x02\n        /* \"contracts/brosniper.sol\":1749:1765  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/brosniper.sol\":1725:1746  address[] memory path */\n      0x00\n      swap3\n        /* \"contracts/brosniper.sol\":1749:1765  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/brosniper.sol\":1725:1765  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/brosniper.sol\":885:927  0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c */\n      0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\n        /* \"contracts/brosniper.sol\":1776:1780  path */\n      dup2\n        /* \"contracts/brosniper.sol\":1781:1782  0 */\n      0x00\n        /* \"contracts/brosniper.sol\":1776:1783  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_33\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/brosniper.sol\":1776:1798  path[0] = WBNB_ADDRESS */\n      swap3\n      dup4\n      and\n        /* \"contracts/brosniper.sol\":1776:1783  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/brosniper.sol\":1776:1798  path[0] = WBNB_ADDRESS */\n      mstore\n        /* \"contracts/brosniper.sol\":1819:1839  TARGET_TOKEN_ADDRESS */\n      sload(0x00)\n        /* \"contracts/brosniper.sol\":1809:1816  path[1] */\n      dup3\n      mload\n        /* \"contracts/brosniper.sol\":1819:1839  TARGET_TOKEN_ADDRESS */\n      swap2\n      and\n      swap1\n        /* \"contracts/brosniper.sol\":1809:1813  path */\n      dup3\n      swap1\n        /* \"contracts/brosniper.sol\":1819:1839  TARGET_TOKEN_ADDRESS */\n      0x01\n      swap1\n        /* \"contracts/brosniper.sol\":1809:1816  path[1] */\n      dup2\n      lt\n      tag_34\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/brosniper.sol\":1809:1839  path[1] = TARGET_TOKEN_ADDRESS */\n      swap1\n      swap3\n      and\n        /* \"contracts/brosniper.sol\":1809:1816  path[1] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"contracts/brosniper.sol\":1809:1839  path[1] = TARGET_TOKEN_ADDRESS */\n      mstore\n        /* \"contracts/brosniper.sol\":1852:1872  uint256 amountOutMin */\n      0x00\n      dup1\n        /* \"contracts/brosniper.sol\":1963:1984  block.timestamp + 300 */\n      tag_35\n        /* \"contracts/brosniper.sol\":1963:1978  block.timestamp */\n      timestamp\n        /* \"contracts/brosniper.sol\":1981:1984  300 */\n      0x012c\n        /* \"contracts/brosniper.sol\":1963:1984  block.timestamp + 300 */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/brosniper.sol\":2046:2052  router */\n      sload(0x01)\n        /* \"contracts/brosniper.sol\":2046:2137  router.swapExactETHForTokens{value: msg.value}(amountOutMin, path, address(this), deadline) */\n      mload(0x40)\n      shl(0xe0, 0x7ff36ab5)\n      dup2\n      mstore\n        /* \"contracts/brosniper.sol\":1944:1984  uint256 deadline = block.timestamp + 300 */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/brosniper.sol\":2046:2052  router */\n      and\n      swap1\n        /* \"contracts/brosniper.sol\":2046:2074  router.swapExactETHForTokens */\n      0x7ff36ab5\n      swap1\n        /* \"contracts/brosniper.sol\":2082:2091  msg.value */\n      callvalue\n      swap1\n        /* \"contracts/brosniper.sol\":2046:2137  router.swapExactETHForTokens{value: msg.value}(amountOutMin, path, address(this), deadline) */\n      tag_37\n      swap1\n        /* \"contracts/brosniper.sol\":2093:2105  amountOutMin */\n      dup7\n      swap1\n        /* \"contracts/brosniper.sol\":2107:2111  path */\n      dup9\n      swap1\n        /* \"contracts/brosniper.sol\":2121:2125  this */\n      address\n      swap1\n        /* \"contracts/brosniper.sol\":1944:1984  uint256 deadline = block.timestamp + 300 */\n      dup9\n      swap1\n        /* \"contracts/brosniper.sol\":2046:2137  router.swapExactETHForTokens{value: msg.value}(amountOutMin, path, address(this), deadline) */\n      0x04\n      add\n      tag_38\n      jump\t// in\n    tag_37:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_42\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      pop\n        /* \"contracts/brosniper.sol\":2199:2219  initialBNBInvestment */\n      sload(0x02)\n        /* \"contracts/brosniper.sol\":2195:2285  if (initialBNBInvestment == 0) {\r... */\n      tag_44\n      jumpi\n        /* \"contracts/brosniper.sol\":2264:2273  msg.value */\n      callvalue\n        /* \"contracts/brosniper.sol\":2241:2261  initialBNBInvestment */\n      0x02\n        /* \"contracts/brosniper.sol\":2241:2273  initialBNBInvestment = msg.value */\n      sstore\n        /* \"contracts/brosniper.sol\":2195:2285  if (initialBNBInvestment == 0) {\r... */\n    tag_44:\n        /* \"contracts/brosniper.sol\":2396:2416  initialBNBInvestment */\n      sload(0x02)\n        /* \"contracts/brosniper.sol\":2396:2421  initialBNBInvestment * 10 */\n      tag_45\n      swap1\n        /* \"contracts/brosniper.sol\":2419:2421  10 */\n      0x0a\n        /* \"contracts/brosniper.sol\":2396:2421  initialBNBInvestment * 10 */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"contracts/brosniper.sol\":2375:2392  getTokenBalance() */\n      tag_47\n        /* \"contracts/brosniper.sol\":2375:2390  getTokenBalance */\n      tag_48\n        /* \"contracts/brosniper.sol\":2375:2392  getTokenBalance() */\n      jump\t// in\n    tag_47:\n        /* \"contracts/brosniper.sol\":2375:2421  getTokenBalance() >= initialBNBInvestment * 10 */\n      lt\n        /* \"contracts/brosniper.sol\":2371:2494  if (getTokenBalance() >= initialBNBInvestment * 10) {\r... */\n      tag_49\n      jumpi\n        /* \"contracts/brosniper.sol\":2438:2456  sellTokensForBNB() */\n      tag_50\n        /* \"contracts/brosniper.sol\":2438:2454  sellTokensForBNB */\n      tag_51\n        /* \"contracts/brosniper.sol\":2438:2456  sellTokensForBNB() */\n      jump\t// in\n    tag_50:\n        /* \"contracts/brosniper.sol\":2471:2475  sold */\n      0x03\n        /* \"contracts/brosniper.sol\":2471:2482  sold = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/brosniper.sol\":2478:2482  true */\n      0x01\n        /* \"contracts/brosniper.sol\":2471:2482  sold = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/brosniper.sol\":2371:2494  if (getTokenBalance() >= initialBNBInvestment * 10) {\r... */\n    tag_49:\n        /* \"contracts/brosniper.sol\":1582:2501  function swapBNBForToken() external payable {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/brosniper.sol\":1273:1574  function setTargetTokenAddress(address _targetTokenAddress) external {\r... */\n    tag_17:\n        /* \"contracts/brosniper.sol\":1474:1475  0 */\n      0x00\n        /* \"contracts/brosniper.sol\":1442:1462  TARGET_TOKEN_ADDRESS */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/brosniper.sol\":1442:1476  TARGET_TOKEN_ADDRESS == address(0) */\n      iszero\n        /* \"contracts/brosniper.sol\":1434:1513  require(TARGET_TOKEN_ADDRESS == address(0), \"Target token address already set\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap1\n      tag_55\n      jump\t// in\n    tag_53:\n        /* \"contracts/brosniper.sol\":1524:1544  TARGET_TOKEN_ADDRESS */\n      0x00\n        /* \"contracts/brosniper.sol\":1524:1566  TARGET_TOKEN_ADDRESS = _targetTokenAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/brosniper.sol\":1273:1574  function setTargetTokenAddress(address _targetTokenAddress) external {\r... */\n      jump\t// out\n        /* \"contracts/brosniper.sol\":2922:3129  function getTokenBalance() private view returns (uint256) {\r... */\n    tag_48:\n        /* \"contracts/brosniper.sol\":2971:2978  uint256 */\n      0x00\n        /* \"contracts/brosniper.sol\":3075:3095  TARGET_TOKEN_ADDRESS */\n      dup1\n      sload\n        /* \"contracts/brosniper.sol\":3068:3121  IERC20(TARGET_TOKEN_ADDRESS).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/brosniper.sol\":3075:3095  TARGET_TOKEN_ADDRESS */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/brosniper.sol\":3068:3106  IERC20(TARGET_TOKEN_ADDRESS).balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/brosniper.sol\":3068:3121  IERC20(TARGET_TOKEN_ADDRESS).balanceOf(address(this)) */\n      tag_57\n      swap1\n        /* \"contracts/brosniper.sol\":3115:3119  this */\n      address\n      swap1\n        /* \"contracts/brosniper.sol\":3068:3121  IERC20(TARGET_TOKEN_ADDRESS).balanceOf(address(this)) */\n      0x04\n      add\n      tag_58\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/brosniper.sol\":3061:3121  return IERC20(TARGET_TOKEN_ADDRESS).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/brosniper.sol\":2922:3129  function getTokenBalance() private view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/brosniper.sol\":2509:2914  function sellTokensForBNB() private {\r... */\n    tag_51:\n        /* \"contracts/brosniper.sol\":2580:2596  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/brosniper.sol\":2594:2595  2 */\n      0x02\n        /* \"contracts/brosniper.sol\":2580:2596  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/brosniper.sol\":2556:2577  address[] memory path */\n      0x00\n      swap3\n        /* \"contracts/brosniper.sol\":2580:2596  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"contracts/brosniper.sol\":2617:2637  TARGET_TOKEN_ADDRESS */\n      0x00\n      dup1\n      sload\n        /* \"contracts/brosniper.sol\":2607:2614  path[0] */\n      dup4\n      mload\n      swap4\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/brosniper.sol\":2617:2637  TARGET_TOKEN_ADDRESS */\n      and\n      swap3\n        /* \"contracts/brosniper.sol\":2607:2614  path[0] */\n      dup5\n      swap3\n      pop\n      tag_67\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_67:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/brosniper.sol\":2607:2637  path[0] = TARGET_TOKEN_ADDRESS */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/brosniper.sol\":885:927  0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c */\n      0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\n        /* \"contracts/brosniper.sol\":2648:2652  path */\n      dup2\n        /* \"contracts/brosniper.sol\":2653:2654  1 */\n      0x01\n        /* \"contracts/brosniper.sol\":2648:2655  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_68\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_68:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/brosniper.sol\":2648:2670  path[1] = WBNB_ADDRESS */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/brosniper.sol\":2683:2699  uint256 amountIn */\n      0x00\n        /* \"contracts/brosniper.sol\":2702:2719  getTokenBalance() */\n      tag_69\n        /* \"contracts/brosniper.sol\":2702:2717  getTokenBalance */\n      tag_48\n        /* \"contracts/brosniper.sol\":2702:2719  getTokenBalance() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/brosniper.sol\":2683:2719  uint256 amountIn = getTokenBalance() */\n      swap1\n      pop\n        /* \"contracts/brosniper.sol\":2732:2748  uint256 deadline */\n      0x00\n        /* \"contracts/brosniper.sol\":2751:2772  block.timestamp + 300 */\n      tag_70\n        /* \"contracts/brosniper.sol\":2751:2766  block.timestamp */\n      timestamp\n        /* \"contracts/brosniper.sol\":2769:2772  300 */\n      0x012c\n        /* \"contracts/brosniper.sol\":2751:2772  block.timestamp + 300 */\n      tag_36\n      jump\t// in\n    tag_70:\n        /* \"contracts/brosniper.sol\":2834:2840  router */\n      sload(0x01)\n        /* \"contracts/brosniper.sol\":2834:2906  router.swapExactTokensForETH(amountIn, 0, path, address(this), deadline) */\n      mload(0x40)\n      shl(0xe0, 0x18cbafe5)\n      dup2\n      mstore\n        /* \"contracts/brosniper.sol\":2732:2772  uint256 deadline = block.timestamp + 300 */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/brosniper.sol\":2834:2840  router */\n      and\n      swap1\n        /* \"contracts/brosniper.sol\":2834:2862  router.swapExactTokensForETH */\n      0x18cbafe5\n      swap1\n        /* \"contracts/brosniper.sol\":2834:2906  router.swapExactTokensForETH(amountIn, 0, path, address(this), deadline) */\n      tag_71\n      swap1\n        /* \"contracts/brosniper.sol\":2863:2871  amountIn */\n      dup6\n      swap1\n        /* \"contracts/brosniper.sol\":2834:2840  router */\n      0x00\n      swap1\n        /* \"contracts/brosniper.sol\":2876:2880  path */\n      dup9\n      swap1\n        /* \"contracts/brosniper.sol\":2890:2894  this */\n      address\n      swap1\n        /* \"contracts/brosniper.sol\":2732:2772  uint256 deadline = block.timestamp + 300 */\n      dup9\n      swap1\n        /* \"contracts/brosniper.sol\":2834:2906  router.swapExactTokensForETH(amountIn, 0, path, address(this), deadline) */\n      0x04\n      add\n      tag_72\n      jump\t// in\n    tag_71:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_76\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_43\n      jump\t// in\n    tag_76:\n      pop\n        /* \"contracts/brosniper.sol\":2509:2914  function sellTokensForBNB() private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:320   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_79:\n        /* \"#utility.yul\":178:201   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":230:261   */\n      dup2\n      and\n        /* \"#utility.yul\":220:262   */\n      dup2\n      eq\n        /* \"#utility.yul\":210:212   */\n      tag_80\n      jumpi\n        /* \"#utility.yul\":281:287   */\n      dup2\n        /* \"#utility.yul\":273:279   */\n      dup3\n        /* \"#utility.yul\":266:288   */\n      revert\n        /* \"#utility.yul\":210:212   */\n    tag_80:\n        /* \"#utility.yul\":309:314   */\n      swap4\n        /* \"#utility.yul\":84:320   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":325:1473   */\n    tag_43:\n      0x00\n        /* \"#utility.yul\":451:453   */\n      0x20\n        /* \"#utility.yul\":494:496   */\n      dup1\n        /* \"#utility.yul\":482:491   */\n      dup4\n        /* \"#utility.yul\":473:480   */\n      dup6\n        /* \"#utility.yul\":469:492   */\n      sub\n        /* \"#utility.yul\":465:497   */\n      slt\n        /* \"#utility.yul\":462:464   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":515:521   */\n      dup2\n        /* \"#utility.yul\":507:513   */\n      dup3\n        /* \"#utility.yul\":500:522   */\n      revert\n        /* \"#utility.yul\":462:464   */\n    tag_82:\n        /* \"#utility.yul\":553:562   */\n      dup3\n        /* \"#utility.yul\":547:563   */\n      mload\n        /* \"#utility.yul\":582:600   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":623:625   */\n      dup1\n        /* \"#utility.yul\":615:621   */\n      dup3\n        /* \"#utility.yul\":612:626   */\n      gt\n        /* \"#utility.yul\":609:611   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":644:650   */\n      dup4\n        /* \"#utility.yul\":636:642   */\n      dup5\n        /* \"#utility.yul\":629:651   */\n      revert\n        /* \"#utility.yul\":609:611   */\n    tag_83:\n        /* \"#utility.yul\":687:693   */\n      dup2\n        /* \"#utility.yul\":676:685   */\n      dup6\n        /* \"#utility.yul\":672:694   */\n      add\n        /* \"#utility.yul\":662:694   */\n      swap2\n      pop\n        /* \"#utility.yul\":732:739   */\n      dup6\n        /* \"#utility.yul\":725:729   */\n      0x1f\n        /* \"#utility.yul\":721:723   */\n      dup4\n        /* \"#utility.yul\":717:730   */\n      add\n        /* \"#utility.yul\":713:740   */\n      slt\n        /* \"#utility.yul\":703:705   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":759:765   */\n      dup4\n        /* \"#utility.yul\":751:757   */\n      dup5\n        /* \"#utility.yul\":744:766   */\n      revert\n        /* \"#utility.yul\":703:705   */\n    tag_84:\n        /* \"#utility.yul\":793:795   */\n      dup2\n        /* \"#utility.yul\":787:796   */\n      mload\n        /* \"#utility.yul\":815:817   */\n      dup2\n        /* \"#utility.yul\":811:813   */\n      dup2\n        /* \"#utility.yul\":808:818   */\n      gt\n        /* \"#utility.yul\":805:807   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":821:839   */\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":868:870   */\n      dup4\n        /* \"#utility.yul\":864:866   */\n      dup2\n        /* \"#utility.yul\":860:871   */\n      mul\n        /* \"#utility.yul\":900:902   */\n      0x40\n        /* \"#utility.yul\":894:903   */\n      mload\n        /* \"#utility.yul\":951:953   */\n      dup6\n        /* \"#utility.yul\":946:948   */\n      dup3\n        /* \"#utility.yul\":938:944   */\n      dup3\n        /* \"#utility.yul\":934:949   */\n      add\n        /* \"#utility.yul\":930:954   */\n      add\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":992:1002   */\n      dup2\n        /* \"#utility.yul\":989:1011   */\n      lt\n        /* \"#utility.yul\":984:986   */\n      dup6\n        /* \"#utility.yul\":972:982   */\n      dup3\n        /* \"#utility.yul\":969:987   */\n      gt\n        /* \"#utility.yul\":966:1012   */\n      or\n        /* \"#utility.yul\":963:965   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":1015:1033   */\n      tag_89\n      tag_87\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1051:1053   */\n      0x40\n        /* \"#utility.yul\":1044:1066   */\n      mstore\n        /* \"#utility.yul\":1101:1119   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":1135:1150   */\n      dup6\n      dup2\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":1170:1181   */\n      dup5\n      dup7\n      add\n        /* \"#utility.yul\":1200:1211   */\n      dup3\n      dup7\n      add\n        /* \"#utility.yul\":1196:1216   */\n      dup8\n      add\n        /* \"#utility.yul\":1193:1226   */\n      dup11\n      lt\n        /* \"#utility.yul\":1190:1192   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":1244:1250   */\n      dup8\n        /* \"#utility.yul\":1236:1242   */\n      dup9\n        /* \"#utility.yul\":1229:1251   */\n      revert\n        /* \"#utility.yul\":1190:1192   */\n    tag_90:\n        /* \"#utility.yul\":1271:1277   */\n      dup8\n        /* \"#utility.yul\":1262:1277   */\n      swap6\n      pop\n        /* \"#utility.yul\":1286:1442   */\n    tag_91:\n        /* \"#utility.yul\":1300:1302   */\n      dup4\n        /* \"#utility.yul\":1297:1298   */\n      dup7\n        /* \"#utility.yul\":1294:1303   */\n      lt\n        /* \"#utility.yul\":1286:1442   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":1357:1367   */\n      dup1\n      mload\n        /* \"#utility.yul\":1345:1368   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1318:1319   */\n      0x01\n        /* \"#utility.yul\":1311:1320   */\n      swap6\n      swap1\n      swap6\n      add\n      swap5\n        /* \"#utility.yul\":1388:1400   */\n      swap4\n      dup7\n      add\n      swap4\n        /* \"#utility.yul\":1420:1432   */\n      dup7\n      add\n        /* \"#utility.yul\":1286:1442   */\n      jump(tag_91)\n    tag_93:\n      pop\n        /* \"#utility.yul\":1461:1467   */\n      swap9\n        /* \"#utility.yul\":431:1473   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1672   */\n    tag_63:\n      0x00\n        /* \"#utility.yul\":1601:1603   */\n      0x20\n        /* \"#utility.yul\":1589:1598   */\n      dup3\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1576:1599   */\n      sub\n        /* \"#utility.yul\":1572:1604   */\n      slt\n        /* \"#utility.yul\":1569:1571   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":1622:1628   */\n      dup1\n        /* \"#utility.yul\":1614:1620   */\n      dup2\n        /* \"#utility.yul\":1607:1629   */\n      revert\n        /* \"#utility.yul\":1569:1571   */\n    tag_95:\n      pop\n        /* \"#utility.yul\":1650:1666   */\n      mload\n      swap2\n        /* \"#utility.yul\":1559:1672   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:2146   */\n    tag_96:\n      0x00\n        /* \"#utility.yul\":1774:1779   */\n      dup2\n        /* \"#utility.yul\":1768:1780   */\n      mload\n        /* \"#utility.yul\":1801:1807   */\n      dup1\n        /* \"#utility.yul\":1796:1799   */\n      dup5\n        /* \"#utility.yul\":1789:1808   */\n      mstore\n        /* \"#utility.yul\":1827:1831   */\n      0x20\n        /* \"#utility.yul\":1856:1858   */\n      dup1\n        /* \"#utility.yul\":1851:1854   */\n      dup6\n        /* \"#utility.yul\":1847:1859   */\n      add\n        /* \"#utility.yul\":1840:1859   */\n      swap5\n      pop\n        /* \"#utility.yul\":1893:1895   */\n      dup1\n        /* \"#utility.yul\":1886:1891   */\n      dup5\n        /* \"#utility.yul\":1882:1896   */\n      add\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1926:2121   */\n    tag_98:\n        /* \"#utility.yul\":1940:1946   */\n      dup4\n        /* \"#utility.yul\":1937:1938   */\n      dup2\n        /* \"#utility.yul\":1934:1947   */\n      lt\n        /* \"#utility.yul\":1926:2121   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":2005:2018   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2001:2040   */\n      and\n        /* \"#utility.yul\":1989:2041   */\n      dup8\n      mstore\n        /* \"#utility.yul\":2061:2073   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":2096:2111   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2037:2038   */\n      0x01\n        /* \"#utility.yul\":1955:1964   */\n      add\n        /* \"#utility.yul\":1926:2121   */\n      jump(tag_98)\n    tag_100:\n      pop\n        /* \"#utility.yul\":2137:2140   */\n      swap5\n      swap6\n        /* \"#utility.yul\":1744:2146   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2151:2356   */\n    tag_20:\n        /* \"#utility.yul\":2351:2354   */\n      swap1\n        /* \"#utility.yul\":2342:2356   */\n      jump\t// out\n        /* \"#utility.yul\":2361:2564   */\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2525:2557   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2507:2558   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2495:2497   */\n      0x20\n        /* \"#utility.yul\":2480:2498   */\n      add\n      swap1\n        /* \"#utility.yul\":2462:2564   */\n      jump\t// out\n        /* \"#utility.yul\":2569:2914   */\n    tag_26:\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2753:2774   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2810:2812   */\n      0x15\n        /* \"#utility.yul\":2790:2808   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2783:2813   */\n      mstore\n      shl(0x5a, 0x109390881dda5d1a191c985dd85b0819985a5b1959)\n        /* \"#utility.yul\":2844:2846   */\n      0x40\n        /* \"#utility.yul\":2829:2847   */\n      dup3\n      add\n        /* \"#utility.yul\":2822:2873   */\n      mstore\n        /* \"#utility.yul\":2905:2907   */\n      0x60\n        /* \"#utility.yul\":2890:2908   */\n      add\n      swap1\n        /* \"#utility.yul\":2743:2914   */\n      jump\t// out\n        /* \"#utility.yul\":2919:3275   */\n    tag_55:\n        /* \"#utility.yul\":3121:3123   */\n      0x20\n        /* \"#utility.yul\":3103:3124   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3140:3158   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3133:3163   */\n      mstore\n        /* \"#utility.yul\":3199:3233   */\n      0x54617267657420746f6b656e206164647265737320616c726561647920736574\n        /* \"#utility.yul\":3194:3196   */\n      0x40\n        /* \"#utility.yul\":3179:3197   */\n      dup3\n      add\n        /* \"#utility.yul\":3172:3234   */\n      mstore\n        /* \"#utility.yul\":3266:3268   */\n      0x60\n        /* \"#utility.yul\":3251:3269   */\n      add\n      swap1\n        /* \"#utility.yul\":3093:3275   */\n      jump\t// out\n        /* \"#utility.yul\":3280:3632   */\n    tag_30:\n        /* \"#utility.yul\":3482:3484   */\n      0x20\n        /* \"#utility.yul\":3464:3485   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3521:3523   */\n      0x1c\n        /* \"#utility.yul\":3501:3519   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3494:3524   */\n      mstore\n        /* \"#utility.yul\":3560:3590   */\n      0x54617267657420746f6b656e2061646472657373206e6f742073657400000000\n        /* \"#utility.yul\":3555:3557   */\n      0x40\n        /* \"#utility.yul\":3540:3558   */\n      dup3\n      add\n        /* \"#utility.yul\":3533:3591   */\n      mstore\n        /* \"#utility.yul\":3623:3625   */\n      0x60\n        /* \"#utility.yul\":3608:3626   */\n      add\n      swap1\n        /* \"#utility.yul\":3454:3632   */\n      jump\t// out\n        /* \"#utility.yul\":3637:4145   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":3900:3906   */\n      dup6\n        /* \"#utility.yul\":3889:3898   */\n      dup3\n        /* \"#utility.yul\":3882:3907   */\n      mstore\n        /* \"#utility.yul\":3943:3946   */\n      0x80\n        /* \"#utility.yul\":3938:3940   */\n      0x20\n        /* \"#utility.yul\":3927:3936   */\n      dup4\n        /* \"#utility.yul\":3923:3941   */\n      add\n        /* \"#utility.yul\":3916:3947   */\n      mstore\n        /* \"#utility.yul\":3964:4027   */\n      tag_107\n        /* \"#utility.yul\":4022:4025   */\n      0x80\n        /* \"#utility.yul\":4011:4020   */\n      dup4\n        /* \"#utility.yul\":4007:4026   */\n      add\n        /* \"#utility.yul\":3999:4005   */\n      dup7\n        /* \"#utility.yul\":3964:4027   */\n      tag_96\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4063:4095   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":4058:4060   */\n      0x40\n        /* \"#utility.yul\":4043:4061   */\n      dup4\n      add\n        /* \"#utility.yul\":4036:4096   */\n      mstore\n      pop\n        /* \"#utility.yul\":4127:4129   */\n      0x60\n        /* \"#utility.yul\":4112:4130   */\n      add\n        /* \"#utility.yul\":4105:4139   */\n      mstore\n        /* \"#utility.yul\":3956:4027   */\n      swap3\n        /* \"#utility.yul\":3872:4145   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4150:4738   */\n    tag_72:\n      0x00\n        /* \"#utility.yul\":4449:4455   */\n      dup7\n        /* \"#utility.yul\":4438:4447   */\n      dup3\n        /* \"#utility.yul\":4431:4456   */\n      mstore\n        /* \"#utility.yul\":4492:4498   */\n      dup6\n        /* \"#utility.yul\":4487:4489   */\n      0x20\n        /* \"#utility.yul\":4476:4485   */\n      dup4\n        /* \"#utility.yul\":4472:4490   */\n      add\n        /* \"#utility.yul\":4465:4499   */\n      mstore\n        /* \"#utility.yul\":4535:4538   */\n      0xa0\n        /* \"#utility.yul\":4530:4532   */\n      0x40\n        /* \"#utility.yul\":4519:4528   */\n      dup4\n        /* \"#utility.yul\":4515:4533   */\n      add\n        /* \"#utility.yul\":4508:4539   */\n      mstore\n        /* \"#utility.yul\":4556:4619   */\n      tag_109\n        /* \"#utility.yul\":4614:4617   */\n      0xa0\n        /* \"#utility.yul\":4603:4612   */\n      dup4\n        /* \"#utility.yul\":4599:4618   */\n      add\n        /* \"#utility.yul\":4591:4597   */\n      dup7\n        /* \"#utility.yul\":4556:4619   */\n      tag_96\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4655:4687   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":4650:4652   */\n      0x60\n        /* \"#utility.yul\":4635:4653   */\n      dup4\n      add\n        /* \"#utility.yul\":4628:4688   */\n      mstore\n      pop\n        /* \"#utility.yul\":4719:4722   */\n      0x80\n        /* \"#utility.yul\":4704:4723   */\n      add\n        /* \"#utility.yul\":4697:4732   */\n      mstore\n        /* \"#utility.yul\":4548:4619   */\n      swap4\n        /* \"#utility.yul\":4421:4738   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4871   */\n    tag_36:\n      0x00\n        /* \"#utility.yul\":4814:4815   */\n      dup3\n        /* \"#utility.yul\":4810:4816   */\n      not\n        /* \"#utility.yul\":4807:4808   */\n      dup3\n        /* \"#utility.yul\":4804:4817   */\n      gt\n        /* \"#utility.yul\":4801:4803   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":4820:4838   */\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      pop\n        /* \"#utility.yul\":4856:4865   */\n      add\n      swap1\n        /* \"#utility.yul\":4791:4871   */\n      jump\t// out\n        /* \"#utility.yul\":4876:5044   */\n    tag_46:\n      0x00\n        /* \"#utility.yul\":4982:4983   */\n      dup2\n        /* \"#utility.yul\":4978:4979   */\n      0x00\n        /* \"#utility.yul\":4974:4980   */\n      not\n        /* \"#utility.yul\":4970:4984   */\n      div\n        /* \"#utility.yul\":4967:4968   */\n      dup4\n        /* \"#utility.yul\":4964:4985   */\n      gt\n        /* \"#utility.yul\":4959:4960   */\n      dup3\n        /* \"#utility.yul\":4952:4961   */\n      iszero\n        /* \"#utility.yul\":4945:4962   */\n      iszero\n        /* \"#utility.yul\":4941:4986   */\n      and\n        /* \"#utility.yul\":4938:4940   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":4989:5007   */\n      tag_116\n      tag_113\n      jump\t// in\n    tag_116:\n      pop\n        /* \"#utility.yul\":5029:5038   */\n      mul\n      swap1\n        /* \"#utility.yul\":4928:5044   */\n      jump\t// out\n        /* \"#utility.yul\":5049:5176   */\n    tag_113:\n        /* \"#utility.yul\":5110:5120   */\n      0x4e487b71\n        /* \"#utility.yul\":5105:5108   */\n      0xe0\n        /* \"#utility.yul\":5101:5121   */\n      shl\n        /* \"#utility.yul\":5098:5099   */\n      0x00\n        /* \"#utility.yul\":5091:5122   */\n      mstore\n        /* \"#utility.yul\":5141:5145   */\n      0x11\n        /* \"#utility.yul\":5138:5139   */\n      0x04\n        /* \"#utility.yul\":5131:5146   */\n      mstore\n        /* \"#utility.yul\":5165:5169   */\n      0x24\n        /* \"#utility.yul\":5162:5163   */\n      0x00\n        /* \"#utility.yul\":5155:5170   */\n      revert\n        /* \"#utility.yul\":5181:5308   */\n    tag_87:\n        /* \"#utility.yul\":5242:5252   */\n      0x4e487b71\n        /* \"#utility.yul\":5237:5240   */\n      0xe0\n        /* \"#utility.yul\":5233:5253   */\n      shl\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5223:5254   */\n      mstore\n        /* \"#utility.yul\":5273:5277   */\n      0x41\n        /* \"#utility.yul\":5270:5271   */\n      0x04\n        /* \"#utility.yul\":5263:5278   */\n      mstore\n        /* \"#utility.yul\":5297:5301   */\n      0x24\n        /* \"#utility.yul\":5294:5295   */\n      0x00\n        /* \"#utility.yul\":5287:5302   */\n      revert\n\n    auxdata: 0xa264697066735822122027abfeef3f19f92fe2368525d0955f4d26e5a0c624ae571f237758c257b0965664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600180546001600160a01b0319167310ed43c718714eb63d5aa57b78b54704e256024e179055610802806100466000396000f3fe6080604052600436106100385760003560e01c80631d111d1314610044578063387da6611461005b5780637a0e335c146100635761003f565b3661003f57005b600080fd5b34801561005057600080fd5b50610059610083565b005b610059610108565b34801561006f57600080fd5b5061005961007e366004610503565b6102bf565b60405147906000903390839061009890610646565b60006040518083038185875af1925050503d80600081146100d5576040519150601f19603f3d011682016040523d82523d6000602084013e6100da565b606091505b50509050806101045760405162461bcd60e51b81526004016100fb9061065d565b60405180910390fd5b5050565b6000546001600160a01b03166101305760405162461bcd60e51b81526004016100fb906106c1565b60408051600280825260608201835260009260208301908036833701905050905073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c8160008151811061018757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526000548251911690829060019081106101c657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101526000806101ed4261012c610769565b600154604051637ff36ab560e01b81529192506001600160a01b031690637ff36ab59034906102269086908890309088906004016106f8565b6000604051808303818588803b15801561023f57600080fd5b505af1158015610253573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261027c9190810190610531565b5060025461028957346002555b60025461029790600a610781565b61029f61030a565b106102ba576102ac610390565b6003805460ff191660011790555b505050565b6000546001600160a01b0316156102e85760405162461bcd60e51b81526004016100fb9061068c565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516370a0823160e01b81526001600160a01b03909116906370a082319061033b903090600401610649565b60206040518083038186803b15801561035357600080fd5b505afa158015610367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b91906105eb565b905090565b60408051600280825260608201835260009260208301908036833750506000805483519394506001600160a01b0316928492506103dd57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c8160018151811061043357634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050600061045d61030a565b9050600061046d4261012c610769565b6001546040516318cbafe560e01b81529192506001600160a01b0316906318cbafe5906104a790859060009088903090889060040161072d565b600060405180830381600087803b1580156104c157600080fd5b505af11580156104d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104fd9190810190610531565b50505050565b600060208284031215610514578081fd5b81356001600160a01b038116811461052a578182fd5b9392505050565b60006020808385031215610543578182fd5b825167ffffffffffffffff8082111561055a578384fd5b818501915085601f83011261056d578384fd5b81518181111561057f5761057f6107b6565b8381026040518582820101818110858211171561059e5761059e6107b6565b604052828152858101935084860182860187018a10156105bc578788fd5b8795505b838610156105de5780518552600195909501949386019386016105c0565b5098975050505050505050565b6000602082840312156105fc578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561063b5781516001600160a01b031687529582019590820190600101610616565b509495945050505050565b90565b6001600160a01b0391909116815260200190565b602080825260159082015274109390881dda5d1a191c985dd85b0819985a5b1959605a1b604082015260600190565b6020808252818101527f54617267657420746f6b656e206164647265737320616c726561647920736574604082015260600190565b6020808252601c908201527f54617267657420746f6b656e2061646472657373206e6f742073657400000000604082015260600190565b6000858252608060208301526107116080830186610603565b6001600160a01b03949094166040830152506060015292915050565b600086825285602083015260a0604083015261074c60a0830186610603565b6001600160a01b0394909416606083015250608001529392505050565b6000821982111561077c5761077c6107a0565b500190565b600081600019048311821515161561079b5761079b6107a0565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122027abfeef3f19f92fe2368525d0955f4d26e5a0c624ae571f237758c257b0965664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E OR SWAP1 SSTORE PUSH2 0x802 DUP1 PUSH2 0x46 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D111D13 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x387DA661 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x7A0E335C EQ PUSH2 0x63 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x83 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x108 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x7E CALLDATASIZE PUSH1 0x4 PUSH2 0x503 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH2 0x98 SWAP1 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x104 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x187 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x0 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x0 DUP1 PUSH2 0x1ED TIMESTAMP PUSH2 0x12C PUSH2 0x769 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7FF36AB5 SWAP1 CALLVALUE SWAP1 PUSH2 0x226 SWAP1 DUP7 SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x253 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x27C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x531 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x289 JUMPI CALLVALUE PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x297 SWAP1 PUSH1 0xA PUSH2 0x781 JUMP JUMPDEST PUSH2 0x29F PUSH2 0x30A JUMP JUMPDEST LT PUSH2 0x2BA JUMPI PUSH2 0x2AC PUSH2 0x390 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x33B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x649 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x5EB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x0 DUP1 SLOAD DUP4 MLOAD SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP5 SWAP3 POP PUSH2 0x3DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x433 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x45D PUSH2 0x30A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x46D TIMESTAMP PUSH2 0x12C PUSH2 0x769 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x18CBAFE5 SWAP1 PUSH2 0x4A7 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x72D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x4FD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x531 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x514 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x52A JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x543 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x55A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x56D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x7B6 JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x59E JUMPI PUSH2 0x59E PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x5BC JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x5DE JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x5C0 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FC JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x63B JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x616 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x109390881DDA5D1A191C985DD85B0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x54617267657420746F6B656E206164647265737320616C726561647920736574 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x54617267657420746F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE PUSH1 0x80 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x711 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x74C PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x77C JUMPI PUSH2 0x77C PUSH2 0x7A0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x79B JUMPI PUSH2 0x79B PUSH2 0x7A0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xAB INVALID 0xEF EXTCODEHASH NOT 0xF9 0x2F 0xE2 CALLDATASIZE DUP6 0x25 0xD0 SWAP6 0x5F 0x4D 0x26 0xE5 LOG0 0xC6 0x24 0xAE JUMPI 0x1F 0x23 PUSH24 0x58C257B0965664736F6C6343000800003300000000000000 ",
							"sourceMap": "575:2770:1:-:0;;;1140:88;;;;;;;;;-1:-1:-1;1165:6:1;:55;;-1:-1:-1;;;;;;1165:55:1;663:42;1165:55;;;575:2770;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5310:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:236:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nodeType": "YulIf",
															"src": "94:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "273:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "281:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "223:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "234:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "249:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "254:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "245:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "245:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "258:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "241:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "241:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "230:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "230:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "220:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "220:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "213:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:50:2"
															},
															"nodeType": "YulIf",
															"src": "210:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "299:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "309:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:306:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "431:1042:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "441:12:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "451:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "445:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "498:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "507:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "515:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "500:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "500:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "500:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "473:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "482:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "469:23:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "494:2:2"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "465:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:32:2"
															},
															"nodeType": "YulIf",
															"src": "462:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "533:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "553:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "547:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "547:16:2"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "537:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "572:28:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "582:18:2",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "576:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "627:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "636:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "644:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "629:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "629:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "629:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:2"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "623:2:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "612:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:14:2"
															},
															"nodeType": "YulIf",
															"src": "609:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "676:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "687:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "672:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "672:22:2"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "666:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "751:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "759:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "721:2:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "725:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "717:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "717:13:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "732:7:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "713:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "713:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "706:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:35:2"
															},
															"nodeType": "YulIf",
															"src": "703:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "777:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "787:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:2"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "781:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "821:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "811:2:2"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "815:2:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "808:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:10:2"
															},
															"nodeType": "YulIf",
															"src": "805:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "850:21:2",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "864:2:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "868:2:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "860:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:11:2"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "854:2:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "880:23:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "900:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "894:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:9:2"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "884:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "912:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "938:6:2"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "946:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "934:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "934:15:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "951:2:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "930:24:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "916:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1013:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1015:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1015:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1015:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "972:10:2"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "984:2:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "969:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "969:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "992:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1004:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "989:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "989:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "966:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "966:46:2"
															},
															"nodeType": "YulIf",
															"src": "963:2:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1051:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1055:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1044:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1044:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1044:22:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1075:17:2",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1086:6:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1079:3:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1108:6:2"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1116:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1101:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:18:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1101:18:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1128:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1139:6:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1147:2:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1135:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:15:2"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1128:3:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1159:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1174:2:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1178:2:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1170:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:11:2"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1163:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1227:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1236:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1244:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1229:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1229:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1204:2:2"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "1208:2:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1200:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1200:11:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1213:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1196:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1196:20:2"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1218:7:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1193:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:33:2"
															},
															"nodeType": "YulIf",
															"src": "1190:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1262:15:2",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "1271:6:2"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1266:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1331:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1352:3:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1363:3:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1357:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1357:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1345:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1345:23:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1345:23:2"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1381:19:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1392:3:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1397:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1388:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1388:12:2"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1381:3:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1413:19:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1424:3:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1429:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1420:12:2"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1413:3:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1297:1:2"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1300:2:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:9:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1304:18:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1306:14:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1315:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1318:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1311:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1311:9:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1306:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1290:3:2",
																"statements": []
															},
															"src": "1286:156:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1451:16:2",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1461:6:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "397:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "408:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "420:6:2",
														"type": ""
													}
												],
												"src": "325:1148:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1559:113:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1605:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1614:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1622:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1607:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1607:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1607:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1589:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1576:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1601:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1572:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1572:32:2"
															},
															"nodeType": "YulIf",
															"src": "1569:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1640:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1650:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:16:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1640:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1525:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1536:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1548:6:2",
														"type": ""
													}
												],
												"src": "1478:194:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1744:402:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1754:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1774:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1768:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1768:12:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1758:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1796:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1801:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1789:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1789:19:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1817:14:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1827:4:2",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1821:2:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1840:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1851:3:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1856:2:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1847:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1847:12:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1840:3:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1868:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1886:5:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1893:2:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1882:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:14:2"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1872:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1905:12:2",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "1914:3:2"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1909:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1975:146:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1996:3:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2011:6:2"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2005:5:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2005:13:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2028:3:2",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2033:1:2",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2024:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2024:11:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2037:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2020:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2020:19:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2001:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2001:39:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1989:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1989:52:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1989:52:2"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2054:19:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2065:3:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2070:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2061:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2061:12:2"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2054:3:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2086:25:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2100:6:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2108:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2096:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2096:15:2"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2086:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1937:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1934:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1934:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1948:18:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1950:14:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1959:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1955:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1955:9:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1950:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1930:3:2",
																"statements": []
															},
															"src": "1926:195:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2130:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2137:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2130:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1721:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1728:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1736:3:2",
														"type": ""
													}
												],
												"src": "1677:469:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2342:14:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2344:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2351:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2326:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2334:3:2",
														"type": ""
													}
												],
												"src": "2151:205:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2472:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2484:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2472:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2514:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2529:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2545:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2550:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2541:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2541:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2554:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2537:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2537:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2507:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2507:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2507:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2431:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2442:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2453:4:2",
														"type": ""
													}
												],
												"src": "2361:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2743:171:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2760:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2794:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2805:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2790:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:2",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2783:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2833:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2844:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2849:23:2",
																		"type": "",
																		"value": "BNB withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2822:51:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2882:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2894:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2890:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2890:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2882:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ad76fab2cdc7aebb7ff971c5985712268876cb8ceed0ccad5a52c9355138889__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2720:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2734:4:2",
														"type": ""
													}
												],
												"src": "2569:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3093:182:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3110:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3121:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3103:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3103:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3103:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3144:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3155:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3140:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3140:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3160:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3133:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3133:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3183:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3194:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3179:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3179:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3199:34:2",
																		"type": "",
																		"value": "Target token address already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3172:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3172:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3172:62:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3243:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3255:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3251:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3243:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e6782a9f12e73a3f57640f784c7d7853d9b9e61452a188a52994123a90b228b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3070:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:2",
														"type": ""
													}
												],
												"src": "2919:356:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3454:178:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3471:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3482:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3464:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3464:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3464:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3505:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3516:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3501:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3501:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3521:2:2",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3494:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3494:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3494:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3544:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3555:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3540:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3540:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3560:30:2",
																		"type": "",
																		"value": "Target token address not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3533:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3533:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3533:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3600:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3612:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3623:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3608:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3608:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3600:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3d22cf35db5f14e4663a2cb7fa5c7d46dfc5886dfeb476262662d1017ebac3d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3431:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3445:4:2",
														"type": ""
													}
												],
												"src": "3280:352:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3872:273:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3889:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3900:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3882:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3882:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3882:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3927:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3938:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3923:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3923:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3943:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3916:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3916:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3916:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3956:71:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3999:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4011:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4022:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4007:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4007:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3964:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:63:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3956:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4047:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4058:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4043:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4043:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4067:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4083:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4088:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4079:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4079:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4092:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4075:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4075:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4063:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4063:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4036:60:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4036:60:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4116:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4127:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4112:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4112:18:2"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4132:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4105:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4105:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3817:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3828:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3836:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3844:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3852:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3863:4:2",
														"type": ""
													}
												],
												"src": "3637:508:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4421:317:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4438:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4449:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4431:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4431:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4476:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4487:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4472:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4492:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4465:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4519:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4530:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4515:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4515:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4508:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4508:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4508:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4548:71:2",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4591:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4603:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4614:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4599:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4556:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4556:63:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4548:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4650:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4635:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "4659:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4675:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4680:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4671:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4671:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4684:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4667:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4667:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4655:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4655:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4628:60:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4628:60:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4708:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4719:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4704:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4704:19:2"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "4725:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4697:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4697:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4697:35:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4358:9:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4369:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4377:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4385:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4393:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4401:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4412:4:2",
														"type": ""
													}
												],
												"src": "4150:588:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4791:80:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4818:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4820:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4820:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4820:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4807:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4814:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4810:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4810:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4804:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4804:13:2"
															},
															"nodeType": "YulIf",
															"src": "4801:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4849:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4860:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4863:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4856:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4856:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4849:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4774:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4777:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4783:3:2",
														"type": ""
													}
												],
												"src": "4743:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4928:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4987:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4989:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4989:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4989:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4959:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4952:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4945:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4945:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4967:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4978:1:2",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4974:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4974:6:2"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4982:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4970:14:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4964:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4964:21:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4941:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4941:45:2"
															},
															"nodeType": "YulIf",
															"src": "4938:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5018:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5033:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5036:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5029:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5029:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5018:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4907:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4910:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4916:7:2",
														"type": ""
													}
												],
												"src": "4876:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5081:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5098:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5105:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5110:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5101:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5091:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5091:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5091:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5138:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5141:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5131:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5162:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5165:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5155:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5155:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5155:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5049:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5213:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5237:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5242:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5233:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5223:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5223:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5270:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5273:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5294:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5297:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5287:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5181:127:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _5), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_array$_t_address_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_1ad76fab2cdc7aebb7ff971c5985712268876cb8ceed0ccad5a52c9355138889__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"BNB withdrawal failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e6782a9f12e73a3f57640f784c7d7853d9b9e61452a188a52994123a90b228b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Target token address already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e3d22cf35db5f14e4663a2cb7fa5c7d46dfc5886dfeb476262662d1017ebac3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Target token address not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_t_array$_t_address_$dyn(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_t_array$_t_address_$dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c80631d111d1314610044578063387da6611461005b5780637a0e335c146100635761003f565b3661003f57005b600080fd5b34801561005057600080fd5b50610059610083565b005b610059610108565b34801561006f57600080fd5b5061005961007e366004610503565b6102bf565b60405147906000903390839061009890610646565b60006040518083038185875af1925050503d80600081146100d5576040519150601f19603f3d011682016040523d82523d6000602084013e6100da565b606091505b50509050806101045760405162461bcd60e51b81526004016100fb9061065d565b60405180910390fd5b5050565b6000546001600160a01b03166101305760405162461bcd60e51b81526004016100fb906106c1565b60408051600280825260608201835260009260208301908036833701905050905073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c8160008151811061018757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526000548251911690829060019081106101c657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101526000806101ed4261012c610769565b600154604051637ff36ab560e01b81529192506001600160a01b031690637ff36ab59034906102269086908890309088906004016106f8565b6000604051808303818588803b15801561023f57600080fd5b505af1158015610253573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261027c9190810190610531565b5060025461028957346002555b60025461029790600a610781565b61029f61030a565b106102ba576102ac610390565b6003805460ff191660011790555b505050565b6000546001600160a01b0316156102e85760405162461bcd60e51b81526004016100fb9061068c565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516370a0823160e01b81526001600160a01b03909116906370a082319061033b903090600401610649565b60206040518083038186803b15801561035357600080fd5b505afa158015610367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b91906105eb565b905090565b60408051600280825260608201835260009260208301908036833750506000805483519394506001600160a01b0316928492506103dd57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c8160018151811061043357634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050600061045d61030a565b9050600061046d4261012c610769565b6001546040516318cbafe560e01b81529192506001600160a01b0316906318cbafe5906104a790859060009088903090889060040161072d565b600060405180830381600087803b1580156104c157600080fd5b505af11580156104d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104fd9190810190610531565b50505050565b600060208284031215610514578081fd5b81356001600160a01b038116811461052a578182fd5b9392505050565b60006020808385031215610543578182fd5b825167ffffffffffffffff8082111561055a578384fd5b818501915085601f83011261056d578384fd5b81518181111561057f5761057f6107b6565b8381026040518582820101818110858211171561059e5761059e6107b6565b604052828152858101935084860182860187018a10156105bc578788fd5b8795505b838610156105de5780518552600195909501949386019386016105c0565b5098975050505050505050565b6000602082840312156105fc578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561063b5781516001600160a01b031687529582019590820190600101610616565b509495945050505050565b90565b6001600160a01b0391909116815260200190565b602080825260159082015274109390881dda5d1a191c985dd85b0819985a5b1959605a1b604082015260600190565b6020808252818101527f54617267657420746f6b656e206164647265737320616c726561647920736574604082015260600190565b6020808252601c908201527f54617267657420746f6b656e2061646472657373206e6f742073657400000000604082015260600190565b6000858252608060208301526107116080830186610603565b6001600160a01b03949094166040830152506060015292915050565b600086825285602083015260a0604083015261074c60a0830186610603565b6001600160a01b0394909416606083015250608001529392505050565b6000821982111561077c5761077c6107a0565b500190565b600081600019048311821515161561079b5761079b6107a0565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122027abfeef3f19f92fe2368525d0955f4d26e5a0c624ae571f237758c257b0965664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D111D13 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x387DA661 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x7A0E335C EQ PUSH2 0x63 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x83 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x108 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x7E CALLDATASIZE PUSH1 0x4 PUSH2 0x503 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH2 0x98 SWAP1 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x104 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x187 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x0 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x0 DUP1 PUSH2 0x1ED TIMESTAMP PUSH2 0x12C PUSH2 0x769 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7FF36AB5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7FF36AB5 SWAP1 CALLVALUE SWAP1 PUSH2 0x226 SWAP1 DUP7 SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x253 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x27C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x531 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x289 JUMPI CALLVALUE PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x297 SWAP1 PUSH1 0xA PUSH2 0x781 JUMP JUMPDEST PUSH2 0x29F PUSH2 0x30A JUMP JUMPDEST LT PUSH2 0x2BA JUMPI PUSH2 0x2AC PUSH2 0x390 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x33B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x649 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x5EB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x0 DUP1 SLOAD DUP4 MLOAD SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP5 SWAP3 POP PUSH2 0x3DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x433 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x45D PUSH2 0x30A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x46D TIMESTAMP PUSH2 0x12C PUSH2 0x769 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x18CBAFE5 SWAP1 PUSH2 0x4A7 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x72D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x4FD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x531 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x514 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x52A JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x543 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x55A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x56D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x7B6 JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x59E JUMPI PUSH2 0x59E PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x5BC JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x5DE JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x5C0 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FC JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x63B JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x616 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x109390881DDA5D1A191C985DD85B0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x54617267657420746F6B656E206164647265737320616C726561647920736574 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x54617267657420746F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE PUSH1 0x80 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x711 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x74C PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x77C JUMPI PUSH2 0x77C PUSH2 0x7A0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x79B JUMPI PUSH2 0x79B PUSH2 0x7A0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xAB INVALID 0xEF EXTCODEHASH NOT 0xF9 0x2F 0xE2 CALLDATASIZE DUP6 0x25 0xD0 SWAP6 0x5F 0x4D 0x26 0xE5 LOG0 0xC6 0x24 0xAE JUMPI 0x1F 0x23 PUSH24 0x58C257B0965664736F6C6343000800003300000000000000 ",
							"sourceMap": "575:2770:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3137:205;;;;;;;;;;;;;:::i;:::-;;1582:919;;;:::i;1273:301::-;;;;;;;;;;-1:-1:-1;1273:301:1;;;;;:::i;:::-;;:::i;3137:205::-;3248:34;;3197:21;;3180:14;;3248:10;;3197:21;;3248:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3229:53;;;3301:7;3293:41;;;;-1:-1:-1;;;3293:41:1;;;;;;;:::i;:::-;;;;;;;;;3137:205;;:::o;1582:919::-;1677:1;1645:20;-1:-1:-1;;;;;1645:20:1;1637:75;;;;-1:-1:-1;;;1637:75:1;;;;;;;:::i;:::-;1749:16;;;1763:1;1749:16;;;;;;;;1725:21;;1749:16;;;;;;;;;;-1:-1:-1;1749:16:1;1725:40;;885:42;1776:4;1781:1;1776:7;;;;;;-1:-1:-1;;;1776:7:1;;;;;;;;;-1:-1:-1;;;;;1776:22:1;;;:7;;;;;;;;;:22;1819:20;;1809:7;;1819:20;;;1809:4;;1819:20;;1809:7;;;;-1:-1:-1;;;1809:7:1;;;;;;;;;-1:-1:-1;;;;;1809:30:1;;;:7;;;;;;;;;;;:30;1852:20;;1963:21;:15;1981:3;1963:21;:::i;:::-;2046:6;;:91;;-1:-1:-1;;;2046:91:1;;1944:40;;-1:-1:-1;;;;;;2046:6:1;;:28;;2082:9;;2046:91;;2093:12;;2107:4;;2121;;1944:40;;2046:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2046:91:1;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2199:20:1;;2195:90;;2264:9;2241:20;:32;2195:90;2396:20;;:25;;2419:2;2396:25;:::i;:::-;2375:17;:15;:17::i;:::-;:46;2371:123;;2438:18;:16;:18::i;:::-;2471:4;:11;;-1:-1:-1;;2471:11:1;2478:4;2471:11;;;2371:123;1582:919;;;:::o;1273:301::-;1474:1;1442:20;-1:-1:-1;;;;;1442:20:1;:34;1434:79;;;;-1:-1:-1;;;1434:79:1;;;;;;;:::i;:::-;1524:20;:42;;-1:-1:-1;;;;;;1524:42:1;-1:-1:-1;;;;;1524:42:1;;;;;;;;;;1273:301::o;2922:207::-;2971:7;3075:20;;3068:53;;-1:-1:-1;;;3068:53:1;;-1:-1:-1;;;;;3075:20:1;;;;3068:38;;:53;;3115:4;;3068:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3061:60;;2922:207;:::o;2509:405::-;2580:16;;;2594:1;2580:16;;;;;;;;2556:21;;2580:16;;;;;;;;-1:-1:-1;;2617:20:1;;;2607:7;;;;-1:-1:-1;;;;;;2617:20:1;;2607:7;;-1:-1:-1;2607:7:1;;-1:-1:-1;;;2607:7:1;;;;;;;;;;;;;;:30;-1:-1:-1;;;;;2607:30:1;;;-1:-1:-1;;;;;2607:30:1;;;;;885:42;2648:4;2653:1;2648:7;;;;;;-1:-1:-1;;;2648:7:1;;;;;;;;;;;;;;:22;-1:-1:-1;;;;;2648:22:1;;;-1:-1:-1;;;;;2648:22:1;;;;;2683:16;2702:17;:15;:17::i;:::-;2683:36;-1:-1:-1;2732:16:1;2751:21;:15;2769:3;2751:21;:::i;:::-;2834:6;;:72;;-1:-1:-1;;;2834:72:1;;2732:40;;-1:-1:-1;;;;;;2834:6:1;;:28;;:72;;2863:8;;2834:6;;2876:4;;2890;;2732:40;;2834:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2834:72:1;;;;;;;;;;;;:::i;:::-;;2509:405;;;:::o;14:306:2:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:2;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:2:o;325:1148::-;;451:2;494;482:9;473:7;469:23;465:32;462:2;;;515:6;507;500:22;462:2;553:9;547:16;582:18;623:2;615:6;612:14;609:2;;;644:6;636;629:22;609:2;687:6;676:9;672:22;662:32;;732:7;725:4;721:2;717:13;713:27;703:2;;759:6;751;744:22;703:2;793;787:9;815:2;811;808:10;805:2;;;821:18;;:::i;:::-;868:2;864;860:11;900:2;894:9;951:2;946;938:6;934:15;930:24;1004:6;992:10;989:22;984:2;972:10;969:18;966:46;963:2;;;1015:18;;:::i;:::-;1051:2;1044:22;1101:18;;;1135:15;;;;-1:-1:-1;1170:11:2;;;1200;;;1196:20;;1193:33;-1:-1:-1;1190:2:2;;;1244:6;1236;1229:22;1190:2;1271:6;1262:15;;1286:156;1300:2;1297:1;1294:9;1286:156;;;1357:10;;1345:23;;1318:1;1311:9;;;;;1388:12;;;;1420;;1286:156;;;-1:-1:-1;1461:6:2;431:1042;-1:-1:-1;;;;;;;;431:1042:2:o;1478:194::-;;1601:2;1589:9;1580:7;1576:23;1572:32;1569:2;;;1622:6;1614;1607:22;1569:2;-1:-1:-1;1650:16:2;;1559:113;-1:-1:-1;1559:113:2:o;1677:469::-;;1774:5;1768:12;1801:6;1796:3;1789:19;1827:4;1856:2;1851:3;1847:12;1840:19;;1893:2;1886:5;1882:14;1914:3;1926:195;1940:6;1937:1;1934:13;1926:195;;;2005:13;;-1:-1:-1;;;;;2001:39:2;1989:52;;2061:12;;;;2096:15;;;;2037:1;1955:9;1926:195;;;-1:-1:-1;2137:3:2;;1744:402;-1:-1:-1;;;;;1744:402:2:o;2151:205::-;2351:3;2342:14::o;2361:203::-;-1:-1:-1;;;;;2525:32:2;;;;2507:51;;2495:2;2480:18;;2462:102::o;2569:345::-;2771:2;2753:21;;;2810:2;2790:18;;;2783:30;-1:-1:-1;;;2844:2:2;2829:18;;2822:51;2905:2;2890:18;;2743:171::o;2919:356::-;3121:2;3103:21;;;3140:18;;;3133:30;3199:34;3194:2;3179:18;;3172:62;3266:2;3251:18;;3093:182::o;3280:352::-;3482:2;3464:21;;;3521:2;3501:18;;;3494:30;3560;3555:2;3540:18;;3533:58;3623:2;3608:18;;3454:178::o;3637:508::-;;3900:6;3889:9;3882:25;3943:3;3938:2;3927:9;3923:18;3916:31;3964:63;4022:3;4011:9;4007:19;3999:6;3964:63;:::i;:::-;-1:-1:-1;;;;;4063:32:2;;;;4058:2;4043:18;;4036:60;-1:-1:-1;4127:2:2;4112:18;4105:34;3956:71;3872:273;-1:-1:-1;;3872:273:2:o;4150:588::-;;4449:6;4438:9;4431:25;4492:6;4487:2;4476:9;4472:18;4465:34;4535:3;4530:2;4519:9;4515:18;4508:31;4556:63;4614:3;4603:9;4599:19;4591:6;4556:63;:::i;:::-;-1:-1:-1;;;;;4655:32:2;;;;4650:2;4635:18;;4628:60;-1:-1:-1;4719:3:2;4704:19;4697:35;4548:71;4421:317;-1:-1:-1;;;4421:317:2:o;4743:128::-;;4814:1;4810:6;4807:1;4804:13;4801:2;;;4820:18;;:::i;:::-;-1:-1:-1;4856:9:2;;4791:80::o;4876:168::-;;4982:1;4978;4974:6;4970:14;4967:1;4964:21;4959:1;4952:9;4945:17;4941:45;4938:2;;;4989:18;;:::i;:::-;-1:-1:-1;5029:9:2;;4928:116::o;5049:127::-;5110:10;5105:3;5101:20;5098:1;5091:31;5141:4;5138:1;5131:15;5165:4;5162:1;5155:15;5181:127;5242:10;5237:3;5233:20;5230:1;5223:31;5273:4;5270:1;5263:15;5297:4;5294:1;5287:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "410000",
								"executionCost": "21285",
								"totalCost": "431285"
							},
							"external": {
								"setTargetTokenAddress(address)": "21996",
								"swapBNBForToken()": "infinite",
								"withdrawBNB()": "infinite"
							},
							"internal": {
								"getTokenBalance()": "infinite",
								"sellTokensForBNB()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 575,
									"end": 3345,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 575,
									"end": 3345,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 575,
									"end": 3345,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1228,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1228,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1228,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1228,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1140,
									"end": 1228,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1228,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1140,
									"end": 1228,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1228,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1228,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1140,
									"end": 1228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1171,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1165,
									"end": 1220,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1165,
									"end": 1220,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1220,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 663,
									"end": 705,
									"name": "PUSH",
									"source": 1,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": 1165,
									"end": 1220,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1165,
									"end": 1220,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1165,
									"end": 1220,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 575,
									"end": 3345,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 575,
									"end": 3345,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 575,
									"end": 3345,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 575,
									"end": 3345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 3345,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 575,
									"end": 3345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 3345,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122027abfeef3f19f92fe2368525d0955f4d26e5a0c624ae571f237758c257b0965664736f6c63430008000033",
									".code": [
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "1D111D13"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "387DA661"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "7A0E335C"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 575,
											"end": 3345,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3218,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3258,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3218,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3293,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3342,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1637,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1764,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1746,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 927,
											"name": "PUSH",
											"source": 1,
											"value": "BB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C"
										},
										{
											"begin": 1776,
											"end": 1780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1839,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1839,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1819,
											"end": 1839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1839,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1872,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1963,
											"end": 1978,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 1984,
											"name": "PUSH",
											"source": 1,
											"value": "12C"
										},
										{
											"begin": 1963,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1963,
											"end": 1984,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1963,
											"end": 1984,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1963,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7FF36AB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1984,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "7FF36AB5"
										},
										{
											"begin": 2046,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1984,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2046,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2195,
											"end": 2285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2285,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2195,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2416,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2396,
											"end": 2416,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2375,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2375,
											"end": 2392,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2392,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2375,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2421,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2371,
											"end": 2494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2438,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2471,
											"end": 2482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2471,
											"end": 2482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2482,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2471,
											"end": 2482,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2482,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2494,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2371,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 2501,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1442,
											"end": 1462,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1476,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1434,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1566,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1574,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2922,
											"end": 3129,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2922,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 2978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3106,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 3068,
											"end": 3106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3119,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3068,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 3129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 3129,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2509,
											"end": 2914,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2509,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2595,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2577,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2617,
											"end": 2637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2637,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2617,
											"end": 2637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2637,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2607,
											"end": 2637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2607,
											"end": 2637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 927,
											"name": "PUSH",
											"source": 1,
											"value": "BB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C"
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2702,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2702,
											"end": 2719,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2702,
											"end": 2719,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2702,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2732,
											"end": 2748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2751,
											"end": 2766,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2772,
											"name": "PUSH",
											"source": 1,
											"value": "12C"
										},
										{
											"begin": 2751,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2751,
											"end": 2772,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2751,
											"end": 2772,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2751,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18CBAFE5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2772,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "18CBAFE5"
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2871,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2772,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2914,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 178,
											"end": 201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 230,
											"end": 261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 230,
											"end": 261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 220,
											"end": 262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 220,
											"end": 262,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 210,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 281,
											"end": 287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 273,
											"end": 279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 266,
											"end": 288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 210,
											"end": 212,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 309,
											"end": 314,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 84,
											"end": 320,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 320,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 325,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 325,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 491,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 473,
											"end": 480,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 469,
											"end": 492,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 465,
											"end": 497,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 462,
											"end": 464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 462,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 462,
											"end": 464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 500,
											"end": 522,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 462,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 462,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 547,
											"end": 563,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 582,
											"end": 600,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 623,
											"end": 625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 615,
											"end": 621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 612,
											"end": 626,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 609,
											"end": 611,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 644,
											"end": 650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 636,
											"end": 642,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 629,
											"end": 651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 609,
											"end": 611,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 676,
											"end": 685,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 672,
											"end": 694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 662,
											"end": 694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 662,
											"end": 694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 739,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 721,
											"end": 723,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 717,
											"end": 730,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 713,
											"end": 740,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 703,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 703,
											"end": 705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 751,
											"end": 757,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 744,
											"end": 766,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 703,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 703,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 793,
											"end": 795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 787,
											"end": 796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 815,
											"end": 817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 811,
											"end": 813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 818,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 805,
											"end": 807,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 805,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 805,
											"end": 807,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 821,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 868,
											"end": 870,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 864,
											"end": 866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 900,
											"end": 902,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 903,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 951,
											"end": 953,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 946,
											"end": 948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 934,
											"end": 949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 930,
											"end": 954,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 989,
											"end": 1011,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 984,
											"end": 986,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 972,
											"end": 982,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 969,
											"end": 987,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 963,
											"end": 965,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 963,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 963,
											"end": 965,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1053,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1181,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1181,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1216,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1226,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1242,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1251,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1277,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1286,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1302,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1298,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1303,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1442,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1286,
											"end": 1442,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1357,
											"end": 1367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1357,
											"end": 1367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1368,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1400,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1400,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1400,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1400,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1432,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1286,
											"end": 1442,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1286,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1467,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 431,
											"end": 1473,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 431,
											"end": 1473,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1672,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1478,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1599,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1604,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1629,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1650,
											"end": 1666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1559,
											"end": 1672,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 2146,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1677,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1854,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1859,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1891,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 2121,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1926,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 1946,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1947,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 2121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1926,
											"end": 2121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2018,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2001,
											"end": 2040,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2041,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2041,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2038,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1955,
											"end": 1964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1926,
											"end": 2121,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 2121,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1926,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2140,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2137,
											"end": 2140,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 2146,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1744,
											"end": 2146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2151,
											"end": 2356,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2151,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2342,
											"end": 2356,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2361,
											"end": 2564,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2361,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2525,
											"end": 2557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2558,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2497,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2462,
											"end": 2564,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2569,
											"end": 2914,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2569,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2790,
											"end": 2808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2808,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109390881DDA5D1A191C985DD85B0819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2844,
											"end": 2846,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2822,
											"end": 2873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2890,
											"end": 2908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2890,
											"end": 2908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2914,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2919,
											"end": 3275,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2919,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3123,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3103,
											"end": 3124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3163,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3233,
											"name": "PUSH",
											"source": 2,
											"value": "54617267657420746F6B656E206164647265737320616C726561647920736574"
										},
										{
											"begin": 3194,
											"end": 3196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3197,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3251,
											"end": 3269,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3275,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3280,
											"end": 3632,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3280,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3484,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 3501,
											"end": 3519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3519,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3519,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3590,
											"name": "PUSH",
											"source": 2,
											"value": "54617267657420746F6B656E2061646472657373206E6F742073657400000000"
										},
										{
											"begin": 3555,
											"end": 3557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3625,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3608,
											"end": 3626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3454,
											"end": 3632,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3637,
											"end": 4145,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3637,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 4145,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 3898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 3907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 3946,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3938,
											"end": 3940,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3947,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3964,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4022,
											"end": 4025,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4011,
											"end": 4020,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4005,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3964,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3964,
											"end": 4027,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3964,
											"end": 4027,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3964,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4063,
											"end": 4095,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4095,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4058,
											"end": 4060,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4036,
											"end": 4096,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4127,
											"end": 4129,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3956,
											"end": 4027,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3872,
											"end": 4145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3872,
											"end": 4145,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4150,
											"end": 4738,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4150,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4438,
											"end": 4447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4476,
											"end": 4485,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4538,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 4530,
											"end": 4532,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4528,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4539,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4556,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4614,
											"end": 4617,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 4603,
											"end": 4612,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4599,
											"end": 4618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4591,
											"end": 4597,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4556,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4556,
											"end": 4619,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4556,
											"end": 4619,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4556,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4655,
											"end": 4687,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4655,
											"end": 4687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4655,
											"end": 4687,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4655,
											"end": 4687,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4652,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4635,
											"end": 4653,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4635,
											"end": 4653,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4628,
											"end": 4688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4719,
											"end": 4722,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4704,
											"end": 4723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4697,
											"end": 4732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4548,
											"end": 4619,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4421,
											"end": 4738,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4421,
											"end": 4738,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4743,
											"end": 4871,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4743,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4743,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4816,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4807,
											"end": 4808,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 4817,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4803,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4801,
											"end": 4803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 4871,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4876,
											"end": 5044,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4876,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4876,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4968,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4959,
											"end": 4960,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4945,
											"end": 4962,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4986,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 4940,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4938,
											"end": 4940,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4928,
											"end": 5044,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5049,
											"end": 5176,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5049,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5110,
											"end": 5120,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 5105,
											"end": 5108,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5101,
											"end": 5121,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5091,
											"end": 5122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5145,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5138,
											"end": 5139,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5131,
											"end": 5146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5165,
											"end": 5169,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5162,
											"end": 5163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5170,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5308,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5181,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5252,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 5237,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5233,
											"end": 5253,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5301,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5294,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5302,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"setTargetTokenAddress(address)": "7a0e335c",
							"swapBNBForToken()": "387da661",
							"withdrawBNB()": "1d111d13"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_targetTokenAddress\",\"type\":\"address\"}],\"name\":\"setTargetTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapBNBForToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/brosniper.sol\":\"PancakeSwapSniper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/brosniper.sol\":{\"keccak256\":\"0x3605bd2ffef62e0bff3c93e11c977cedc362d0935d4f1a79d1c312054cf4f170\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf68a3e5d6e6aefee80866af9f566b4cc3ff6da97c6f79fa030f277fa40c938c\",\"dweb:/ipfs/QmcyP54KpwMeLFMPB3r6gTXnnEmdZwRcJoBN8pDK2gf57E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 121,
								"contract": "contracts/brosniper.sol:PancakeSwapSniper",
								"label": "TARGET_TOKEN_ADDRESS",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "contracts/brosniper.sol:PancakeSwapSniper",
								"label": "router",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IPancakeSwapRouter)113"
							},
							{
								"astId": 126,
								"contract": "contracts/brosniper.sol:PancakeSwapSniper",
								"label": "initialBNBInvestment",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 128,
								"contract": "contracts/brosniper.sol:PancakeSwapSniper",
								"label": "sold",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IPancakeSwapRouter)113": {
								"encoding": "inplace",
								"label": "contract IPancakeSwapRouter",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0"
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"contracts/brosniper.sol": {
				"ast": {
					"absolutePath": "contracts/brosniper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IPancakeSwapRouter": [
							113
						],
						"PancakeSwapSniper": [
							346
						]
					},
					"id": 347,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nodeType": "ImportDirective",
							"scope": 347,
							"sourceUnit": 78,
							"src": "60:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IPancakeSwapRouter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "7ff36ab5",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "218:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "240:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 83,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "240:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 84,
													"nodeType": "ArrayTypeName",
													"src": "240:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "265:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "277:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:77:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "348:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 91,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "348:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 92,
													"nodeType": "ArrayTypeName",
													"src": "348:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:26:1"
									},
									"scope": 113,
									"src": "187:187:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "411:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "429:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "451:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 100,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "451:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 101,
													"nodeType": "ArrayTypeName",
													"src": "451:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "476:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "488:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:95:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "542:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "542:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 109,
													"nodeType": "ArrayTypeName",
													"src": "542:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "541:26:1"
									},
									"scope": 113,
									"src": "380:188:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 347,
							"src": "151:420:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 346,
							"linearizedBaseContracts": [
								346
							],
							"name": "PancakeSwapSniper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 116,
									"mutability": "constant",
									"name": "PANCAKESWAP_ROUTER_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 346,
									"src": "609:96:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 114,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "609:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
										"id": 115,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "663:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 119,
									"mutability": "constant",
									"name": "WBNB_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 346,
									"src": "845:82:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 117,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "845:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
										"id": 118,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "885:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 121,
									"mutability": "mutable",
									"name": "TARGET_TOKEN_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 346,
									"src": "956:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 120,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "956:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "router",
									"nodeType": "VariableDeclaration",
									"scope": 346,
									"src": "1031:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPancakeSwapRouter_$113",
										"typeString": "contract IPancakeSwapRouter"
									},
									"typeName": {
										"id": 123,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 122,
											"name": "IPancakeSwapRouter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 113,
											"src": "1031:18:1"
										},
										"referencedDeclaration": 113,
										"src": "1031:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakeSwapRouter_$113",
											"typeString": "contract IPancakeSwapRouter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 126,
									"mutability": "mutable",
									"name": "initialBNBInvestment",
									"nodeType": "VariableDeclaration",
									"scope": 346,
									"src": "1071:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 125,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1071:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "sold",
									"nodeType": "VariableDeclaration",
									"scope": 346,
									"src": "1114:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 127,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1114:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1154:74:1",
										"statements": [
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 131,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1165:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPancakeSwapRouter_$113",
															"typeString": "contract IPancakeSwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 133,
																"name": "PANCAKESWAP_ROUTER_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1193:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 132,
															"name": "IPancakeSwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1174:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPancakeSwapRouter_$113_$",
																"typeString": "type(contract IPancakeSwapRouter)"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1174:46:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPancakeSwapRouter_$113",
															"typeString": "contract IPancakeSwapRouter"
														}
													},
													"src": "1165:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPancakeSwapRouter_$113",
														"typeString": "contract IPancakeSwapRouter"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1165:55:1"
											}
										]
									},
									"id": 138,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:2:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1154:0:1"
									},
									"scope": 346,
									"src": "1140:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1263:2:1",
										"statements": []
									},
									"id": 142,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1243:2:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1263:0:1"
									},
									"scope": 346,
									"src": "1236:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "1342:232:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 148,
																"name": "TARGET_TOKEN_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1442:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1474:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1466:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 149,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1466:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1466:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1442:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617267657420746f6b656e206164647265737320616c726561647920736574",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1478:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e6782a9f12e73a3f57640f784c7d7853d9b9e61452a188a52994123a90b228b",
																"typeString": "literal_string \"Target token address already set\""
															},
															"value": "Target token address already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e6782a9f12e73a3f57640f784c7d7853d9b9e61452a188a52994123a90b228b",
																"typeString": "literal_string \"Target token address already set\""
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1434:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1434:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1434:79:1"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "TARGET_TOKEN_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1524:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "_targetTokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "1547:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1524:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1524:42:1"
											}
										]
									},
									"functionSelector": "7a0e335c",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTargetTokenAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "_targetTokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1304:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:29:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:0:1"
									},
									"scope": 346,
									"src": "1273:301:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "1626:875:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 166,
																"name": "TARGET_TOKEN_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1645:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1677:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1669:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 167,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1669:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1645:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617267657420746f6b656e2061646472657373206e6f7420736574",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1681:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3d22cf35db5f14e4663a2cb7fa5c7d46dfc5886dfeb476262662d1017ebac3d",
																"typeString": "literal_string \"Target token address not set\""
															},
															"value": "Target token address not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3d22cf35db5f14e4663a2cb7fa5c7d46dfc5886dfeb476262662d1017ebac3d",
																"typeString": "literal_string \"Target token address not set\""
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1637:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1637:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1637:75:1"
											},
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "path",
														"nodeType": "VariableDeclaration",
														"scope": 249,
														"src": "1725:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 177,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 178,
															"nodeType": "ArrayTypeName",
															"src": "1725:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 185,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1763:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1749:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 180,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1753:7:1",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 181,
															"nodeType": "ArrayTypeName",
															"src": "1753:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1749:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1725:40:1"
											},
											{
												"expression": {
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 186,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1776:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 188,
														"indexExpression": {
															"hexValue": "30",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1781:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1776:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 189,
														"name": "WBNB_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "1786:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1776:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "1776:22:1"
											},
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 192,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1809:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 194,
														"indexExpression": {
															"hexValue": "31",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1814:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 195,
														"name": "TARGET_TOKEN_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1819:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1809:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "1809:30:1"
											},
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "amountOutMin",
														"nodeType": "VariableDeclaration",
														"scope": 249,
														"src": "1852:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1852:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"hexValue": "30",
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1875:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1852:24:1"
											},
											{
												"assignments": [
													203
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"mutability": "mutable",
														"name": "deadline",
														"nodeType": "VariableDeclaration",
														"scope": 249,
														"src": "1944:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1944:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 208,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 204,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1963:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1963:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "333030",
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1981:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300_by_1",
															"typeString": "int_const 300"
														},
														"value": "300"
													},
													"src": "1963:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1944:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "amountOutMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "2093:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 216,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2107:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 219,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2121:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakeSwapSniper_$346",
																		"typeString": "contract PancakeSwapSniper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakeSwapSniper_$346",
																		"typeString": "contract PancakeSwapSniper"
																	}
																],
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2113:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 217,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2113:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2113:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "2128:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 209,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "2046:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPancakeSwapRouter_$113",
																	"typeString": "contract IPancakeSwapRouter"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "swapExactETHForTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "2046:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 212,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2082:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2082:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2046:46:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
															"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2046:91:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2046:91:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 224,
														"name": "initialBNBInvestment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "2199:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2223:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2199:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 233,
												"nodeType": "IfStatement",
												"src": "2195:90:1",
												"trueBody": {
													"id": 232,
													"nodeType": "Block",
													"src": "2226:59:1",
													"statements": [
														{
															"expression": {
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 227,
																	"name": "initialBNBInvestment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 126,
																	"src": "2241:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 228,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2264:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2264:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2241:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 231,
															"nodeType": "ExpressionStatement",
															"src": "2241:32:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 234,
															"name": "getTokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "2375:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2375:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 236,
															"name": "initialBNBInvestment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "2396:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3130",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2419:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "2396:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2375:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 248,
												"nodeType": "IfStatement",
												"src": "2371:123:1",
												"trueBody": {
													"id": 247,
													"nodeType": "Block",
													"src": "2423:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 240,
																	"name": "sellTokensForBNB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "2438:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2438:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 242,
															"nodeType": "ExpressionStatement",
															"src": "2438:18:1"
														},
														{
															"expression": {
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 243,
																	"name": "sold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "2471:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2478:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2471:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 246,
															"nodeType": "ExpressionStatement",
															"src": "2471:11:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "387da661",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapBNBForToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1606:2:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1626:0:1"
									},
									"scope": 346,
									"src": "1582:919:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "2545:369:1",
										"statements": [
											{
												"assignments": [
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"mutability": "mutable",
														"name": "path",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "2556:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 255,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2556:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 256,
															"nodeType": "ArrayTypeName",
															"src": "2556:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2594:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2580:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 258,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2584:7:1",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 259,
															"nodeType": "ArrayTypeName",
															"src": "2584:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2580:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2556:40:1"
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 264,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2607:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 266,
														"indexExpression": {
															"hexValue": "30",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2612:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2607:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 267,
														"name": "TARGET_TOKEN_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2617:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2607:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "2607:30:1"
											},
											{
												"expression": {
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 270,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2648:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 272,
														"indexExpression": {
															"hexValue": "31",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2653:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2648:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 273,
														"name": "WBNB_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "2658:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2648:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "2648:22:1"
											},
											{
												"assignments": [
													277
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"mutability": "mutable",
														"name": "amountIn",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "2683:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2683:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 278,
														"name": "getTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "2702:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2683:36:1"
											},
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "deadline",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "2732:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2732:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 287,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 283,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2751:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2751:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "333030",
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2769:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300_by_1",
															"typeString": "int_const 300"
														},
														"value": "300"
													},
													"src": "2751:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2732:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "2863:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2873:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 293,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2876:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 296,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2890:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakeSwapSniper_$346",
																		"typeString": "contract PancakeSwapSniper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakeSwapSniper_$346",
																		"typeString": "contract PancakeSwapSniper"
																	}
																],
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2882:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 294,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2882:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2882:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2897:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 288,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2834:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeSwapRouter_$113",
																"typeString": "contract IPancakeSwapRouter"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "2834:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2834:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "2834:72:1"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellTokensForBNB",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2534:2:1"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2545:0:1"
									},
									"scope": 346,
									"src": "2509:405:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2980:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 313,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3115:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakeSwapSniper_$346",
																		"typeString": "contract PancakeSwapSniper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakeSwapSniper_$346",
																		"typeString": "contract PancakeSwapSniper"
																	}
																],
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3107:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 311,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3107:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3107:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 308,
																	"name": "TARGET_TOKEN_ADDRESS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "3075:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 307,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "3068:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3068:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "3068:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3068:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 316,
												"nodeType": "Return",
												"src": "3061:60:1"
											}
										]
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2946:2:1"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2970:9:1"
									},
									"scope": 346,
									"src": "2922:207:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "3169:173:1",
										"statements": [
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 344,
														"src": "3180:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3180:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 328,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 325,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3205:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PancakeSwapSniper_$346",
																	"typeString": "contract PancakeSwapSniper"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_PancakeSwapSniper_$346",
																	"typeString": "contract PancakeSwapSniper"
																}
															],
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3197:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 323,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3197:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3197:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3197:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3180:38:1"
											},
											{
												"assignments": [
													330,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 344,
														"src": "3230:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 329,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3230:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 338,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3279:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 331,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3248:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3248:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3248:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 334,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "3271:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3248:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3248:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3229:53:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "3301:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "424e42207769746864726177616c206661696c6564",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3310:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ad76fab2cdc7aebb7ff971c5985712268876cb8ceed0ccad5a52c9355138889",
																"typeString": "literal_string \"BNB withdrawal failed\""
															},
															"value": "BNB withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ad76fab2cdc7aebb7ff971c5985712268876cb8ceed0ccad5a52c9355138889",
																"typeString": "literal_string \"BNB withdrawal failed\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3293:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3293:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "3293:41:1"
											}
										]
									},
									"functionSelector": "1d111d13",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawBNB",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3157:2:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3169:0:1"
									},
									"scope": 346,
									"src": "3137:205:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 347,
							"src": "575:2770:1"
						}
					],
					"src": "33:3314:1"
				},
				"id": 1
			}
		}
	}
}