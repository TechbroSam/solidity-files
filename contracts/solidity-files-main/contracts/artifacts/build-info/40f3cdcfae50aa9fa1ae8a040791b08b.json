{
	"id": "40f3cdcfae50aa9fa1ae8a040791b08b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mybotfinal1.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract MyContract {\r\n    uint256 public stor0;\r\n\r\n    fallback() external payable {\r\n        bytes memory mem = new bytes(64);\r\n       mem[64] = bytes1(uint8(96));\r\n\r\n        if (msg.data.length > 0) {\r\n            require(msg.sender == 0xD106dE5cD9A2954dAa48FCCA338DECC8A092c051);\r\n            if (msg.sender == 0xD106dE5cD9A2954dAa48FCCA338DECC8A092c051) {\r\n                if (msg.value > 0) {\r\n                    // Your code here\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/mybotfinal1.sol": {
				"MyContract": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "stor0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mybotfinal1.sol\":66:558  contract MyContract {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/mybotfinal1.sol\":66:558  contract MyContract {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a9e02ba\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"contracts/mybotfinal1.sol\":161:177  bytes memory mem */\n      0x00\n        /* \"contracts/mybotfinal1.sol\":190:192  64 */\n      0x40\n        /* \"contracts/mybotfinal1.sol\":180:193  new bytes(64) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_6\n      jumpi\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n    tag_6:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_9\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_9:\n      pop\n        /* \"contracts/mybotfinal1.sol\":161:193  bytes memory mem = new bytes(64) */\n      swap1\n      pop\n        /* \"contracts/mybotfinal1.sol\":226:228  96 */\n      0x60\n        /* \"contracts/mybotfinal1.sol\":213:230  bytes1(uint8(96)) */\n      0xf8\n      shl\n        /* \"contracts/mybotfinal1.sol\":203:206  mem */\n      dup2\n        /* \"contracts/mybotfinal1.sol\":207:209  64 */\n      0x40\n        /* \"contracts/mybotfinal1.sol\":203:210  mem[64] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_10\n      jumpi\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n    tag_10:\n      0x20\n      add\n      add\n        /* \"contracts/mybotfinal1.sol\":203:230  mem[64] = bytes1(uint8(96)) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/mybotfinal1.sol\":265:266  0 */\n      0x00\n        /* \"contracts/mybotfinal1.sol\":247:255  msg.data */\n      dup1\n      calldatasize\n        /* \"contracts/mybotfinal1.sol\":247:262  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/mybotfinal1.sol\":247:266  msg.data.length > 0 */\n      gt\n        /* \"contracts/mybotfinal1.sol\":243:548  if (msg.data.length > 0) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/mybotfinal1.sol\":305:347  0xD106dE5cD9A2954dAa48FCCA338DECC8A092c051 */\n      0xd106de5cd9a2954daa48fcca338decc8a092c051\n        /* \"contracts/mybotfinal1.sol\":291:347  msg.sender == 0xD106dE5cD9A2954dAa48FCCA338DECC8A092c051 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mybotfinal1.sol\":291:301  msg.sender */\n      caller\n        /* \"contracts/mybotfinal1.sol\":291:347  msg.sender == 0xD106dE5cD9A2954dAa48FCCA338DECC8A092c051 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/mybotfinal1.sol\":283:348  require(msg.sender == 0xD106dE5cD9A2954dAa48FCCA338DECC8A092c051) */\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n        /* \"contracts/mybotfinal1.sol\":243:548  if (msg.data.length > 0) {... */\n    tag_13:\n        /* \"contracts/mybotfinal1.sol\":150:555  {... */\n      stop\n        /* \"contracts/mybotfinal1.sol\":93:113  uint256 public stor0 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_19:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_8:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x41\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:373   */\n    tag_12:\n        /* \"#utility.yul\":241:318   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":238:239   */\n      0x00\n        /* \"#utility.yul\":231:319   */\n      mstore\n        /* \"#utility.yul\":338:342   */\n      0x32\n        /* \"#utility.yul\":335:336   */\n      0x04\n        /* \"#utility.yul\":328:343   */\n      mstore\n        /* \"#utility.yul\":362:366   */\n      0x24\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":352:367   */\n      revert\n        /* \"#utility.yul\":379:456   */\n    tag_22:\n        /* \"#utility.yul\":416:423   */\n      0x00\n        /* \"#utility.yul\":445:450   */\n      dup2\n        /* \"#utility.yul\":434:450   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":462:580   */\n    tag_23:\n        /* \"#utility.yul\":549:573   */\n      tag_29\n        /* \"#utility.yul\":567:572   */\n      dup2\n        /* \"#utility.yul\":549:573   */\n      tag_22\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":544:547   */\n      dup3\n        /* \"#utility.yul\":537:574   */\n      mstore\n        /* \"#utility.yul\":462:580   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":586:808   */\n    tag_21:\n        /* \"#utility.yul\":679:683   */\n      0x00\n        /* \"#utility.yul\":717:719   */\n      0x20\n        /* \"#utility.yul\":706:715   */\n      dup3\n        /* \"#utility.yul\":702:720   */\n      add\n        /* \"#utility.yul\":694:720   */\n      swap1\n      pop\n        /* \"#utility.yul\":730:801   */\n      tag_31\n        /* \"#utility.yul\":798:799   */\n      0x00\n        /* \"#utility.yul\":787:796   */\n      dup4\n        /* \"#utility.yul\":783:800   */\n      add\n        /* \"#utility.yul\":774:780   */\n      dup5\n        /* \"#utility.yul\":730:801   */\n      tag_23\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":586:808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205107c44c6d8edf5c2dc49081fada4a068d040803ab8e7374b88736d9b13a7b8664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610211806100206000396000f3fe6080604052600436106100225760003560e01c80639a9e02ba1461011857610023565b5b6000604067ffffffffffffffff8111156100405761003f610149565b5b6040519080825280601f01601f1916602001820160405280156100725781602001600182028036833780820191505090505b509050606060f81b8160408151811061008e5761008d610178565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060008036905011156101165773d106de5cd9a2954daa48fcca338decc8a092c05173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011557600080fd5b5b005b34801561012457600080fd5b5061012d610143565b60405161013a91906101c0565b60405180910390f35b60005481565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b6101ba816101a7565b82525050565b60006020820190506101d560008301846101b1565b9291505056fea26469706673582212205107c44c6d8edf5c2dc49081fada4a068d040803ab8e7374b88736d9b13a7b8664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A9E02BA EQ PUSH2 0x118 JUMPI PUSH2 0x23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40 JUMPI PUSH2 0x3F PUSH2 0x149 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x72 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 PUSH1 0xF8 SHL DUP2 PUSH1 0x40 DUP2 MLOAD DUP2 LT PUSH2 0x8E JUMPI PUSH2 0x8D PUSH2 0x178 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 DUP1 CALLDATASIZE SWAP1 POP GT ISZERO PUSH2 0x116 JUMPI PUSH20 0xD106DE5CD9A2954DAA48FCCA338DECC8A092C051 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA DUP2 PUSH2 0x1A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD SMOD 0xC4 0x4C PUSH14 0x8EDF5C2DC49081FADA4A068D0408 SUB 0xAB DUP15 PUSH20 0x74B88736D9B13A7B8664736F6C63430008120033 ",
							"sourceMap": "66:492:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stor0_3": {
									"entryPoint": 323,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:811:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "221:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "238:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "241:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "231:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "335:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "328:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "328:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "359:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "362:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "352:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "352:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "193:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "424:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "434:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "445:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "434:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "406:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "416:7:1",
														"type": ""
													}
												],
												"src": "379:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "527:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "544:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "567:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "549:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "549:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "537:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "515:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "522:3:1",
														"type": ""
													}
												],
												"src": "462:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "694:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "706:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "717:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "694:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "774:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "787:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "798:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "783:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "730:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "730:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "730:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "656:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "668:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "679:4:1",
														"type": ""
													}
												],
												"src": "586:222:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c80639a9e02ba1461011857610023565b5b6000604067ffffffffffffffff8111156100405761003f610149565b5b6040519080825280601f01601f1916602001820160405280156100725781602001600182028036833780820191505090505b509050606060f81b8160408151811061008e5761008d610178565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060008036905011156101165773d106de5cd9a2954daa48fcca338decc8a092c05173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011557600080fd5b5b005b34801561012457600080fd5b5061012d610143565b60405161013a91906101c0565b60405180910390f35b60005481565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b6101ba816101a7565b82525050565b60006020820190506101d560008301846101b1565b9291505056fea26469706673582212205107c44c6d8edf5c2dc49081fada4a068d040803ab8e7374b88736d9b13a7b8664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A9E02BA EQ PUSH2 0x118 JUMPI PUSH2 0x23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40 JUMPI PUSH2 0x3F PUSH2 0x149 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x72 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 PUSH1 0xF8 SHL DUP2 PUSH1 0x40 DUP2 MLOAD DUP2 LT PUSH2 0x8E JUMPI PUSH2 0x8D PUSH2 0x178 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 DUP1 CALLDATASIZE SWAP1 POP GT ISZERO PUSH2 0x116 JUMPI PUSH20 0xD106DE5CD9A2954DAA48FCCA338DECC8A092C051 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA DUP2 PUSH2 0x1A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD SMOD 0xC4 0x4C PUSH14 0x8EDF5C2DC49081FADA4A068D0408 SUB 0xAB DUP15 PUSH20 0x74B88736D9B13A7B8664736F6C63430008120033 ",
							"sourceMap": "66:492:0:-:0;;;;;;;;;;;;;;;;;;;;;161:16;190:2;180:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:32;;226:2;213:17;;203:3;207:2;203:7;;;;;;;;:::i;:::-;;;;;:27;;;;;;;;;;;265:1;247:8;;:15;;:19;243:305;;;305:42;291:56;;:10;:56;;;283:65;;;;;;243:305;150:405;93:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:180;241:77;238:1;231:88;338:4;335:1;328:15;362:4;359:1;352:15;379:77;416:7;445:5;434:16;;379:77;;;:::o;462:118::-;549:24;567:5;549:24;:::i;:::-;544:3;537:37;462:118;;:::o;586:222::-;679:4;717:2;706:9;702:18;694:26;;730:71;798:1;787:9;783:17;774:6;730:71;:::i;:::-;586:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "105800",
								"executionCost": "153",
								"totalCost": "105953"
							},
							"external": {
								"": "424",
								"stor0()": "2407"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 558,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 558,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 558,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 558,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 558,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 558,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 558,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 558,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205107c44c6d8edf5c2dc49081fada4a068d040803ab8e7374b88736d9b13a7b8664736f6c63430008120033",
									".code": [
										{
											"begin": 66,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "9A9E02BA"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 558,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 180,
											"end": 193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 228,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 213,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 213,
											"end": 230,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 203,
											"end": 206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 203,
											"end": 210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 203,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 203,
											"end": 210,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 203,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 203,
											"end": 210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 203,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 203,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 203,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 203,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 203,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 203,
											"end": 210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 203,
											"end": 210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 203,
											"end": 230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 203,
											"end": 230,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 203,
											"end": 230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 203,
											"end": 230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 203,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 230,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 203,
											"end": 230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 230,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 203,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 265,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 255,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 266,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 243,
											"end": 548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 243,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 305,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "D106DE5CD9A2954DAA48FCCA338DECC8A092C051"
										},
										{
											"begin": 291,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 291,
											"end": 347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 291,
											"end": 301,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 291,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 291,
											"end": 347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 291,
											"end": 347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 283,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 283,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 283,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 283,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 283,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 243,
											"end": 548,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 150,
											"end": 555,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 93,
											"end": 113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 93,
											"end": 113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 373,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 193,
											"end": 373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 238,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 338,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 335,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 362,
											"end": 366,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 379,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 379,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 379,
											"end": 456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 379,
											"end": 456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 379,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 379,
											"end": 456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 462,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 462,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 549,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 567,
											"end": 572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 549,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 549,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 549,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 549,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 544,
											"end": 547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 537,
											"end": 574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 462,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 462,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 462,
											"end": 580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 808,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 586,
											"end": 808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 679,
											"end": 683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 702,
											"end": 720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 694,
											"end": 720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 694,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 798,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 796,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 774,
											"end": 780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 730,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 730,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 801,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 730,
											"end": 801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 586,
											"end": 808,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 586,
											"end": 808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 586,
											"end": 808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/mybotfinal1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"stor0()": "9a9e02ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"stor0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mybotfinal1.sol\":\"MyContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mybotfinal1.sol\":{\"keccak256\":\"0x3a52e9f486065823df6ed3a39ffce3d7bb89ebb9c7d7d9ba9659937de42e8ead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdf189e51f4b7d6c09041f0a73578343f68a0411f355ff051dd183aaaaca394f\",\"dweb:/ipfs/Qmbo7TgwY9Q5xbHBosBKb9E3YqW677MiCG4ZL5ztgtpQi1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/mybotfinal1.sol:MyContract",
								"label": "stor0",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> contracts/mybotfinal1.sol:7:1:\n  |\n7 | contract MyContract {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> contracts/mybotfinal1.sol:10:5:\n   |\n10 |     fallback() external payable {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 555,
						"file": "contracts/mybotfinal1.sol",
						"message": "The payable fallback function is defined here.",
						"start": 122
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 558,
					"file": "contracts/mybotfinal1.sol",
					"start": 66
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/mybotfinal1.sol": {
				"ast": {
					"absolutePath": "contracts/mybotfinal1.sol",
					"exportedSymbols": {
						"MyContract": [
							53
						]
					},
					"id": 54,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "MyContract",
							"nameLocation": "75:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9a9e02ba",
									"id": 3,
									"mutability": "mutable",
									"name": "stor0",
									"nameLocation": "108:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "93:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "93:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "150:405:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "mem",
														"nameLocation": "174:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "161:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 6,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "161:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3634",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "190:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															}
														],
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "180:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 8,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "184:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "180:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "161:32:0"
											},
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 13,
															"name": "mem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "203:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 15,
														"indexExpression": {
															"hexValue": "3634",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "207:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 20,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "226:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		}
																	],
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "220:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 18,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "220:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "220:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "213:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes1_$",
																"typeString": "type(bytes1)"
															},
															"typeName": {
																"id": 16,
																"name": "bytes1",
																"nodeType": "ElementaryTypeName",
																"src": "213:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "213:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"src": "203:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "203:27:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 25,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "247:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "251:4:0",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"src": "247:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "256:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "247:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "265:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "247:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 50,
												"nodeType": "IfStatement",
												"src": "243:305:0",
												"trueBody": {
													"id": 49,
													"nodeType": "Block",
													"src": "268:280:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 31,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "291:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 32,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "295:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "291:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "307844313036644535634439413239353464416134384643434133333844454343384130393263303531",
																			"id": 33,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "305:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"value": "0xD106dE5cD9A2954dAa48FCCA338DECC8A092c051"
																		},
																		"src": "291:56:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 30,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "283:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "283:65:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 36,
															"nodeType": "ExpressionStatement",
															"src": "283:65:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 37,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "367:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "371:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "367:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "307844313036644535634439413239353464416134384643434133333844454343384130393263303531",
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "381:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0xD106dE5cD9A2954dAa48FCCA338DECC8A092c051"
																},
																"src": "367:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 48,
															"nodeType": "IfStatement",
															"src": "363:174:0",
															"trueBody": {
																"id": 47,
																"nodeType": "Block",
																"src": "425:112:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 44,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 41,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "448:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 42,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "452:5:0",
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "448:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 43,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "460:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "448:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 46,
																		"nodeType": "IfStatement",
																		"src": "444:78:0",
																		"trueBody": {
																			"id": 45,
																			"nodeType": "Block",
																			"src": "463:59:0",
																			"statements": []
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "150:0:0"
									},
									"scope": 53,
									"src": "122:433:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 54,
							"src": "66:492:0",
							"usedErrors": []
						}
					],
					"src": "39:521:0"
				},
				"id": 0
			}
		}
	}
}