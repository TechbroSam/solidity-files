{
	"id": "528e565681e6e3504c4485427e178b4e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Pond0x.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"solady/src/auth/Ownable.sol\";\r\nimport \"solady/src/tokens/ERC20.sol\";\r\n\r\ncontract Pond0x is Ownable, ERC20 {\r\n\r\n    bool public minable = false;\r\n    string internal _name = 'Pond0x';\r\n    string internal _symbol = 'PNDX';\r\n    uint8 internal _decimals = 18;\r\n    uint256 internal max_supply = 420690000000000000000000000000000;\r\n    address allowed_miner;\r\n\r\n   function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function directTransfer(address from, address to, uint256 amount) public virtual {\r\n        _transfer(_brutalized(from), _brutalized(to), amount);\r\n    }\r\n\r\n    function directSpendAllowance(address owner, address spender, uint256 amount) public virtual {\r\n        _spendAllowance(_brutalized(owner), _brutalized(spender), amount);\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        return super.transfer(_brutalized(to), amount);\r\n    }\r\n    function transferFrom(address from, address to, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        return super.transferFrom(_brutalized(from), _brutalized(to), amount);\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 difference)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        return super.increaseAllowance(_brutalized(spender), difference);\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 difference)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        return super.decreaseAllowance(_brutalized(spender), difference);\r\n    }\r\n\r\n    function _brutalized(address a) internal view returns (address result) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := or(a, shl(160, gas()))\r\n        }\r\n    }\r\n    function activate() external payable {\r\n        require(minable == false, \"INVALID\");\r\n        allowed_miner = msg.sender;\r\n        minable = true;\r\n        //LP Bootstrap\r\n         _mint(_brutalized(msg.sender), 2000000 ether);\r\n        \r\n    }\r\n    function mintSupplyFromMinedLP(address miner, uint256 value) external payable {\r\n        require(minable == true, \"INVALID\");\r\n        require(msg.sender == allowed_miner, \"INVALID\");\r\n        uint _supply = totalSupply();\r\n        uint _calculated = _supply + value;\r\n\r\n        require(_calculated <= max_supply, \"EXCEEDS MAX\");\r\n        _mint(_brutalized(miner), value);\r\n    }\r\n}"
			},
			"solady/src/tokens/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Simple ERC20 + EIP-2612 implementation.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\n///\n/// @dev Note:\n/// The ERC20 standard allows minting and transferring to and from the zero address,\n/// minting and transferring zero tokens, as well as self-approvals.\n/// For performance, this implementation WILL NOT revert for such actions.\n/// Please add any checks with overrides if desired.\nabstract contract ERC20 {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The total supply has overflowed.\n    error TotalSupplyOverflow();\n\n    /// @dev The allowance has overflowed.\n    error AllowanceOverflow();\n\n    /// @dev The allowance has underflowed.\n    error AllowanceUnderflow();\n\n    /// @dev Insufficient balance.\n    error InsufficientBalance();\n\n    /// @dev Insufficient allowance.\n    error InsufficientAllowance();\n\n    /// @dev The permit is invalid.\n    error InvalidPermit();\n\n    /// @dev The permit has expired.\n    error PermitExpired();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                           EVENTS                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Emitted when `amount` tokens is transferred from `from` to `to`.\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @dev Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /// @dev `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    uint256 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    /// @dev `keccak256(bytes(\"Approval(address,address,uint256)\"))`.\n    uint256 private constant _APPROVAL_EVENT_SIGNATURE =\n        0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          STORAGE                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The storage slot for the total supply.\n    uint256 private constant _TOTAL_SUPPLY_SLOT = 0x05345cdf77eb68f44c;\n\n    /// @dev The balance slot of `owner` is given by:\n    /// ```\n    ///     mstore(0x0c, _BALANCE_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let balanceSlot := keccak256(0x0c, 0x20)\n    /// ```\n    uint256 private constant _BALANCE_SLOT_SEED = 0x87a211a2;\n\n    /// @dev The allowance slot of (`owner`, `spender`) is given by:\n    /// ```\n    ///     mstore(0x20, spender)\n    ///     mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let allowanceSlot := keccak256(0x0c, 0x34)\n    /// ```\n    uint256 private constant _ALLOWANCE_SLOT_SEED = 0x7f5e9f20;\n\n    /// @dev The nonce slot of `owner` is given by:\n    /// ```\n    ///     mstore(0x0c, _NONCES_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let nonceSlot := keccak256(0x0c, 0x20)\n    /// ```\n    uint256 private constant _NONCES_SLOT_SEED = 0x38377508;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       ERC20 METADATA                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the name of the token.\n    function name() public view virtual returns (string memory);\n\n    /// @dev Returns the symbol of the token.\n    function symbol() public view virtual returns (string memory);\n\n    /// @dev Returns the decimals places of the token.\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                           ERC20                            */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the amount of tokens in existence.\n    function totalSupply() public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := sload(_TOTAL_SUPPLY_SLOT)\n        }\n    }\n\n    /// @dev Returns the amount of tokens owned by `owner`.\n    function balanceOf(address owner) public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x20))\n        }\n    }\n\n    /// @dev Returns the amount of tokens that `spender` can spend on behalf of `owner`.\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        returns (uint256 result)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x34))\n        }\n    }\n\n    /// @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n    ///\n    /// Emits a {Approval} event.\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the allowance slot and store the amount.\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, caller())\n            sstore(keccak256(0x0c, 0x34), amount)\n            // Emit the {Approval} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c)))\n        }\n        return true;\n    }\n\n    /// @dev Atomically increases the allowance granted to `spender` by the caller.\n    ///\n    /// Emits a {Approval} event.\n    function increaseAllowance(address spender, uint256 difference) public virtual returns (bool) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the allowance slot and load its value.\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, caller())\n            let allowanceSlot := keccak256(0x0c, 0x34)\n            let allowanceBefore := sload(allowanceSlot)\n            // Add to the allowance.\n            let allowanceAfter := add(allowanceBefore, difference)\n            // Revert upon overflow.\n            if lt(allowanceAfter, allowanceBefore) {\n                mstore(0x00, 0xf9067066) // `AllowanceOverflow()`.\n                revert(0x1c, 0x04)\n            }\n            // Store the updated allowance.\n            sstore(allowanceSlot, allowanceAfter)\n            // Emit the {Approval} event.\n            mstore(0x00, allowanceAfter)\n            log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c)))\n        }\n        return true;\n    }\n\n    /// @dev Atomically decreases the allowance granted to `spender` by the caller.\n    ///\n    /// Emits a {Approval} event.\n    function decreaseAllowance(address spender, uint256 difference) public virtual returns (bool) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the allowance slot and load its value.\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, caller())\n            let allowanceSlot := keccak256(0x0c, 0x34)\n            let allowanceBefore := sload(allowanceSlot)\n            // Revert if will underflow.\n            if lt(allowanceBefore, difference) {\n                mstore(0x00, 0x8301ab38) // `AllowanceUnderflow()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated allowance.\n            let allowanceAfter := sub(allowanceBefore, difference)\n            sstore(allowanceSlot, allowanceAfter)\n            // Emit the {Approval} event.\n            mstore(0x00, allowanceAfter)\n            log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c)))\n        }\n        return true;\n    }\n\n    /// @dev Transfer `amount` tokens from the caller to `to`.\n    ///\n    /// Requirements:\n    /// - `from` must at least have `amount`.\n    ///\n    /// Emits a {Transfer} event.\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        _beforeTokenTransfer(msg.sender, to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, caller())\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Compute the balance slot of `to`.\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance of `to`.\n            // Will not overflow because the sum of all user balances\n            // cannot exceed the maximum uint256 value.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, caller(), shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(msg.sender, to, amount);\n        return true;\n    }\n\n    /// @dev Transfers `amount` tokens from `from` to `to`.\n    ///\n    /// Note: Does not update the allowance if it is the maximum uint256 value.\n    ///\n    /// Requirements:\n    /// - `from` must at least have `amount`.\n    /// - The caller must have at least `amount` of allowance to transfer the tokens of `from`.\n    ///\n    /// Emits a {Transfer} event.\n    function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {\n        _beforeTokenTransfer(from, to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let from_ := shl(96, from)\n            // Compute the allowance slot and load its value.\n            mstore(0x20, caller())\n            mstore(0x0c, or(from_, _ALLOWANCE_SLOT_SEED))\n            let allowanceSlot := keccak256(0x0c, 0x34)\n            let allowance_ := sload(allowanceSlot)\n            // If the allowance is not the maximum uint256 value.\n            if iszero(eq(allowance_, not(0))) {\n                // Revert if the amount to be transferred exceeds the allowance.\n                if gt(amount, allowance_) {\n                    mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\n                    revert(0x1c, 0x04)\n                }\n                // Subtract and store the updated allowance.\n                sstore(allowanceSlot, sub(allowance_, amount))\n            }\n            // Compute the balance slot and load its value.\n            mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Compute the balance slot of `to`.\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance of `to`.\n            // Will not overflow because the sum of all user balances\n            // cannot exceed the maximum uint256 value.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(from, to, amount);\n        return true;\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          EIP-2612                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the current nonce for `owner`.\n    /// This value is used to compute the signature for EIP-2612 permit.\n    function nonces(address owner) public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the nonce slot and load its value.\n            mstore(0x0c, _NONCES_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x20))\n        }\n    }\n\n    /// @dev Sets `value` as the allowance of `spender` over the tokens of `owner`,\n    /// authorized by a signed approval by `owner`.\n    ///\n    /// Emits a {Approval} event.\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        bytes32 domainSeparator = DOMAIN_SEPARATOR();\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Grab the free memory pointer.\n            let m := mload(0x40)\n            // Revert if the block timestamp greater than `deadline`.\n            if gt(timestamp(), deadline) {\n                mstore(0x00, 0x1a15a3cc) // `PermitExpired()`.\n                revert(0x1c, 0x04)\n            }\n            // Clean the upper 96 bits.\n            owner := shr(96, shl(96, owner))\n            spender := shr(96, shl(96, spender))\n            // Compute the nonce slot and load its value.\n            mstore(0x0c, _NONCES_SLOT_SEED)\n            mstore(0x00, owner)\n            let nonceSlot := keccak256(0x0c, 0x20)\n            let nonceValue := sload(nonceSlot)\n            // Increment and store the updated nonce.\n            sstore(nonceSlot, add(nonceValue, 1))\n            // Prepare the inner hash.\n            // `keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")`.\n            // forgefmt: disable-next-item\n            mstore(m, 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n            mstore(add(m, 0x20), owner)\n            mstore(add(m, 0x40), spender)\n            mstore(add(m, 0x60), value)\n            mstore(add(m, 0x80), nonceValue)\n            mstore(add(m, 0xa0), deadline)\n            // Prepare the outer hash.\n            mstore(0, 0x1901)\n            mstore(0x20, domainSeparator)\n            mstore(0x40, keccak256(m, 0xc0))\n            // Prepare the ecrecover calldata.\n            mstore(0, keccak256(0x1e, 0x42))\n            mstore(0x20, and(0xff, v))\n            mstore(0x40, r)\n            mstore(0x60, s)\n            pop(staticcall(gas(), 1, 0, 0x80, 0x20, 0x20))\n            // If the ecrecover fails, the returndatasize will be 0x00,\n            // `owner` will be be checked if it equals the hash at 0x00,\n            // which evaluates to false (i.e. 0), and we will revert.\n            // If the ecrecover succeeds, the returndatasize will be 0x20,\n            // `owner` will be compared against the returned address at 0x20.\n            if iszero(eq(mload(returndatasize()), owner)) {\n                mstore(0x00, 0xddafbaef) // `InvalidPermit()`.\n                revert(0x1c, 0x04)\n            }\n            // Compute the allowance slot and store the value.\n            // The `owner` is already at slot 0x20.\n            mstore(0x40, or(shl(160, _ALLOWANCE_SLOT_SEED), spender))\n            sstore(keccak256(0x2c, 0x34), value)\n            // Emit the {Approval} event.\n            log3(add(m, 0x60), 0x20, _APPROVAL_EVENT_SIGNATURE, owner, spender)\n            mstore(0x40, m) // Restore the free memory pointer.\n            mstore(0x60, 0) // Restore the zero pointer.\n        }\n    }\n\n    /// @dev Returns the EIP-2612 domains separator.\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := mload(0x40) // Grab the free memory pointer.\n        }\n        //  We simply calculate it on-the-fly to allow for cases where the `name` may change.\n        bytes32 nameHash = keccak256(bytes(name()));\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := result\n            // `keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`.\n            // forgefmt: disable-next-item\n            mstore(m, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n            mstore(add(m, 0x20), nameHash)\n            // `keccak256(\"1\")`.\n            // forgefmt: disable-next-item\n            mstore(add(m, 0x40), 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6)\n            mstore(add(m, 0x60), chainid())\n            mstore(add(m, 0x80), address())\n            result := keccak256(m, 0xa0)\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                  INTERNAL MINT FUNCTIONS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Mints `amount` tokens to `to`, increasing the total supply.\n    ///\n    /// Emits a {Transfer} event.\n    function _mint(address to, uint256 amount) internal virtual {\n        _beforeTokenTransfer(address(0), to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let totalSupplyBefore := sload(_TOTAL_SUPPLY_SLOT)\n            let totalSupplyAfter := add(totalSupplyBefore, amount)\n            // Revert if the total supply overflows.\n            if lt(totalSupplyAfter, totalSupplyBefore) {\n                mstore(0x00, 0xe5cfe957) // `TotalSupplyOverflow()`.\n                revert(0x1c, 0x04)\n            }\n            // Store the updated total supply.\n            sstore(_TOTAL_SUPPLY_SLOT, totalSupplyAfter)\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, 0, shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(address(0), to, amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                  INTERNAL BURN FUNCTIONS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Burns `amount` tokens from `from`, reducing the total supply.\n    ///\n    /// Emits a {Transfer} event.\n    function _burn(address from, uint256 amount) internal virtual {\n        _beforeTokenTransfer(from, address(0), amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, from)\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Subtract and store the updated total supply.\n            sstore(_TOTAL_SUPPLY_SLOT, sub(sload(_TOTAL_SUPPLY_SLOT), amount))\n            // Emit the {Transfer} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, shl(96, from)), 0)\n        }\n        _afterTokenTransfer(from, address(0), amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                INTERNAL TRANSFER FUNCTIONS                 */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Moves `amount` of tokens from `from` to `to`.\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        _beforeTokenTransfer(from, to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let from_ := shl(96, from)\n            // Compute the balance slot and load its value.\n            mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Compute the balance slot of `to`.\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance of `to`.\n            // Will not overflow because the sum of all user balances\n            // cannot exceed the maximum uint256 value.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                INTERNAL ALLOWANCE FUNCTIONS                */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Updates the allowance of `owner` for `spender` based on spent `amount`.\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the allowance slot and load its value.\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            let allowanceSlot := keccak256(0x0c, 0x34)\n            let allowance_ := sload(allowanceSlot)\n            // If the allowance is not the maximum uint256 value.\n            if iszero(eq(allowance_, not(0))) {\n                // Revert if the amount to be transferred exceeds the allowance.\n                if gt(amount, allowance_) {\n                    mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\n                    revert(0x1c, 0x04)\n                }\n                // Subtract and store the updated allowance.\n                sstore(allowanceSlot, sub(allowance_, amount))\n            }\n        }\n    }\n\n    /// @dev Sets `amount` as the allowance of `spender` over the tokens of `owner`.\n    ///\n    /// Emits a {Approval} event.\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let owner_ := shl(96, owner)\n            // Compute the allowance slot and store the amount.\n            mstore(0x20, spender)\n            mstore(0x0c, or(owner_, _ALLOWANCE_SLOT_SEED))\n            sstore(keccak256(0x0c, 0x34), amount)\n            // Emit the {Approval} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, shr(96, owner_), shr(96, mload(0x2c)))\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                     HOOKS TO OVERRIDE                      */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Hook that is called before any transfer of tokens.\n    /// This includes minting and burning.\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /// @dev Hook that is called after any transfer of tokens.\n    /// This includes minting and burning.\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"solady/src/auth/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Simple single owner authorization mixin.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/auth/Ownable.sol)\n/// @dev While the ownable portion follows\n/// [EIP-173](https://eips.ethereum.org/EIPS/eip-173) for compatibility,\n/// the nomenclature for the 2-step ownership handover may be unique to this codebase.\nabstract contract Ownable {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The caller is not authorized to call the function.\n    error Unauthorized();\n\n    /// @dev The `newOwner` cannot be the zero address.\n    error NewOwnerIsZeroAddress();\n\n    /// @dev The `pendingOwner` does not have a valid handover request.\n    error NoHandoverRequest();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                           EVENTS                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The ownership is transferred from `oldOwner` to `newOwner`.\n    /// This event is intentionally kept the same as OpenZeppelin's Ownable to be\n    /// compatible with indexers and [EIP-173](https://eips.ethereum.org/EIPS/eip-173),\n    /// despite it not being as lightweight as a single argument event.\n    event OwnershipTransferred(address indexed oldOwner, address indexed newOwner);\n\n    /// @dev An ownership handover to `pendingOwner` has been requested.\n    event OwnershipHandoverRequested(address indexed pendingOwner);\n\n    /// @dev The ownership handover to `pendingOwner` has been canceled.\n    event OwnershipHandoverCanceled(address indexed pendingOwner);\n\n    /// @dev `keccak256(bytes(\"OwnershipTransferred(address,address)\"))`.\n    uint256 private constant _OWNERSHIP_TRANSFERRED_EVENT_SIGNATURE =\n        0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0;\n\n    /// @dev `keccak256(bytes(\"OwnershipHandoverRequested(address)\"))`.\n    uint256 private constant _OWNERSHIP_HANDOVER_REQUESTED_EVENT_SIGNATURE =\n        0xdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d;\n\n    /// @dev `keccak256(bytes(\"OwnershipHandoverCanceled(address)\"))`.\n    uint256 private constant _OWNERSHIP_HANDOVER_CANCELED_EVENT_SIGNATURE =\n        0xfa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          STORAGE                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The owner slot is given by: `not(_OWNER_SLOT_NOT)`.\n    /// It is intentionally chosen to be a high value\n    /// to avoid collision with lower slots.\n    /// The choice of manual storage layout is to enable compatibility\n    /// with both regular and upgradeable contracts.\n    uint256 private constant _OWNER_SLOT_NOT = 0x8b78c6d8;\n\n    /// The ownership handover slot of `newOwner` is given by:\n    /// ```\n    ///     mstore(0x00, or(shl(96, user), _HANDOVER_SLOT_SEED))\n    ///     let handoverSlot := keccak256(0x00, 0x20)\n    /// ```\n    /// It stores the expiry timestamp of the two-step ownership handover.\n    uint256 private constant _HANDOVER_SLOT_SEED = 0x389a75e1;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                     INTERNAL FUNCTIONS                     */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Initializes the owner directly without authorization guard.\n    /// This function must be called upon initialization,\n    /// regardless of whether the contract is upgradeable or not.\n    /// This is to enable generalization to both regular and upgradeable contracts,\n    /// and to save gas in case the initial owner is not the caller.\n    /// For performance reasons, this function will not check if there\n    /// is an existing owner.\n    function _initializeOwner(address newOwner) internal virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Clean the upper 96 bits.\n            newOwner := shr(96, shl(96, newOwner))\n            // Store the new value.\n            sstore(not(_OWNER_SLOT_NOT), newOwner)\n            // Emit the {OwnershipTransferred} event.\n            log3(0, 0, _OWNERSHIP_TRANSFERRED_EVENT_SIGNATURE, 0, newOwner)\n        }\n    }\n\n    /// @dev Sets the owner directly without authorization guard.\n    function _setOwner(address newOwner) internal virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ownerSlot := not(_OWNER_SLOT_NOT)\n            // Clean the upper 96 bits.\n            newOwner := shr(96, shl(96, newOwner))\n            // Emit the {OwnershipTransferred} event.\n            log3(0, 0, _OWNERSHIP_TRANSFERRED_EVENT_SIGNATURE, sload(ownerSlot), newOwner)\n            // Store the new value.\n            sstore(ownerSlot, newOwner)\n        }\n    }\n\n    /// @dev Throws if the sender is not the owner.\n    function _checkOwner() internal view virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // If the caller is not the stored owner, revert.\n            if iszero(eq(caller(), sload(not(_OWNER_SLOT_NOT)))) {\n                mstore(0x00, 0x82b42900) // `Unauthorized()`.\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /// @dev Returns how long a two-step ownership handover is valid for in seconds.\n    /// Override to return a different value if needed.\n    /// Made internal to conserve bytecode. Wrap it in a public function if needed.\n    function _ownershipHandoverValidFor() internal view virtual returns (uint64) {\n        return 48 * 3600;\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                  PUBLIC UPDATE FUNCTIONS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Allows the owner to transfer the ownership to `newOwner`.\n    function transferOwnership(address newOwner) public payable virtual onlyOwner {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if iszero(shl(96, newOwner)) {\n                mstore(0x00, 0x7448fbae) // `NewOwnerIsZeroAddress()`.\n                revert(0x1c, 0x04)\n            }\n        }\n        _setOwner(newOwner);\n    }\n\n    /// @dev Allows the owner to renounce their ownership.\n    function renounceOwnership() public payable virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /// @dev Request a two-step ownership handover to the caller.\n    /// The request will automatically expire in 48 hours (172800 seconds) by default.\n    function requestOwnershipHandover() public payable virtual {\n        unchecked {\n            uint256 expires = block.timestamp + _ownershipHandoverValidFor();\n            /// @solidity memory-safe-assembly\n            assembly {\n                // Compute and set the handover slot to `expires`.\n                mstore(0x0c, _HANDOVER_SLOT_SEED)\n                mstore(0x00, caller())\n                sstore(keccak256(0x0c, 0x20), expires)\n                // Emit the {OwnershipHandoverRequested} event.\n                log2(0, 0, _OWNERSHIP_HANDOVER_REQUESTED_EVENT_SIGNATURE, caller())\n            }\n        }\n    }\n\n    /// @dev Cancels the two-step ownership handover to the caller, if any.\n    function cancelOwnershipHandover() public payable virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute and set the handover slot to 0.\n            mstore(0x0c, _HANDOVER_SLOT_SEED)\n            mstore(0x00, caller())\n            sstore(keccak256(0x0c, 0x20), 0)\n            // Emit the {OwnershipHandoverCanceled} event.\n            log2(0, 0, _OWNERSHIP_HANDOVER_CANCELED_EVENT_SIGNATURE, caller())\n        }\n    }\n\n    /// @dev Allows the owner to complete the two-step ownership handover to `pendingOwner`.\n    /// Reverts if there is no existing ownership handover requested by `pendingOwner`.\n    function completeOwnershipHandover(address pendingOwner) public payable virtual onlyOwner {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute and set the handover slot to 0.\n            mstore(0x0c, _HANDOVER_SLOT_SEED)\n            mstore(0x00, pendingOwner)\n            let handoverSlot := keccak256(0x0c, 0x20)\n            // If the handover does not exist, or has expired.\n            if gt(timestamp(), sload(handoverSlot)) {\n                mstore(0x00, 0x6f5e8818) // `NoHandoverRequest()`.\n                revert(0x1c, 0x04)\n            }\n            // Set the handover slot to 0.\n            sstore(handoverSlot, 0)\n        }\n        _setOwner(pendingOwner);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                   PUBLIC READ FUNCTIONS                    */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the owner of the contract.\n    function owner() public view virtual returns (address result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := sload(not(_OWNER_SLOT_NOT))\n        }\n    }\n\n    /// @dev Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`.\n    function ownershipHandoverExpiresAt(address pendingOwner)\n        public\n        view\n        virtual\n        returns (uint256 result)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the handover slot.\n            mstore(0x0c, _HANDOVER_SLOT_SEED)\n            mstore(0x00, pendingOwner)\n            // Load the handover slot.\n            result := sload(keccak256(0x0c, 0x20))\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         MODIFIERS                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Marks a function as only callable by the owner.\n    modifier onlyOwner() virtual {\n        _checkOwner();\n        _;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Pond0x.sol": {
				"Pond0x": {
					"abi": [
						{
							"inputs": [],
							"name": "AllowanceOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AllowanceUnderflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPermit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NewOwnerIsZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoHandoverRequest",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PermitExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TotalSupplyOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "OwnershipHandoverCanceled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "OwnershipHandoverRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "result",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "activate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancelOwnershipHandover",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "completeOwnershipHandover",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "difference",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "directSpendAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "directTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "difference",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "miner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mintSupplyFromMinedLP",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "result",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "ownershipHandoverExpiresAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestOwnershipHandover",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AllowanceOverflow()": [
								{
									"details": "The allowance has overflowed."
								}
							],
							"AllowanceUnderflow()": [
								{
									"details": "The allowance has underflowed."
								}
							],
							"InsufficientAllowance()": [
								{
									"details": "Insufficient allowance."
								}
							],
							"InsufficientBalance()": [
								{
									"details": "Insufficient balance."
								}
							],
							"InvalidPermit()": [
								{
									"details": "The permit is invalid."
								}
							],
							"NewOwnerIsZeroAddress()": [
								{
									"details": "The `newOwner` cannot be the zero address."
								}
							],
							"NoHandoverRequest()": [
								{
									"details": "The `pendingOwner` does not have a valid handover request."
								}
							],
							"PermitExpired()": [
								{
									"details": "The permit has expired."
								}
							],
							"TotalSupplyOverflow()": [
								{
									"details": "The total supply has overflowed."
								}
							],
							"Unauthorized()": [
								{
									"details": "The caller is not authorized to call the function."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
							},
							"OwnershipHandoverCanceled(address)": {
								"details": "The ownership handover to `pendingOwner` has been canceled."
							},
							"OwnershipHandoverRequested(address)": {
								"details": "An ownership handover to `pendingOwner` has been requested."
							},
							"OwnershipTransferred(address,address)": {
								"details": "The ownership is transferred from `oldOwner` to `newOwner`. This event is intentionally kept the same as OpenZeppelin's Ownable to be compatible with indexers and [EIP-173](https://eips.ethereum.org/EIPS/eip-173), despite it not being as lightweight as a single argument event."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the EIP-2612 domains separator."
							},
							"allowance(address,address)": {
								"details": "Returns the amount of tokens that `spender` can spend on behalf of `owner`."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `owner`."
							},
							"cancelOwnershipHandover()": {
								"details": "Cancels the two-step ownership handover to the caller, if any."
							},
							"completeOwnershipHandover(address)": {
								"details": "Allows the owner to complete the two-step ownership handover to `pendingOwner`. Reverts if there is no existing ownership handover requested by `pendingOwner`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. Emits a {Approval} event."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. Emits a {Approval} event."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit."
							},
							"owner()": {
								"details": "Returns the owner of the contract."
							},
							"ownershipHandoverExpiresAt(address)": {
								"details": "Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event."
							},
							"renounceOwnership()": {
								"details": "Allows the owner to renounce their ownership."
							},
							"requestOwnershipHandover()": {
								"details": "Request a two-step ownership handover to the caller. The request will automatically expire in 48 hours (172800 seconds) by default."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Allows the owner to transfer the ownership to `newOwner`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Pond0x.sol\":141:2810  contract Pond0x is Ownable, ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Pond0x.sol\":206:211  false */\n  0x00\n    /* \"contracts/Pond0x.sol\":184:211  bool public minable = false */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Pond0x.sol\":218:250  string internal _name = 'Pond0x' */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x506f6e6430780000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x01\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/Pond0x.sol\":257:289  string internal _symbol = 'PNDX' */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x504e445800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x02\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/Pond0x.sol\":323:325  18 */\n  0x12\n    /* \"contracts/Pond0x.sol\":296:325  uint8 internal _decimals = 18 */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Pond0x.sol\":362:395  420690000000000000000000000000000 */\n  0x14bddab3e51a57cff87a50000000\n    /* \"contracts/Pond0x.sol\":332:395  uint256 internal max_supply = 420690000000000000000000000000000 */\n  0x04\n  sstore\n    /* \"contracts/Pond0x.sol\":141:2810  contract Pond0x is Ownable, ERC20 {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  jump(tag_5)\n    /* \"#utility.yul\":7:106   */\ntag_6:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_7:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_8:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_9:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_31:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_33\n  tag_8\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":714:798   */\ntag_32:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_10:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_11:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_12:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_13:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_38\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_12\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1429:1468   */\n  tag_39\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_12\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_14:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_15:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_16:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_43\n    /* \"#utility.yul\":1818:1852   */\n  tag_44\n    /* \"#utility.yul\":1827:1851   */\n  tag_45\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_14\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1818:1852   */\n  tag_15\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1800:1853   */\n  tag_14\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_17:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_18:\n    /* \"#utility.yul\":2056:2095   */\n  tag_48\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_16\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2117:2208   */\n  tag_49\n    /* \"#utility.yul\":2166:2207   */\n  tag_50\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_13\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_19:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_20:\n    /* \"#utility.yul\":2377:2409   */\n  tag_53\n  tag_19\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2418:2483   */\n  tag_54\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_21:\n    /* \"#utility.yul\":2555:2675   */\ntag_56:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_59\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_20\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_22:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_62\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_10\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2906:2935   */\n  tag_63\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_11\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_64:\n    /* \"#utility.yul\":3133:3213   */\n  tag_65\n    /* \"#utility.yul\":3189:3211   */\n  tag_66\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_11\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_21\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_61:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_23:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_24:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_69\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_23\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_25:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_71\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_24\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_73\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_6\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_75\n  tag_7\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4038:4094   */\ntag_74:\n    /* \"#utility.yul\":4118:4156   */\n  tag_76\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_9\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":4203:4270   */\n  tag_77\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_79\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_80:\n    /* \"#utility.yul\":5144:5211   */\n  tag_81\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_25\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_78)\n    /* \"#utility.yul\":4365:4983   */\ntag_79:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_82\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_10\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_83:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_83)\ntag_85:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_87\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_24\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_86:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_78:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Pond0x.sol\":141:2810  contract Pond0x is Ownable, ERC20 {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Pond0x.sol\":141:2810  contract Pond0x is Ownable, ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x791879ef\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xd30ed3b3\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xf04e283e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xf04e283e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf83d1791\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfee81cf4\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0xd30ed3b3\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x791879ef\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_28:\n      dup1\n      0x313ce567\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x5372b2f6\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x5372b2f6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x54d1f13d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0f15f4c0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x25692962\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pond0x.sol\":431:531  function name() public view virtual override returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solady/src/tokens/ERC20.sol\":5995:6568  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pond0x.sol\":2177:2422  function activate() external payable {... */\n    tag_4:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"solady/src/tokens/ERC20.sol\":4847:5042  function totalSupply() public view virtual returns (uint256 result) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pond0x.sol\":1261:1493  function transferFrom(address from, address to, uint256 amount)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solady/src/auth/Ownable.sol\":7162:7779  function requestOwnershipHandover() public payable virtual {... */\n    tag_7:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/Pond0x.sol\":651:751  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solady/src/tokens/ERC20.sol\":17096:18158  function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pond0x.sol\":1501:1728  function increaseAllowance(address spender, uint256 difference)... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pond0x.sol\":2428:2807  function mintSupplyFromMinedLP(address miner, uint256 value) external payable {... */\n    tag_11:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"solady/src/auth/Ownable.sol\":7861:8317  function cancelOwnershipHandover() public payable virtual {... */\n    tag_12:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"solady/src/tokens/ERC20.sol\":5108:5394  function balanceOf(address owner) public view virtual returns (uint256 result) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solady/src/auth/Ownable.sol\":6903:7003  function renounceOwnership() public payable virtual onlyOwner {... */\n    tag_14:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/Pond0x.sol\":184:211  bool public minable = false */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solady/src/tokens/ERC20.sol\":13503:13843  function nonces(address owner) public view virtual returns (uint256 result) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solady/src/auth/Ownable.sol\":9549:9740  function owner() public view virtual returns (address result) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pond0x.sol\":539:643  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pond0x.sol\":1736:1963  function decreaseAllowance(address spender, uint256 difference)... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pond0x.sol\":1105:1255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pond0x.sol\":920:1097  function directSpendAllowance(address owner, address spender, uint256 amount) public virtual {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"solady/src/tokens/ERC20.sol\":14027:17037  function permit(... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n    tag_121:\n      stop\n        /* \"solady/src/tokens/ERC20.sol\":5489:5864  function allowance(address owner, address spender)... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      tag_129\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solady/src/auth/Ownable.sol\":8504:9212  function completeOwnershipHandover(address pendingOwner) public payable virtual onlyOwner {... */\n    tag_24:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      stop\n        /* \"solady/src/auth/Ownable.sol\":6489:6838  function transferOwnership(address newOwner) public payable virtual onlyOwner {... */\n    tag_25:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      stop\n        /* \"contracts/Pond0x.sol\":759:912  function directTransfer(address from, address to, uint256 amount) public virtual {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"solady/src/auth/Ownable.sol\":9843:10278  function ownershipHandoverExpiresAt(address pendingOwner)... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pond0x.sol\":431:531  function name() public view virtual override returns (string memory) {... */\n    tag_35:\n        /* \"contracts/Pond0x.sol\":485:498  string memory */\n      0x60\n        /* \"contracts/Pond0x.sol\":518:523  _name */\n      0x01\n        /* \"contracts/Pond0x.sol\":511:523  return _name */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_148\n      jump\t// in\n    tag_149:\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_151\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_150)\n    tag_151:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_152:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_152\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Pond0x.sol\":431:531  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":5995:6568  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_42:\n        /* \"solady/src/tokens/ERC20.sol\":6069:6073  bool */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":6228:6235  spender */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":6222:6226  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":6215:6236  mstore(0x20, spender) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":6262:6282  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"solady/src/tokens/ERC20.sol\":6256:6260  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":6249:6283  mstore(0x0c, _ALLOWANCE_SLOT_SEED) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":6309:6317  caller() */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":6303:6307  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":6296:6318  mstore(0x00, caller()) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":6361:6367  amount */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":6354:6358  0x34 */\n      0x34\n        /* \"solady/src/tokens/ERC20.sol\":6348:6352  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":6338:6359  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":6331:6368  sstore(keccak256(0x0c, 0x34), amount) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":6436:6442  amount */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":6430:6434  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":6423:6443  mstore(0x00, amount) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":6524:6528  0x2c */\n      0x2c\n        /* \"solady/src/tokens/ERC20.sol\":6518:6529  mload(0x2c) */\n      mload\n        /* \"solady/src/tokens/ERC20.sol\":6514:6516  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":6510:6530  shr(96, mload(0x2c)) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":6500:6508  caller() */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":6473:6498  _APPROVAL_EVENT_SIGNATURE */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"solady/src/tokens/ERC20.sol\":6467:6471  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":6461:6465  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":6456:6531  log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c))) */\n      log3\n        /* \"solady/src/tokens/ERC20.sol\":6557:6561  true */\n      0x01\n        /* \"solady/src/tokens/ERC20.sol\":6550:6561  return true */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":5995:6568  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":2177:2422  function activate() external payable {... */\n    tag_46:\n        /* \"contracts/Pond0x.sol\":2244:2249  false */\n      0x00\n        /* \"contracts/Pond0x.sol\":2233:2249  minable == false */\n      iszero\n      iszero\n        /* \"contracts/Pond0x.sol\":2233:2240  minable */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pond0x.sol\":2233:2249  minable == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Pond0x.sol\":2225:2261  require(minable == false, \"INVALID\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/Pond0x.sol\":2288:2298  msg.sender */\n      caller\n        /* \"contracts/Pond0x.sol\":2272:2285  allowed_miner */\n      0x05\n      0x00\n        /* \"contracts/Pond0x.sol\":2272:2298  allowed_miner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pond0x.sol\":2319:2323  true */\n      0x01\n        /* \"contracts/Pond0x.sol\":2309:2316  minable */\n      0x00\n      dup1\n        /* \"contracts/Pond0x.sol\":2309:2323  minable = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pond0x.sol\":2359:2404  _mint(_brutalized(msg.sender), 2000000 ether) */\n      tag_158\n        /* \"contracts/Pond0x.sol\":2365:2388  _brutalized(msg.sender) */\n      tag_159\n        /* \"contracts/Pond0x.sol\":2377:2387  msg.sender */\n      caller\n        /* \"contracts/Pond0x.sol\":2365:2376  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":2365:2388  _brutalized(msg.sender) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/Pond0x.sol\":2390:2403  2000000 ether */\n      0x01a784379d99db42000000\n        /* \"contracts/Pond0x.sol\":2359:2364  _mint */\n      tag_161\n        /* \"contracts/Pond0x.sol\":2359:2404  _mint(_brutalized(msg.sender), 2000000 ether) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/Pond0x.sol\":2177:2422  function activate() external payable {... */\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":4847:5042  function totalSupply() public view virtual returns (uint256 result) {... */\n    tag_49:\n        /* \"solady/src/tokens/ERC20.sol\":4899:4913  uint256 result */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":5007:5025  _TOTAL_SUPPLY_SLOT */\n      0x05345cdf77eb68f44c\n        /* \"solady/src/tokens/ERC20.sol\":5001:5026  sload(_TOTAL_SUPPLY_SLOT) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":4991:5026  result := sload(_TOTAL_SUPPLY_SLOT) */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":4847:5042  function totalSupply() public view virtual returns (uint256 result) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":1261:1493  function transferFrom(address from, address to, uint256 amount)... */\n    tag_56:\n        /* \"contracts/Pond0x.sol\":1394:1398  bool */\n      0x00\n        /* \"contracts/Pond0x.sol\":1423:1485  super.transferFrom(_brutalized(from), _brutalized(to), amount) */\n      tag_164\n        /* \"contracts/Pond0x.sol\":1442:1459  _brutalized(from) */\n      tag_165\n        /* \"contracts/Pond0x.sol\":1454:1458  from */\n      dup6\n        /* \"contracts/Pond0x.sol\":1442:1453  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":1442:1459  _brutalized(from) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/Pond0x.sol\":1461:1476  _brutalized(to) */\n      tag_166\n        /* \"contracts/Pond0x.sol\":1473:1475  to */\n      dup6\n        /* \"contracts/Pond0x.sol\":1461:1472  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":1461:1476  _brutalized(to) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/Pond0x.sol\":1478:1484  amount */\n      dup5\n        /* \"contracts/Pond0x.sol\":1423:1441  super.transferFrom */\n      tag_167\n        /* \"contracts/Pond0x.sol\":1423:1485  super.transferFrom(_brutalized(from), _brutalized(to), amount) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/Pond0x.sol\":1416:1485  return super.transferFrom(_brutalized(from), _brutalized(to), amount) */\n      swap1\n      pop\n        /* \"contracts/Pond0x.sol\":1261:1493  function transferFrom(address from, address to, uint256 amount)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/auth/Ownable.sol\":7162:7779  function requestOwnershipHandover() public payable virtual {... */\n    tag_59:\n        /* \"solady/src/auth/Ownable.sol\":7255:7270  uint256 expires */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":7291:7319  _ownershipHandoverValidFor() */\n      tag_169\n        /* \"solady/src/auth/Ownable.sol\":7291:7317  _ownershipHandoverValidFor */\n      tag_170\n        /* \"solady/src/auth/Ownable.sol\":7291:7319  _ownershipHandoverValidFor() */\n      jump\t// in\n    tag_169:\n        /* \"solady/src/auth/Ownable.sol\":7273:7319  block.timestamp + _ownershipHandoverValidFor() */\n      0xffffffffffffffff\n      and\n        /* \"solady/src/auth/Ownable.sol\":7273:7288  block.timestamp */\n      timestamp\n        /* \"solady/src/auth/Ownable.sol\":7273:7319  block.timestamp + _ownershipHandoverValidFor() */\n      add\n        /* \"solady/src/auth/Ownable.sol\":7255:7319  uint256 expires = block.timestamp + _ownershipHandoverValidFor() */\n      swap1\n      pop\n        /* \"solady/src/auth/Ownable.sol\":7487:7506  _HANDOVER_SLOT_SEED */\n      0x389a75e1\n        /* \"solady/src/auth/Ownable.sol\":7481:7485  0x0c */\n      0x0c\n        /* \"solady/src/auth/Ownable.sol\":7474:7507  mstore(0x0c, _HANDOVER_SLOT_SEED) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":7537:7545  caller() */\n      caller\n        /* \"solady/src/auth/Ownable.sol\":7531:7535  0x00 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":7524:7546  mstore(0x00, caller()) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":7593:7600  expires */\n      dup1\n        /* \"solady/src/auth/Ownable.sol\":7586:7590  0x20 */\n      0x20\n        /* \"solady/src/auth/Ownable.sol\":7580:7584  0x0c */\n      0x0c\n        /* \"solady/src/auth/Ownable.sol\":7570:7591  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/auth/Ownable.sol\":7563:7601  sstore(keccak256(0x0c, 0x20), expires) */\n      sstore\n        /* \"solady/src/auth/Ownable.sol\":7740:7748  caller() */\n      caller\n        /* \"solady/src/auth/Ownable.sol\":7693:7738  _OWNERSHIP_HANDOVER_REQUESTED_EVENT_SIGNATURE */\n      0xdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d\n        /* \"solady/src/auth/Ownable.sol\":7690:7691  0 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":7687:7688  0 */\n      dup1\n        /* \"solady/src/auth/Ownable.sol\":7682:7749  log2(0, 0, _OWNERSHIP_HANDOVER_REQUESTED_EVENT_SIGNATURE, caller()) */\n      log2\n        /* \"solady/src/auth/Ownable.sol\":7389:7763  {... */\n      pop\n        /* \"solady/src/auth/Ownable.sol\":7162:7779  function requestOwnershipHandover() public payable virtual {... */\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":651:751  function decimals() public view virtual override returns (uint8) {... */\n    tag_62:\n        /* \"contracts/Pond0x.sol\":709:714  uint8 */\n      0x00\n        /* \"contracts/Pond0x.sol\":734:743  _decimals */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pond0x.sol\":727:743  return _decimals */\n      swap1\n      pop\n        /* \"contracts/Pond0x.sol\":651:751  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":17096:18158  function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {... */\n    tag_67:\n        /* \"solady/src/tokens/ERC20.sol\":17153:17167  bytes32 result */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":17261:17265  0x40 */\n      0x40\n        /* \"solady/src/tokens/ERC20.sol\":17255:17266  mload(0x40) */\n      mload\n        /* \"solady/src/tokens/ERC20.sol\":17245:17266  result := mload(0x40) */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":17412:17428  bytes32 nameHash */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":17447:17453  name() */\n      tag_173\n        /* \"solady/src/tokens/ERC20.sol\":17447:17451  name */\n      tag_35\n        /* \"solady/src/tokens/ERC20.sol\":17447:17453  name() */\n      jump\t// in\n    tag_173:\n        /* \"solady/src/tokens/ERC20.sol\":17431:17455  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":17412:17455  bytes32 nameHash = keccak256(bytes(name())) */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":17540:17546  result */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":17726:17792  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"solady/src/tokens/ERC20.sol\":17723:17724  m */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":17716:17793  mstore(m, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":17827:17835  nameHash */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":17820:17824  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":17817:17818  m */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":17813:17825  add(m, 0x20) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":17806:17836  mstore(add(m, 0x20), nameHash) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":17946:18012  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6 */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"solady/src/tokens/ERC20.sol\":17939:17943  0x40 */\n      0x40\n        /* \"solady/src/tokens/ERC20.sol\":17936:17937  m */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":17932:17944  add(m, 0x40) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":17925:18013  mstore(add(m, 0x40), 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":18047:18056  chainid() */\n      chainid\n        /* \"solady/src/tokens/ERC20.sol\":18040:18044  0x60 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":18037:18038  m */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":18033:18045  add(m, 0x60) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":18026:18057  mstore(add(m, 0x60), chainid()) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":18091:18100  address() */\n      address\n        /* \"solady/src/tokens/ERC20.sol\":18084:18088  0x80 */\n      0x80\n        /* \"solady/src/tokens/ERC20.sol\":18081:18082  m */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":18077:18089  add(m, 0x80) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":18070:18101  mstore(add(m, 0x80), address()) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":18137:18141  0xa0 */\n      0xa0\n        /* \"solady/src/tokens/ERC20.sol\":18134:18135  m */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":18124:18142  keccak256(m, 0xa0) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":18114:18142  result := keccak256(m, 0xa0) */\n      swap3\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":17517:18152  {... */\n      pop\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":17096:18158  function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":1501:1728  function increaseAllowance(address spender, uint256 difference)... */\n    tag_73:\n        /* \"contracts/Pond0x.sol\":1634:1638  bool */\n      0x00\n        /* \"contracts/Pond0x.sol\":1663:1720  super.increaseAllowance(_brutalized(spender), difference) */\n      tag_175\n        /* \"contracts/Pond0x.sol\":1687:1707  _brutalized(spender) */\n      tag_176\n        /* \"contracts/Pond0x.sol\":1699:1706  spender */\n      dup5\n        /* \"contracts/Pond0x.sol\":1687:1698  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":1687:1707  _brutalized(spender) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/Pond0x.sol\":1709:1719  difference */\n      dup4\n        /* \"contracts/Pond0x.sol\":1663:1686  super.increaseAllowance */\n      tag_177\n        /* \"contracts/Pond0x.sol\":1663:1720  super.increaseAllowance(_brutalized(spender), difference) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/Pond0x.sol\":1656:1720  return super.increaseAllowance(_brutalized(spender), difference) */\n      swap1\n      pop\n        /* \"contracts/Pond0x.sol\":1501:1728  function increaseAllowance(address spender, uint256 difference)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":2428:2807  function mintSupplyFromMinedLP(address miner, uint256 value) external payable {... */\n    tag_77:\n        /* \"contracts/Pond0x.sol\":2536:2540  true */\n      0x01\n        /* \"contracts/Pond0x.sol\":2525:2540  minable == true */\n      iszero\n      iszero\n        /* \"contracts/Pond0x.sol\":2525:2532  minable */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pond0x.sol\":2525:2540  minable == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Pond0x.sol\":2517:2552  require(minable == true, \"INVALID\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_157\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/Pond0x.sol\":2585:2598  allowed_miner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Pond0x.sol\":2571:2598  msg.sender == allowed_miner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Pond0x.sol\":2571:2581  msg.sender */\n      caller\n        /* \"contracts/Pond0x.sol\":2571:2598  msg.sender == allowed_miner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Pond0x.sol\":2563:2610  require(msg.sender == allowed_miner, \"INVALID\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_157\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/Pond0x.sol\":2621:2633  uint _supply */\n      0x00\n        /* \"contracts/Pond0x.sol\":2636:2649  totalSupply() */\n      tag_183\n        /* \"contracts/Pond0x.sol\":2636:2647  totalSupply */\n      tag_49\n        /* \"contracts/Pond0x.sol\":2636:2649  totalSupply() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/Pond0x.sol\":2621:2649  uint _supply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/Pond0x.sol\":2660:2676  uint _calculated */\n      0x00\n        /* \"contracts/Pond0x.sol\":2689:2694  value */\n      dup3\n        /* \"contracts/Pond0x.sol\":2679:2686  _supply */\n      dup3\n        /* \"contracts/Pond0x.sol\":2679:2694  _supply + value */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/Pond0x.sol\":2660:2694  uint _calculated = _supply + value */\n      swap1\n      pop\n        /* \"contracts/Pond0x.sol\":2730:2740  max_supply */\n      sload(0x04)\n        /* \"contracts/Pond0x.sol\":2715:2726  _calculated */\n      dup2\n        /* \"contracts/Pond0x.sol\":2715:2740  _calculated <= max_supply */\n      gt\n      iszero\n        /* \"contracts/Pond0x.sol\":2707:2756  require(_calculated <= max_supply, \"EXCEEDS MAX\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/Pond0x.sol\":2767:2799  _mint(_brutalized(miner), value) */\n      tag_189\n        /* \"contracts/Pond0x.sol\":2773:2791  _brutalized(miner) */\n      tag_190\n        /* \"contracts/Pond0x.sol\":2785:2790  miner */\n      dup6\n        /* \"contracts/Pond0x.sol\":2773:2784  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":2773:2791  _brutalized(miner) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/Pond0x.sol\":2793:2798  value */\n      dup5\n        /* \"contracts/Pond0x.sol\":2767:2772  _mint */\n      tag_161\n        /* \"contracts/Pond0x.sol\":2767:2799  _mint(_brutalized(miner), value) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/Pond0x.sol\":2506:2807  {... */\n      pop\n      pop\n        /* \"contracts/Pond0x.sol\":2428:2807  function mintSupplyFromMinedLP(address miner, uint256 value) external payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/auth/Ownable.sol\":7861:8317  function cancelOwnershipHandover() public payable virtual {... */\n    tag_79:\n        /* \"solady/src/auth/Ownable.sol\":8063:8082  _HANDOVER_SLOT_SEED */\n      0x389a75e1\n        /* \"solady/src/auth/Ownable.sol\":8057:8061  0x0c */\n      0x0c\n        /* \"solady/src/auth/Ownable.sol\":8050:8083  mstore(0x0c, _HANDOVER_SLOT_SEED) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":8109:8117  caller() */\n      caller\n        /* \"solady/src/auth/Ownable.sol\":8103:8107  0x00 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":8096:8118  mstore(0x00, caller()) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":8161:8162  0 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":8154:8158  0x20 */\n      0x20\n        /* \"solady/src/auth/Ownable.sol\":8148:8152  0x0c */\n      0x0c\n        /* \"solady/src/auth/Ownable.sol\":8138:8159  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/auth/Ownable.sol\":8131:8163  sstore(keccak256(0x0c, 0x20), 0) */\n      sstore\n        /* \"solady/src/auth/Ownable.sol\":8292:8300  caller() */\n      caller\n        /* \"solady/src/auth/Ownable.sol\":8246:8290  _OWNERSHIP_HANDOVER_CANCELED_EVENT_SIGNATURE */\n      0xfa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92\n        /* \"solady/src/auth/Ownable.sol\":8243:8244  0 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":8240:8241  0 */\n      dup1\n        /* \"solady/src/auth/Ownable.sol\":8235:8301  log2(0, 0, _OWNERSHIP_HANDOVER_CANCELED_EVENT_SIGNATURE, caller()) */\n      log2\n        /* \"solady/src/auth/Ownable.sol\":7861:8317  function cancelOwnershipHandover() public payable virtual {... */\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":5108:5394  function balanceOf(address owner) public view virtual returns (uint256 result) {... */\n    tag_84:\n        /* \"solady/src/tokens/ERC20.sol\":5171:5185  uint256 result */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":5276:5294  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"solady/src/tokens/ERC20.sol\":5270:5274  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":5263:5295  mstore(0x0c, _BALANCE_SLOT_SEED) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":5321:5326  owner */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":5315:5319  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":5308:5327  mstore(0x00, owner) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":5372:5376  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":5366:5370  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":5356:5377  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":5350:5378  sload(keccak256(0x0c, 0x20)) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":5340:5378  result := sload(keccak256(0x0c, 0x20)) */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":5108:5394  function balanceOf(address owner) public view virtual returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"solady/src/auth/Ownable.sol\":6903:7003  function renounceOwnership() public payable virtual onlyOwner {... */\n    tag_87:\n        /* \"solady/src/auth/Ownable.sol\":10667:10680  _checkOwner() */\n      tag_194\n        /* \"solady/src/auth/Ownable.sol\":10667:10678  _checkOwner */\n      tag_195\n        /* \"solady/src/auth/Ownable.sol\":10667:10680  _checkOwner() */\n      jump\t// in\n    tag_194:\n        /* \"solady/src/auth/Ownable.sol\":6975:6996  _setOwner(address(0)) */\n      tag_197\n        /* \"solady/src/auth/Ownable.sol\":6993:6994  0 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":6975:6984  _setOwner */\n      tag_198\n        /* \"solady/src/auth/Ownable.sol\":6975:6996  _setOwner(address(0)) */\n      jump\t// in\n    tag_197:\n        /* \"solady/src/auth/Ownable.sol\":6903:7003  function renounceOwnership() public payable virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":184:211  bool public minable = false */\n    tag_90:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":13503:13843  function nonces(address owner) public view virtual returns (uint256 result) {... */\n    tag_95:\n        /* \"solady/src/tokens/ERC20.sol\":13563:13577  uint256 result */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":13726:13743  _NONCES_SLOT_SEED */\n      0x38377508\n        /* \"solady/src/tokens/ERC20.sol\":13720:13724  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":13713:13744  mstore(0x0c, _NONCES_SLOT_SEED) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":13770:13775  owner */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":13764:13768  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":13757:13776  mstore(0x00, owner) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":13821:13825  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":13815:13819  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":13805:13826  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":13799:13827  sload(keccak256(0x0c, 0x20)) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":13789:13827  result := sload(keccak256(0x0c, 0x20)) */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":13503:13843  function nonces(address owner) public view virtual returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"solady/src/auth/Ownable.sol\":9549:9740  function owner() public view virtual returns (address result) {... */\n    tag_99:\n        /* \"solady/src/auth/Ownable.sol\":9595:9609  address result */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":9707:9722  _OWNER_SLOT_NOT */\n      0x8b78c6d8\n        /* \"solady/src/auth/Ownable.sol\":9703:9723  not(_OWNER_SLOT_NOT) */\n      not\n        /* \"solady/src/auth/Ownable.sol\":9697:9724  sload(not(_OWNER_SLOT_NOT)) */\n      sload\n        /* \"solady/src/auth/Ownable.sol\":9687:9724  result := sload(not(_OWNER_SLOT_NOT)) */\n      swap1\n      pop\n        /* \"solady/src/auth/Ownable.sol\":9549:9740  function owner() public view virtual returns (address result) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":539:643  function symbol() public view virtual override returns (string memory) {... */\n    tag_104:\n        /* \"contracts/Pond0x.sol\":595:608  string memory */\n      0x60\n        /* \"contracts/Pond0x.sol\":628:635  _symbol */\n      0x02\n        /* \"contracts/Pond0x.sol\":621:635  return _symbol */\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_148\n      jump\t// in\n    tag_202:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_203\n      swap1\n      tag_148\n      jump\t// in\n    tag_203:\n      dup1\n      iszero\n      tag_204\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_205\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_204)\n    tag_205:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_206:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_206\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Pond0x.sol\":539:643  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":1736:1963  function decreaseAllowance(address spender, uint256 difference)... */\n    tag_109:\n        /* \"contracts/Pond0x.sol\":1869:1873  bool */\n      0x00\n        /* \"contracts/Pond0x.sol\":1898:1955  super.decreaseAllowance(_brutalized(spender), difference) */\n      tag_208\n        /* \"contracts/Pond0x.sol\":1922:1942  _brutalized(spender) */\n      tag_209\n        /* \"contracts/Pond0x.sol\":1934:1941  spender */\n      dup5\n        /* \"contracts/Pond0x.sol\":1922:1933  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":1922:1942  _brutalized(spender) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/Pond0x.sol\":1944:1954  difference */\n      dup4\n        /* \"contracts/Pond0x.sol\":1898:1921  super.decreaseAllowance */\n      tag_210\n        /* \"contracts/Pond0x.sol\":1898:1955  super.decreaseAllowance(_brutalized(spender), difference) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/Pond0x.sol\":1891:1955  return super.decreaseAllowance(_brutalized(spender), difference) */\n      swap1\n      pop\n        /* \"contracts/Pond0x.sol\":1736:1963  function decreaseAllowance(address spender, uint256 difference)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":1105:1255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_114:\n        /* \"contracts/Pond0x.sol\":1184:1188  bool */\n      0x00\n        /* \"contracts/Pond0x.sol\":1208:1247  super.transfer(_brutalized(to), amount) */\n      tag_212\n        /* \"contracts/Pond0x.sol\":1223:1238  _brutalized(to) */\n      tag_213\n        /* \"contracts/Pond0x.sol\":1235:1237  to */\n      dup5\n        /* \"contracts/Pond0x.sol\":1223:1234  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":1223:1238  _brutalized(to) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/Pond0x.sol\":1240:1246  amount */\n      dup4\n        /* \"contracts/Pond0x.sol\":1208:1222  super.transfer */\n      tag_214\n        /* \"contracts/Pond0x.sol\":1208:1247  super.transfer(_brutalized(to), amount) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/Pond0x.sol\":1201:1247  return super.transfer(_brutalized(to), amount) */\n      swap1\n      pop\n        /* \"contracts/Pond0x.sol\":1105:1255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":920:1097  function directSpendAllowance(address owner, address spender, uint256 amount) public virtual {... */\n    tag_119:\n        /* \"contracts/Pond0x.sol\":1024:1089  _spendAllowance(_brutalized(owner), _brutalized(spender), amount) */\n      tag_216\n        /* \"contracts/Pond0x.sol\":1040:1058  _brutalized(owner) */\n      tag_217\n        /* \"contracts/Pond0x.sol\":1052:1057  owner */\n      dup5\n        /* \"contracts/Pond0x.sol\":1040:1051  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":1040:1058  _brutalized(owner) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/Pond0x.sol\":1060:1080  _brutalized(spender) */\n      tag_218\n        /* \"contracts/Pond0x.sol\":1072:1079  spender */\n      dup5\n        /* \"contracts/Pond0x.sol\":1060:1071  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":1060:1080  _brutalized(spender) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/Pond0x.sol\":1082:1088  amount */\n      dup4\n        /* \"contracts/Pond0x.sol\":1024:1039  _spendAllowance */\n      tag_219\n        /* \"contracts/Pond0x.sol\":1024:1089  _spendAllowance(_brutalized(owner), _brutalized(spender), amount) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/Pond0x.sol\":920:1097  function directSpendAllowance(address owner, address spender, uint256 amount) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":14027:17037  function permit(... */\n    tag_124:\n        /* \"solady/src/tokens/ERC20.sol\":14226:14249  bytes32 domainSeparator */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":14252:14270  DOMAIN_SEPARATOR() */\n      tag_221\n        /* \"solady/src/tokens/ERC20.sol\":14252:14268  DOMAIN_SEPARATOR */\n      tag_67\n        /* \"solady/src/tokens/ERC20.sol\":14252:14270  DOMAIN_SEPARATOR() */\n      jump\t// in\n    tag_221:\n        /* \"solady/src/tokens/ERC20.sol\":14226:14270  bytes32 domainSeparator = DOMAIN_SEPARATOR() */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":14406:14410  0x40 */\n      0x40\n        /* \"solady/src/tokens/ERC20.sol\":14400:14411  mload(0x40) */\n      mload\n        /* \"solady/src/tokens/ERC20.sol\":14513:14521  deadline */\n      dup6\n        /* \"solady/src/tokens/ERC20.sol\":14500:14511  timestamp() */\n      timestamp\n        /* \"solady/src/tokens/ERC20.sol\":14497:14522  gt(timestamp(), deadline) */\n      gt\n        /* \"solady/src/tokens/ERC20.sol\":14494:14636  if gt(timestamp(), deadline) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":14554:14564  0x1a15a3cc */\n      0x1a15a3cc\n        /* \"solady/src/tokens/ERC20.sol\":14548:14552  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":14541:14565  mstore(0x00, 0x1a15a3cc) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":14617:14621  0x04 */\n      0x04\n        /* \"solady/src/tokens/ERC20.sol\":14611:14615  0x1c */\n      0x1c\n        /* \"solady/src/tokens/ERC20.sol\":14604:14622  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/tokens/ERC20.sol\":14494:14636  if gt(timestamp(), deadline) {... */\n    tag_222:\n        /* \"solady/src/tokens/ERC20.sol\":14714:14719  owner */\n      dup9\n        /* \"solady/src/tokens/ERC20.sol\":14710:14712  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":14706:14720  shl(96, owner) */\n      shl\n        /* \"solady/src/tokens/ERC20.sol\":14702:14704  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":14698:14721  shr(96, shl(96, owner)) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":14689:14721  owner := shr(96, shl(96, owner)) */\n      swap9\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":14761:14768  spender */\n      dup8\n        /* \"solady/src/tokens/ERC20.sol\":14757:14759  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":14753:14769  shl(96, spender) */\n      shl\n        /* \"solady/src/tokens/ERC20.sol\":14749:14751  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":14745:14770  shr(96, shl(96, spender)) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":14734:14770  spender := shr(96, shl(96, spender)) */\n      swap8\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":14854:14871  _NONCES_SLOT_SEED */\n      0x38377508\n        /* \"solady/src/tokens/ERC20.sol\":14848:14852  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":14841:14872  mstore(0x0c, _NONCES_SLOT_SEED) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":14898:14903  owner */\n      dup9\n        /* \"solady/src/tokens/ERC20.sol\":14892:14896  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":14885:14904  mstore(0x00, owner) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":14950:14954  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":14944:14948  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":14934:14955  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":14992:15001  nonceSlot */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":14986:15002  sload(nonceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":15103:15104  1 */\n      0x01\n        /* \"solady/src/tokens/ERC20.sol\":15091:15101  nonceValue */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":15087:15105  add(nonceValue, 1) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":15076:15085  nonceSlot */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":15069:15106  sstore(nonceSlot, add(nonceValue, 1)) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":15325:15391  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"solady/src/tokens/ERC20.sol\":15322:15323  m */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":15315:15392  mstore(m, 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15426:15431  owner */\n      dup11\n        /* \"solady/src/tokens/ERC20.sol\":15419:15423  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":15416:15417  m */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":15412:15424  add(m, 0x20) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":15405:15432  mstore(add(m, 0x20), owner) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15466:15473  spender */\n      dup10\n        /* \"solady/src/tokens/ERC20.sol\":15459:15463  0x40 */\n      0x40\n        /* \"solady/src/tokens/ERC20.sol\":15456:15457  m */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":15452:15464  add(m, 0x40) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":15445:15474  mstore(add(m, 0x40), spender) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15508:15513  value */\n      dup9\n        /* \"solady/src/tokens/ERC20.sol\":15501:15505  0x60 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":15498:15499  m */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":15494:15506  add(m, 0x60) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":15487:15514  mstore(add(m, 0x60), value) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15548:15558  nonceValue */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":15541:15545  0x80 */\n      0x80\n        /* \"solady/src/tokens/ERC20.sol\":15538:15539  m */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":15534:15546  add(m, 0x80) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":15527:15559  mstore(add(m, 0x80), nonceValue) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15593:15601  deadline */\n      dup8\n        /* \"solady/src/tokens/ERC20.sol\":15586:15590  0xa0 */\n      0xa0\n        /* \"solady/src/tokens/ERC20.sol\":15583:15584  m */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":15579:15591  add(m, 0xa0) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":15572:15602  mstore(add(m, 0xa0), deadline) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15664:15670  0x1901 */\n      0x1901\n        /* \"solady/src/tokens/ERC20.sol\":15661:15662  0 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":15654:15671  mstore(0, 0x1901) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15697:15712  domainSeparator */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":15691:15695  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":15684:15713  mstore(0x20, domainSeparator) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15752:15756  0xc0 */\n      0xc0\n        /* \"solady/src/tokens/ERC20.sol\":15749:15750  m */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":15739:15757  keccak256(m, 0xc0) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":15733:15737  0x40 */\n      0x40\n        /* \"solady/src/tokens/ERC20.sol\":15726:15758  mstore(0x40, keccak256(m, 0xc0)) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15844:15848  0x42 */\n      0x42\n        /* \"solady/src/tokens/ERC20.sol\":15838:15842  0x1e */\n      0x1e\n        /* \"solady/src/tokens/ERC20.sol\":15828:15849  keccak256(0x1e, 0x42) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":15825:15826  0 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":15818:15850  mstore(0, keccak256(0x1e, 0x42)) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15886:15887  v */\n      dup7\n        /* \"solady/src/tokens/ERC20.sol\":15880:15884  0xff */\n      0xff\n        /* \"solady/src/tokens/ERC20.sol\":15876:15888  and(0xff, v) */\n      and\n        /* \"solady/src/tokens/ERC20.sol\":15870:15874  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":15863:15889  mstore(0x20, and(0xff, v)) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15915:15916  r */\n      dup6\n        /* \"solady/src/tokens/ERC20.sol\":15909:15913  0x40 */\n      0x40\n        /* \"solady/src/tokens/ERC20.sol\":15902:15917  mstore(0x40, r) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15943:15944  s */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":15937:15941  0x60 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":15930:15945  mstore(0x60, s) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":15998:16002  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":15992:15996  0x20 */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":15986:15990  0x80 */\n      0x80\n        /* \"solady/src/tokens/ERC20.sol\":15983:15984  0 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":15980:15981  1 */\n      0x01\n        /* \"solady/src/tokens/ERC20.sol\":15973:15978  gas() */\n      gas\n        /* \"solady/src/tokens/ERC20.sol\":15962:16003  staticcall(gas(), 1, 0, 0x80, 0x20, 0x20) */\n      staticcall\n        /* \"solady/src/tokens/ERC20.sol\":15958:16004  pop(staticcall(gas(), 1, 0, 0x80, 0x20, 0x20)) */\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":16423:16428  owner */\n      dup11\n        /* \"solady/src/tokens/ERC20.sol\":16404:16420  returndatasize() */\n      returndatasize\n        /* \"solady/src/tokens/ERC20.sol\":16398:16421  mload(returndatasize()) */\n      mload\n        /* \"solady/src/tokens/ERC20.sol\":16395:16429  eq(mload(returndatasize()), owner) */\n      eq\n        /* \"solady/src/tokens/ERC20.sol\":16385:16544  if iszero(eq(mload(returndatasize()), owner)) {... */\n      tag_223\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":16462:16472  0xddafbaef */\n      0xddafbaef\n        /* \"solady/src/tokens/ERC20.sol\":16456:16460  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":16449:16473  mstore(0x00, 0xddafbaef) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":16525:16529  0x04 */\n      0x04\n        /* \"solady/src/tokens/ERC20.sol\":16519:16523  0x1c */\n      0x1c\n        /* \"solady/src/tokens/ERC20.sol\":16512:16530  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/tokens/ERC20.sol\":16385:16544  if iszero(eq(mload(returndatasize()), owner)) {... */\n    tag_223:\n        /* \"solady/src/tokens/ERC20.sol\":16720:16727  spender */\n      dup10\n        /* \"solady/src/tokens/ERC20.sol\":16697:16717  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"solady/src/tokens/ERC20.sol\":16692:16695  160 */\n      0xa0\n        /* \"solady/src/tokens/ERC20.sol\":16688:16718  shl(160, _ALLOWANCE_SLOT_SEED) */\n      shl\n        /* \"solady/src/tokens/ERC20.sol\":16685:16728  or(shl(160, _ALLOWANCE_SLOT_SEED), spender) */\n      or\n        /* \"solady/src/tokens/ERC20.sol\":16679:16683  0x40 */\n      0x40\n        /* \"solady/src/tokens/ERC20.sol\":16672:16729  mstore(0x40, or(shl(160, _ALLOWANCE_SLOT_SEED), spender)) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":16772:16777  value */\n      dup9\n        /* \"solady/src/tokens/ERC20.sol\":16765:16769  0x34 */\n      0x34\n        /* \"solady/src/tokens/ERC20.sol\":16759:16763  0x2c */\n      0x2c\n        /* \"solady/src/tokens/ERC20.sol\":16749:16770  keccak256(0x2c, 0x34) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":16742:16778  sstore(keccak256(0x2c, 0x34), value) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":16892:16899  spender */\n      dup10\n        /* \"solady/src/tokens/ERC20.sol\":16885:16890  owner */\n      dup12\n        /* \"solady/src/tokens/ERC20.sol\":16858:16883  _APPROVAL_EVENT_SIGNATURE */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"solady/src/tokens/ERC20.sol\":16852:16856  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":16845:16849  0x60 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":16842:16843  m */\n      dup8\n        /* \"solady/src/tokens/ERC20.sol\":16838:16850  add(m, 0x60) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":16833:16900  log3(add(m, 0x60), 0x20, _APPROVAL_EVENT_SIGNATURE, owner, spender) */\n      log3\n        /* \"solady/src/tokens/ERC20.sol\":16926:16927  m */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":16920:16924  0x40 */\n      0x40\n        /* \"solady/src/tokens/ERC20.sol\":16913:16928  mstore(0x40, m) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":16990:16991  0 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":16984:16988  0x60 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":16977:16992  mstore(0x60, 0) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":14332:17031  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":14027:17037  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":5489:5864  function allowance(address owner, address spender)... */\n    tag_129:\n        /* \"solady/src/tokens/ERC20.sol\":5601:5615  uint256 result */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":5710:5717  spender */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":5704:5708  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":5697:5718  mstore(0x20, spender) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":5744:5764  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"solady/src/tokens/ERC20.sol\":5738:5742  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":5731:5765  mstore(0x0c, _ALLOWANCE_SLOT_SEED) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":5791:5796  owner */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":5785:5789  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":5778:5797  mstore(0x00, owner) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":5842:5846  0x34 */\n      0x34\n        /* \"solady/src/tokens/ERC20.sol\":5836:5840  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":5826:5847  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":5820:5848  sload(keccak256(0x0c, 0x34)) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":5810:5848  result := sload(keccak256(0x0c, 0x34)) */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":5489:5864  function allowance(address owner, address spender)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/auth/Ownable.sol\":8504:9212  function completeOwnershipHandover(address pendingOwner) public payable virtual onlyOwner {... */\n    tag_133:\n        /* \"solady/src/auth/Ownable.sol\":10667:10680  _checkOwner() */\n      tag_226\n        /* \"solady/src/auth/Ownable.sol\":10667:10678  _checkOwner */\n      tag_195\n        /* \"solady/src/auth/Ownable.sol\":10667:10680  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"solady/src/auth/Ownable.sol\":8738:8757  _HANDOVER_SLOT_SEED */\n      0x389a75e1\n        /* \"solady/src/auth/Ownable.sol\":8732:8736  0x0c */\n      0x0c\n        /* \"solady/src/auth/Ownable.sol\":8725:8758  mstore(0x0c, _HANDOVER_SLOT_SEED) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":8784:8796  pendingOwner */\n      dup1\n        /* \"solady/src/auth/Ownable.sol\":8778:8782  0x00 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":8771:8797  mstore(0x00, pendingOwner) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":8846:8850  0x20 */\n      0x20\n        /* \"solady/src/auth/Ownable.sol\":8840:8844  0x0c */\n      0x0c\n        /* \"solady/src/auth/Ownable.sol\":8830:8851  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/auth/Ownable.sol\":8952:8964  handoverSlot */\n      dup1\n        /* \"solady/src/auth/Ownable.sol\":8946:8965  sload(handoverSlot) */\n      sload\n        /* \"solady/src/auth/Ownable.sol\":8933:8944  timestamp() */\n      timestamp\n        /* \"solady/src/auth/Ownable.sol\":8930:8966  gt(timestamp(), sload(handoverSlot)) */\n      gt\n        /* \"solady/src/auth/Ownable.sol\":8927:9084  if gt(timestamp(), sload(handoverSlot)) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"solady/src/auth/Ownable.sol\":8998:9008  0x6f5e8818 */\n      0x6f5e8818\n        /* \"solady/src/auth/Ownable.sol\":8992:8996  0x00 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":8985:9009  mstore(0x00, 0x6f5e8818) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":9065:9069  0x04 */\n      0x04\n        /* \"solady/src/auth/Ownable.sol\":9059:9063  0x1c */\n      0x1c\n        /* \"solady/src/auth/Ownable.sol\":9052:9070  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/auth/Ownable.sol\":8927:9084  if gt(timestamp(), sload(handoverSlot)) {... */\n    tag_228:\n        /* \"solady/src/auth/Ownable.sol\":9161:9162  0 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":9147:9159  handoverSlot */\n      dup2\n        /* \"solady/src/auth/Ownable.sol\":9140:9163  sstore(handoverSlot, 0) */\n      sstore\n        /* \"solady/src/auth/Ownable.sol\":8656:9173  {... */\n      pop\n        /* \"solady/src/auth/Ownable.sol\":9182:9205  _setOwner(pendingOwner) */\n      tag_229\n        /* \"solady/src/auth/Ownable.sol\":9192:9204  pendingOwner */\n      dup2\n        /* \"solady/src/auth/Ownable.sol\":9182:9191  _setOwner */\n      tag_198\n        /* \"solady/src/auth/Ownable.sol\":9182:9205  _setOwner(pendingOwner) */\n      jump\t// in\n    tag_229:\n        /* \"solady/src/auth/Ownable.sol\":8504:9212  function completeOwnershipHandover(address pendingOwner) public payable virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"solady/src/auth/Ownable.sol\":6489:6838  function transferOwnership(address newOwner) public payable virtual onlyOwner {... */\n    tag_136:\n        /* \"solady/src/auth/Ownable.sol\":10667:10680  _checkOwner() */\n      tag_231\n        /* \"solady/src/auth/Ownable.sol\":10667:10678  _checkOwner */\n      tag_195\n        /* \"solady/src/auth/Ownable.sol\":10667:10680  _checkOwner() */\n      jump\t// in\n    tag_231:\n        /* \"solady/src/auth/Ownable.sol\":6661:6669  newOwner */\n      dup1\n        /* \"solady/src/auth/Ownable.sol\":6657:6659  96 */\n      0x60\n        /* \"solady/src/auth/Ownable.sol\":6653:6670  shl(96, newOwner) */\n      shl\n        /* \"solady/src/auth/Ownable.sol\":6643:6793  if iszero(shl(96, newOwner)) {... */\n      tag_233\n      jumpi\n        /* \"solady/src/auth/Ownable.sol\":6703:6713  0x7448fbae */\n      0x7448fbae\n        /* \"solady/src/auth/Ownable.sol\":6697:6701  0x00 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":6690:6714  mstore(0x00, 0x7448fbae) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":6774:6778  0x04 */\n      0x04\n        /* \"solady/src/auth/Ownable.sol\":6768:6772  0x1c */\n      0x1c\n        /* \"solady/src/auth/Ownable.sol\":6761:6779  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/auth/Ownable.sol\":6643:6793  if iszero(shl(96, newOwner)) {... */\n    tag_233:\n        /* \"solady/src/auth/Ownable.sol\":6812:6831  _setOwner(newOwner) */\n      tag_234\n        /* \"solady/src/auth/Ownable.sol\":6822:6830  newOwner */\n      dup2\n        /* \"solady/src/auth/Ownable.sol\":6812:6821  _setOwner */\n      tag_198\n        /* \"solady/src/auth/Ownable.sol\":6812:6831  _setOwner(newOwner) */\n      jump\t// in\n    tag_234:\n        /* \"solady/src/auth/Ownable.sol\":6489:6838  function transferOwnership(address newOwner) public payable virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":759:912  function directTransfer(address from, address to, uint256 amount) public virtual {... */\n    tag_140:\n        /* \"contracts/Pond0x.sol\":851:904  _transfer(_brutalized(from), _brutalized(to), amount) */\n      tag_236\n        /* \"contracts/Pond0x.sol\":861:878  _brutalized(from) */\n      tag_237\n        /* \"contracts/Pond0x.sol\":873:877  from */\n      dup5\n        /* \"contracts/Pond0x.sol\":861:872  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":861:878  _brutalized(from) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/Pond0x.sol\":880:895  _brutalized(to) */\n      tag_238\n        /* \"contracts/Pond0x.sol\":892:894  to */\n      dup5\n        /* \"contracts/Pond0x.sol\":880:891  _brutalized */\n      tag_160\n        /* \"contracts/Pond0x.sol\":880:895  _brutalized(to) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/Pond0x.sol\":897:903  amount */\n      dup4\n        /* \"contracts/Pond0x.sol\":851:860  _transfer */\n      tag_239\n        /* \"contracts/Pond0x.sol\":851:904  _transfer(_brutalized(from), _brutalized(to), amount) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/Pond0x.sol\":759:912  function directTransfer(address from, address to, uint256 amount) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/auth/Ownable.sol\":9843:10278  function ownershipHandoverExpiresAt(address pendingOwner)... */\n    tag_144:\n        /* \"solady/src/auth/Ownable.sol\":9962:9976  uint256 result */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":10113:10132  _HANDOVER_SLOT_SEED */\n      0x389a75e1\n        /* \"solady/src/auth/Ownable.sol\":10107:10111  0x0c */\n      0x0c\n        /* \"solady/src/auth/Ownable.sol\":10100:10133  mstore(0x0c, _HANDOVER_SLOT_SEED) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":10159:10171  pendingOwner */\n      dup2\n        /* \"solady/src/auth/Ownable.sol\":10153:10157  0x00 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":10146:10172  mstore(0x00, pendingOwner) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":10256:10260  0x20 */\n      0x20\n        /* \"solady/src/auth/Ownable.sol\":10250:10254  0x0c */\n      0x0c\n        /* \"solady/src/auth/Ownable.sol\":10240:10261  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/auth/Ownable.sol\":10234:10262  sload(keccak256(0x0c, 0x20)) */\n      sload\n        /* \"solady/src/auth/Ownable.sol\":10224:10262  result := sload(keccak256(0x0c, 0x20)) */\n      swap1\n      pop\n        /* \"solady/src/auth/Ownable.sol\":9843:10278  function ownershipHandoverExpiresAt(address pendingOwner)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Pond0x.sol\":1971:2171  function _brutalized(address a) internal view returns (address result) {... */\n    tag_160:\n        /* \"contracts/Pond0x.sol\":2026:2040  address result */\n      0x00\n        /* \"contracts/Pond0x.sol\":2146:2151  gas() */\n      gas\n        /* \"contracts/Pond0x.sol\":2141:2144  160 */\n      0xa0\n        /* \"contracts/Pond0x.sol\":2137:2152  shl(160, gas()) */\n      shl\n        /* \"contracts/Pond0x.sol\":2134:2135  a */\n      dup3\n        /* \"contracts/Pond0x.sol\":2131:2153  or(a, shl(160, gas())) */\n      or\n        /* \"contracts/Pond0x.sol\":2121:2153  result := or(a, shl(160, gas())) */\n      swap1\n      pop\n        /* \"contracts/Pond0x.sol\":1971:2171  function _brutalized(address a) internal view returns (address result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":18562:19734  function _mint(address to, uint256 amount) internal virtual {... */\n    tag_161:\n        /* \"solady/src/tokens/ERC20.sol\":18632:18676  _beforeTokenTransfer(address(0), to, amount) */\n      tag_243\n        /* \"solady/src/tokens/ERC20.sol\":18661:18662  0 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":18665:18667  to */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":18669:18675  amount */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":18632:18652  _beforeTokenTransfer */\n      tag_244\n        /* \"solady/src/tokens/ERC20.sol\":18632:18676  _beforeTokenTransfer(address(0), to, amount) */\n      jump\t// in\n    tag_243:\n        /* \"solady/src/tokens/ERC20.sol\":18783:18801  _TOTAL_SUPPLY_SLOT */\n      0x05345cdf77eb68f44c\n        /* \"solady/src/tokens/ERC20.sol\":18777:18802  sload(_TOTAL_SUPPLY_SLOT) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":18862:18868  amount */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":18843:18860  totalSupplyBefore */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":18839:18869  add(totalSupplyBefore, amount) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":18959:18976  totalSupplyBefore */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":18941:18957  totalSupplyAfter */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":18938:18977  lt(totalSupplyAfter, totalSupplyBefore) */\n      lt\n        /* \"solady/src/tokens/ERC20.sol\":18935:19097  if lt(totalSupplyAfter, totalSupplyBefore) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":19009:19019  0xe5cfe957 */\n      0xe5cfe957\n        /* \"solady/src/tokens/ERC20.sol\":19003:19007  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":18996:19020  mstore(0x00, 0xe5cfe957) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":19078:19082  0x04 */\n      0x04\n        /* \"solady/src/tokens/ERC20.sol\":19072:19076  0x1c */\n      0x1c\n        /* \"solady/src/tokens/ERC20.sol\":19065:19083  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/tokens/ERC20.sol\":18935:19097  if lt(totalSupplyAfter, totalSupplyBefore) {... */\n    tag_245:\n        /* \"solady/src/tokens/ERC20.sol\":19184:19200  totalSupplyAfter */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":19164:19182  _TOTAL_SUPPLY_SLOT */\n      0x05345cdf77eb68f44c\n        /* \"solady/src/tokens/ERC20.sol\":19157:19201  sstore(_TOTAL_SUPPLY_SLOT, totalSupplyAfter) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":19287:19305  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"solady/src/tokens/ERC20.sol\":19281:19285  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":19274:19306  mstore(0x0c, _BALANCE_SLOT_SEED) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":19332:19334  to */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":19326:19330  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":19319:19335  mstore(0x00, to) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":19385:19389  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":19379:19383  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":19369:19390  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":19501:19507  amount */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":19485:19498  toBalanceSlot */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":19479:19499  sload(toBalanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":19475:19508  add(sload(toBalanceSlot), amount) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":19460:19473  toBalanceSlot */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":19453:19509  sstore(toBalanceSlot, add(sload(toBalanceSlot), amount)) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":19577:19583  amount */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":19571:19575  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":19564:19584  mstore(0x20, amount) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":19658:19662  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":19652:19663  mload(0x0c) */\n      mload\n        /* \"solady/src/tokens/ERC20.sol\":19648:19650  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":19644:19664  shr(96, mload(0x0c)) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":19641:19642  0 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":19614:19639  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"solady/src/tokens/ERC20.sol\":19608:19612  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":19602:19606  0x20 */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":19597:19665  log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, 0, shr(96, mload(0x0c))) */\n      log3\n        /* \"solady/src/tokens/ERC20.sol\":18738:19675  {... */\n      pop\n      pop\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":19684:19727  _afterTokenTransfer(address(0), to, amount) */\n      tag_246\n        /* \"solady/src/tokens/ERC20.sol\":19712:19713  0 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":19716:19718  to */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":19720:19726  amount */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":19684:19703  _afterTokenTransfer */\n      tag_247\n        /* \"solady/src/tokens/ERC20.sol\":19684:19727  _afterTokenTransfer(address(0), to, amount) */\n      jump\t// in\n    tag_246:\n        /* \"solady/src/tokens/ERC20.sol\":18562:19734  function _mint(address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":10886:13089  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n    tag_167:\n        /* \"solady/src/tokens/ERC20.sol\":10974:10978  bool */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":10990:11028  _beforeTokenTransfer(from, to, amount) */\n      tag_249\n        /* \"solady/src/tokens/ERC20.sol\":11011:11015  from */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":11017:11019  to */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":11021:11027  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":10990:11010  _beforeTokenTransfer */\n      tag_244\n        /* \"solady/src/tokens/ERC20.sol\":10990:11028  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_249:\n        /* \"solady/src/tokens/ERC20.sol\":11125:11129  from */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":11121:11123  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":11117:11130  shl(96, from) */\n      shl\n        /* \"solady/src/tokens/ERC20.sol\":11218:11226  caller() */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":11212:11216  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":11205:11227  mstore(0x20, caller()) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":11263:11283  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"solady/src/tokens/ERC20.sol\":11256:11261  from_ */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":11253:11284  or(from_, _ALLOWANCE_SLOT_SEED) */\n      or\n        /* \"solady/src/tokens/ERC20.sol\":11247:11251  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":11240:11285  mstore(0x0c, or(from_, _ALLOWANCE_SLOT_SEED)) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":11335:11339  0x34 */\n      0x34\n        /* \"solady/src/tokens/ERC20.sol\":11329:11333  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":11319:11340  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":11377:11390  allowanceSlot */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":11371:11391  sload(allowanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":11499:11500  0 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":11495:11501  not(0) */\n      not\n        /* \"solady/src/tokens/ERC20.sol\":11483:11493  allowance_ */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":11480:11502  eq(allowance_, not(0)) */\n      eq\n        /* \"solady/src/tokens/ERC20.sol\":11470:11900  if iszero(eq(allowance_, not(0))) {... */\n      tag_250\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":11617:11627  allowance_ */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":11609:11615  amount */\n      dup6\n        /* \"solady/src/tokens/ERC20.sol\":11606:11628  gt(amount, allowance_) */\n      gt\n        /* \"solady/src/tokens/ERC20.sol\":11603:11762  if gt(amount, allowance_) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":11664:11674  0x13be252b */\n      0x13be252b\n        /* \"solady/src/tokens/ERC20.sol\":11658:11662  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":11651:11675  mstore(0x00, 0x13be252b) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":11739:11743  0x04 */\n      0x04\n        /* \"solady/src/tokens/ERC20.sol\":11733:11737  0x1c */\n      0x1c\n        /* \"solady/src/tokens/ERC20.sol\":11726:11744  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/tokens/ERC20.sol\":11603:11762  if gt(amount, allowance_) {... */\n    tag_251:\n        /* \"solady/src/tokens/ERC20.sol\":11878:11884  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":11866:11876  allowance_ */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":11862:11885  sub(allowance_, amount) */\n      sub\n        /* \"solady/src/tokens/ERC20.sol\":11847:11860  allowanceSlot */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":11840:11886  sstore(allowanceSlot, sub(allowance_, amount)) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":11470:11900  if iszero(eq(allowance_, not(0))) {... */\n    tag_250:\n        /* \"solady/src/tokens/ERC20.sol\":11996:12014  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"solady/src/tokens/ERC20.sol\":11989:11994  from_ */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":11986:12015  or(from_, _BALANCE_SLOT_SEED) */\n      or\n        /* \"solady/src/tokens/ERC20.sol\":11980:11984  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":11973:12016  mstore(0x0c, or(from_, _BALANCE_SLOT_SEED)) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":12068:12072  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":12062:12066  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":12052:12073  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":12111:12126  fromBalanceSlot */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":12105:12127  sload(fromBalanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":12201:12212  fromBalance */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":12193:12199  amount */\n      dup8\n        /* \"solady/src/tokens/ERC20.sol\":12190:12213  gt(amount, fromBalance) */\n      gt\n        /* \"solady/src/tokens/ERC20.sol\":12187:12333  if gt(amount, fromBalance) {... */\n      iszero\n      tag_252\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":12245:12255  0xf4d678b8 */\n      0xf4d678b8\n        /* \"solady/src/tokens/ERC20.sol\":12239:12243  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":12232:12256  mstore(0x00, 0xf4d678b8) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":12314:12318  0x04 */\n      0x04\n        /* \"solady/src/tokens/ERC20.sol\":12308:12312  0x1c */\n      0x1c\n        /* \"solady/src/tokens/ERC20.sol\":12301:12319  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/tokens/ERC20.sol\":12187:12333  if gt(amount, fromBalance) {... */\n    tag_252:\n        /* \"solady/src/tokens/ERC20.sol\":12442:12448  amount */\n      dup7\n        /* \"solady/src/tokens/ERC20.sol\":12429:12440  fromBalance */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":12425:12449  sub(fromBalance, amount) */\n      sub\n        /* \"solady/src/tokens/ERC20.sol\":12408:12423  fromBalanceSlot */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":12401:12450  sstore(fromBalanceSlot, sub(fromBalance, amount)) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":12525:12527  to */\n      dup8\n        /* \"solady/src/tokens/ERC20.sol\":12519:12523  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":12512:12528  mstore(0x00, to) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":12578:12582  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":12572:12576  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":12562:12583  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":12828:12834  amount */\n      dup8\n        /* \"solady/src/tokens/ERC20.sol\":12812:12825  toBalanceSlot */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":12806:12826  sload(toBalanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":12802:12835  add(sload(toBalanceSlot), amount) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":12787:12800  toBalanceSlot */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":12780:12836  sstore(toBalanceSlot, add(sload(toBalanceSlot), amount)) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":12904:12910  amount */\n      dup8\n        /* \"solady/src/tokens/ERC20.sol\":12898:12902  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":12891:12911  mstore(0x20, amount) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":12998:13002  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":12992:13003  mload(0x0c) */\n      mload\n        /* \"solady/src/tokens/ERC20.sol\":12988:12990  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":12984:13004  shr(96, mload(0x0c)) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":12976:12981  from_ */\n      dup7\n        /* \"solady/src/tokens/ERC20.sol\":12972:12974  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":12968:12982  shr(96, from_) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":12941:12966  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"solady/src/tokens/ERC20.sol\":12935:12939  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":12929:12933  0x20 */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":12924:13005  log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c))) */\n      log3\n        /* \"solady/src/tokens/ERC20.sol\":11090:13015  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":13024:13061  _afterTokenTransfer(from, to, amount) */\n      tag_253\n        /* \"solady/src/tokens/ERC20.sol\":13044:13048  from */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":13050:13052  to */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":13054:13060  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":13024:13043  _afterTokenTransfer */\n      tag_247\n        /* \"solady/src/tokens/ERC20.sol\":13024:13061  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_253:\n        /* \"solady/src/tokens/ERC20.sol\":13078:13082  true */\n      0x01\n        /* \"solady/src/tokens/ERC20.sol\":13071:13082  return true */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":10886:13089  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/auth/Ownable.sol\":6019:6129  function _ownershipHandoverValidFor() internal view virtual returns (uint64) {... */\n    tag_170:\n        /* \"solady/src/auth/Ownable.sol\":6088:6094  uint64 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":6113:6122  48 * 3600 */\n      0x02a300\n        /* \"solady/src/auth/Ownable.sol\":6106:6122  return 48 * 3600 */\n      swap1\n      pop\n        /* \"solady/src/auth/Ownable.sol\":6019:6129  function _ownershipHandoverValidFor() internal view virtual returns (uint64) {... */\n      swap1\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":6700:7758  function increaseAllowance(address spender, uint256 difference) public virtual returns (bool) {... */\n    tag_177:\n        /* \"solady/src/tokens/ERC20.sol\":6788:6792  bool */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":6945:6952  spender */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":6939:6943  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":6932:6953  mstore(0x20, spender) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":6979:6999  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"solady/src/tokens/ERC20.sol\":6973:6977  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":6966:7000  mstore(0x0c, _ALLOWANCE_SLOT_SEED) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":7026:7034  caller() */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":7020:7024  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":7013:7035  mstore(0x00, caller()) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":7085:7089  0x34 */\n      0x34\n        /* \"solady/src/tokens/ERC20.sol\":7079:7083  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":7069:7090  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":7132:7145  allowanceSlot */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":7126:7146  sload(allowanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":7239:7249  difference */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":7222:7237  allowanceBefore */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":7218:7250  add(allowanceBefore, difference) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":7322:7337  allowanceBefore */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":7306:7320  allowanceAfter */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":7303:7338  lt(allowanceAfter, allowanceBefore) */\n      lt\n        /* \"solady/src/tokens/ERC20.sol\":7300:7456  if lt(allowanceAfter, allowanceBefore) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":7370:7380  0xf9067066 */\n      0xf9067066\n        /* \"solady/src/tokens/ERC20.sol\":7364:7368  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":7357:7381  mstore(0x00, 0xf9067066) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":7437:7441  0x04 */\n      0x04\n        /* \"solady/src/tokens/ERC20.sol\":7431:7435  0x1c */\n      0x1c\n        /* \"solady/src/tokens/ERC20.sol\":7424:7442  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/tokens/ERC20.sol\":7300:7456  if lt(allowanceAfter, allowanceBefore) {... */\n    tag_256:\n        /* \"solady/src/tokens/ERC20.sol\":7535:7549  allowanceAfter */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":7520:7533  allowanceSlot */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":7513:7550  sstore(allowanceSlot, allowanceAfter) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":7618:7632  allowanceAfter */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":7612:7616  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":7605:7633  mstore(0x00, allowanceAfter) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":7714:7718  0x2c */\n      0x2c\n        /* \"solady/src/tokens/ERC20.sol\":7708:7719  mload(0x2c) */\n      mload\n        /* \"solady/src/tokens/ERC20.sol\":7704:7706  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":7700:7720  shr(96, mload(0x2c)) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":7690:7698  caller() */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":7663:7688  _APPROVAL_EVENT_SIGNATURE */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"solady/src/tokens/ERC20.sol\":7657:7661  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":7651:7655  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":7646:7721  log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c))) */\n      log3\n        /* \"solady/src/tokens/ERC20.sol\":6856:7731  {... */\n      pop\n      pop\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":7747:7751  true */\n      0x01\n        /* \"solady/src/tokens/ERC20.sol\":7740:7751  return true */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":6700:7758  function increaseAllowance(address spender, uint256 difference) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/auth/Ownable.sol\":5424:5788  function _checkOwner() internal view virtual {... */\n    tag_195:\n        /* \"solady/src/auth/Ownable.sol\":5640:5655  _OWNER_SLOT_NOT */\n      0x8b78c6d8\n        /* \"solady/src/auth/Ownable.sol\":5636:5656  not(_OWNER_SLOT_NOT) */\n      not\n        /* \"solady/src/auth/Ownable.sol\":5630:5657  sload(not(_OWNER_SLOT_NOT)) */\n      sload\n        /* \"solady/src/auth/Ownable.sol\":5620:5628  caller() */\n      caller\n        /* \"solady/src/auth/Ownable.sol\":5617:5658  eq(caller(), sload(not(_OWNER_SLOT_NOT))) */\n      eq\n        /* \"solady/src/auth/Ownable.sol\":5607:5772  if iszero(eq(caller(), sload(not(_OWNER_SLOT_NOT)))) {... */\n      tag_258\n      jumpi\n        /* \"solady/src/auth/Ownable.sol\":5691:5701  0x82b42900 */\n      0x82b42900\n        /* \"solady/src/auth/Ownable.sol\":5685:5689  0x00 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":5678:5702  mstore(0x00, 0x82b42900) */\n      mstore\n        /* \"solady/src/auth/Ownable.sol\":5753:5757  0x04 */\n      0x04\n        /* \"solady/src/auth/Ownable.sol\":5747:5751  0x1c */\n      0x1c\n        /* \"solady/src/auth/Ownable.sol\":5740:5758  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/auth/Ownable.sol\":5607:5772  if iszero(eq(caller(), sload(not(_OWNER_SLOT_NOT)))) {... */\n    tag_258:\n        /* \"solady/src/auth/Ownable.sol\":5424:5788  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"solady/src/auth/Ownable.sol\":4871:5366  function _setOwner(address newOwner) internal virtual {... */\n    tag_198:\n        /* \"solady/src/auth/Ownable.sol\":5022:5037  _OWNER_SLOT_NOT */\n      0x8b78c6d8\n        /* \"solady/src/auth/Ownable.sol\":5018:5038  not(_OWNER_SLOT_NOT) */\n      not\n        /* \"solady/src/auth/Ownable.sol\":5119:5127  newOwner */\n      dup2\n        /* \"solady/src/auth/Ownable.sol\":5115:5117  96 */\n      0x60\n        /* \"solady/src/auth/Ownable.sol\":5111:5128  shl(96, newOwner) */\n      shl\n        /* \"solady/src/auth/Ownable.sol\":5107:5109  96 */\n      0x60\n        /* \"solady/src/auth/Ownable.sol\":5103:5129  shr(96, shl(96, newOwner)) */\n      shr\n        /* \"solady/src/auth/Ownable.sol\":5091:5129  newOwner := shr(96, shl(96, newOwner)) */\n      swap2\n      pop\n        /* \"solady/src/auth/Ownable.sol\":5265:5273  newOwner */\n      dup2\n        /* \"solady/src/auth/Ownable.sol\":5253:5262  ownerSlot */\n      dup2\n        /* \"solady/src/auth/Ownable.sol\":5247:5263  sload(ownerSlot) */\n      sload\n        /* \"solady/src/auth/Ownable.sol\":5207:5245  _OWNERSHIP_TRANSFERRED_EVENT_SIGNATURE */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"solady/src/auth/Ownable.sol\":5204:5205  0 */\n      0x00\n        /* \"solady/src/auth/Ownable.sol\":5201:5202  0 */\n      dup1\n        /* \"solady/src/auth/Ownable.sol\":5196:5274  log3(0, 0, _OWNERSHIP_TRANSFERRED_EVENT_SIGNATURE, sload(ownerSlot), newOwner) */\n      log3\n        /* \"solady/src/auth/Ownable.sol\":5341:5349  newOwner */\n      dup2\n        /* \"solady/src/auth/Ownable.sol\":5330:5339  ownerSlot */\n      dup2\n        /* \"solady/src/auth/Ownable.sol\":5323:5350  sstore(ownerSlot, newOwner) */\n      sstore\n        /* \"solady/src/auth/Ownable.sol\":4987:5360  {... */\n      pop\n        /* \"solady/src/auth/Ownable.sol\":4871:5366  function _setOwner(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":7890:8925  function decreaseAllowance(address spender, uint256 difference) public virtual returns (bool) {... */\n    tag_210:\n        /* \"solady/src/tokens/ERC20.sol\":7978:7982  bool */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":8135:8142  spender */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":8129:8133  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":8122:8143  mstore(0x20, spender) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":8169:8189  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"solady/src/tokens/ERC20.sol\":8163:8167  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":8156:8190  mstore(0x0c, _ALLOWANCE_SLOT_SEED) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":8216:8224  caller() */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":8210:8214  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":8203:8225  mstore(0x00, caller()) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":8275:8279  0x34 */\n      0x34\n        /* \"solady/src/tokens/ERC20.sol\":8269:8273  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":8259:8280  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":8322:8335  allowanceSlot */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":8316:8336  sload(allowanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":8413:8423  difference */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":8396:8411  allowanceBefore */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":8393:8424  lt(allowanceBefore, difference) */\n      lt\n        /* \"solady/src/tokens/ERC20.sol\":8390:8543  if lt(allowanceBefore, difference) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":8456:8466  0x8301ab38 */\n      0x8301ab38\n        /* \"solady/src/tokens/ERC20.sol\":8450:8454  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":8443:8467  mstore(0x00, 0x8301ab38) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":8524:8528  0x04 */\n      0x04\n        /* \"solady/src/tokens/ERC20.sol\":8518:8522  0x1c */\n      0x1c\n        /* \"solady/src/tokens/ERC20.sol\":8511:8529  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/tokens/ERC20.sol\":8390:8543  if lt(allowanceBefore, difference) {... */\n    tag_261:\n        /* \"solady/src/tokens/ERC20.sol\":8656:8666  difference */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":8639:8654  allowanceBefore */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":8635:8667  sub(allowanceBefore, difference) */\n      sub\n        /* \"solady/src/tokens/ERC20.sol\":8702:8716  allowanceAfter */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":8687:8700  allowanceSlot */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":8680:8717  sstore(allowanceSlot, allowanceAfter) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":8785:8799  allowanceAfter */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":8779:8783  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":8772:8800  mstore(0x00, allowanceAfter) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":8881:8885  0x2c */\n      0x2c\n        /* \"solady/src/tokens/ERC20.sol\":8875:8886  mload(0x2c) */\n      mload\n        /* \"solady/src/tokens/ERC20.sol\":8871:8873  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":8867:8887  shr(96, mload(0x2c)) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":8857:8865  caller() */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":8830:8855  _APPROVAL_EVENT_SIGNATURE */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"solady/src/tokens/ERC20.sol\":8824:8828  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":8818:8822  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":8813:8888  log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c))) */\n      log3\n        /* \"solady/src/tokens/ERC20.sol\":8046:8898  {... */\n      pop\n      pop\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":8914:8918  true */\n      0x01\n        /* \"solady/src/tokens/ERC20.sol\":8907:8918  return true */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":7890:8925  function decreaseAllowance(address spender, uint256 difference) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":9112:10518  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_214:\n        /* \"solady/src/tokens/ERC20.sol\":9182:9186  bool */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":9198:9242  _beforeTokenTransfer(msg.sender, to, amount) */\n      tag_263\n        /* \"solady/src/tokens/ERC20.sol\":9219:9229  msg.sender */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":9231:9233  to */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":9235:9241  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":9198:9218  _beforeTokenTransfer */\n      tag_244\n        /* \"solady/src/tokens/ERC20.sol\":9198:9242  _beforeTokenTransfer(msg.sender, to, amount) */\n      jump\t// in\n    tag_263:\n        /* \"solady/src/tokens/ERC20.sol\":9391:9409  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"solady/src/tokens/ERC20.sol\":9385:9389  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":9378:9410  mstore(0x0c, _BALANCE_SLOT_SEED) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":9436:9444  caller() */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":9430:9434  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":9423:9445  mstore(0x00, caller()) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":9497:9501  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":9491:9495  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":9481:9502  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":9540:9555  fromBalanceSlot */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":9534:9556  sload(fromBalanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":9630:9641  fromBalance */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":9622:9628  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":9619:9642  gt(amount, fromBalance) */\n      gt\n        /* \"solady/src/tokens/ERC20.sol\":9616:9762  if gt(amount, fromBalance) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":9674:9684  0xf4d678b8 */\n      0xf4d678b8\n        /* \"solady/src/tokens/ERC20.sol\":9668:9672  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":9661:9685  mstore(0x00, 0xf4d678b8) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":9743:9747  0x04 */\n      0x04\n        /* \"solady/src/tokens/ERC20.sol\":9737:9741  0x1c */\n      0x1c\n        /* \"solady/src/tokens/ERC20.sol\":9730:9748  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/tokens/ERC20.sol\":9616:9762  if gt(amount, fromBalance) {... */\n    tag_264:\n        /* \"solady/src/tokens/ERC20.sol\":9871:9877  amount */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":9858:9869  fromBalance */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":9854:9878  sub(fromBalance, amount) */\n      sub\n        /* \"solady/src/tokens/ERC20.sol\":9837:9852  fromBalanceSlot */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":9830:9879  sstore(fromBalanceSlot, sub(fromBalance, amount)) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":9954:9956  to */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":9948:9952  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":9941:9957  mstore(0x00, to) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":10007:10011  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":10001:10005  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":9991:10012  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":10257:10263  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":10241:10254  toBalanceSlot */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":10235:10255  sload(toBalanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":10231:10264  add(sload(toBalanceSlot), amount) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":10216:10229  toBalanceSlot */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":10209:10265  sstore(toBalanceSlot, add(sload(toBalanceSlot), amount)) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":10333:10339  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":10327:10331  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":10320:10340  mstore(0x20, amount) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":10421:10425  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":10415:10426  mload(0x0c) */\n      mload\n        /* \"solady/src/tokens/ERC20.sol\":10411:10413  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":10407:10427  shr(96, mload(0x0c)) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":10397:10405  caller() */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":10370:10395  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"solady/src/tokens/ERC20.sol\":10364:10368  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":10358:10362  0x20 */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":10353:10428  log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, caller(), shr(96, mload(0x0c))) */\n      log3\n        /* \"solady/src/tokens/ERC20.sol\":9304:10438  {... */\n      pop\n      pop\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":10447:10490  _afterTokenTransfer(msg.sender, to, amount) */\n      tag_265\n        /* \"solady/src/tokens/ERC20.sol\":10467:10477  msg.sender */\n      caller\n        /* \"solady/src/tokens/ERC20.sol\":10479:10481  to */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":10483:10489  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":10447:10466  _afterTokenTransfer */\n      tag_247\n        /* \"solady/src/tokens/ERC20.sol\":10447:10490  _afterTokenTransfer(msg.sender, to, amount) */\n      jump\t// in\n    tag_265:\n        /* \"solady/src/tokens/ERC20.sol\":10507:10511  true */\n      0x01\n        /* \"solady/src/tokens/ERC20.sol\":10500:10511  return true */\n      swap1\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":9112:10518  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":23377:24336  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_219:\n        /* \"solady/src/tokens/ERC20.sol\":23618:23625  spender */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":23612:23616  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":23605:23626  mstore(0x20, spender) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":23652:23672  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"solady/src/tokens/ERC20.sol\":23646:23650  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":23639:23673  mstore(0x0c, _ALLOWANCE_SLOT_SEED) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":23699:23704  owner */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":23693:23697  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":23686:23705  mstore(0x00, owner) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":23755:23759  0x34 */\n      0x34\n        /* \"solady/src/tokens/ERC20.sol\":23749:23753  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":23739:23760  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":23797:23810  allowanceSlot */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":23791:23811  sload(allowanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":23919:23920  0 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":23915:23921  not(0) */\n      not\n        /* \"solady/src/tokens/ERC20.sol\":23903:23913  allowance_ */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":23900:23922  eq(allowance_, not(0)) */\n      eq\n        /* \"solady/src/tokens/ERC20.sol\":23890:24320  if iszero(eq(allowance_, not(0))) {... */\n      tag_267\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":24037:24047  allowance_ */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":24029:24035  amount */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":24026:24048  gt(amount, allowance_) */\n      gt\n        /* \"solady/src/tokens/ERC20.sol\":24023:24182  if gt(amount, allowance_) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":24084:24094  0x13be252b */\n      0x13be252b\n        /* \"solady/src/tokens/ERC20.sol\":24078:24082  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":24071:24095  mstore(0x00, 0x13be252b) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":24159:24163  0x04 */\n      0x04\n        /* \"solady/src/tokens/ERC20.sol\":24153:24157  0x1c */\n      0x1c\n        /* \"solady/src/tokens/ERC20.sol\":24146:24164  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/tokens/ERC20.sol\":24023:24182  if gt(amount, allowance_) {... */\n    tag_268:\n        /* \"solady/src/tokens/ERC20.sol\":24298:24304  amount */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":24286:24296  allowance_ */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":24282:24305  sub(allowance_, amount) */\n      sub\n        /* \"solady/src/tokens/ERC20.sol\":24267:24280  allowanceSlot */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":24260:24306  sstore(allowanceSlot, sub(allowance_, amount)) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":23890:24320  if iszero(eq(allowance_, not(0))) {... */\n    tag_267:\n        /* \"solady/src/tokens/ERC20.sol\":23529:24330  {... */\n      pop\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":23377:24336  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":21607:23003  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_239:\n        /* \"solady/src/tokens/ERC20.sol\":21695:21733  _beforeTokenTransfer(from, to, amount) */\n      tag_270\n        /* \"solady/src/tokens/ERC20.sol\":21716:21720  from */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":21722:21724  to */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":21726:21732  amount */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":21695:21715  _beforeTokenTransfer */\n      tag_244\n        /* \"solady/src/tokens/ERC20.sol\":21695:21733  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_270:\n        /* \"solady/src/tokens/ERC20.sol\":21830:21834  from */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":21826:21828  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":21822:21835  shl(96, from) */\n      shl\n        /* \"solady/src/tokens/ERC20.sol\":21931:21949  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"solady/src/tokens/ERC20.sol\":21924:21929  from_ */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":21921:21950  or(from_, _BALANCE_SLOT_SEED) */\n      or\n        /* \"solady/src/tokens/ERC20.sol\":21915:21919  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":21908:21951  mstore(0x0c, or(from_, _BALANCE_SLOT_SEED)) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":22003:22007  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":21997:22001  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":21987:22008  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":22046:22061  fromBalanceSlot */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":22040:22062  sload(fromBalanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":22136:22147  fromBalance */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":22128:22134  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":22125:22148  gt(amount, fromBalance) */\n      gt\n        /* \"solady/src/tokens/ERC20.sol\":22122:22268  if gt(amount, fromBalance) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"solady/src/tokens/ERC20.sol\":22180:22190  0xf4d678b8 */\n      0xf4d678b8\n        /* \"solady/src/tokens/ERC20.sol\":22174:22178  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":22167:22191  mstore(0x00, 0xf4d678b8) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":22249:22253  0x04 */\n      0x04\n        /* \"solady/src/tokens/ERC20.sol\":22243:22247  0x1c */\n      0x1c\n        /* \"solady/src/tokens/ERC20.sol\":22236:22254  revert(0x1c, 0x04) */\n      revert\n        /* \"solady/src/tokens/ERC20.sol\":22122:22268  if gt(amount, fromBalance) {... */\n    tag_271:\n        /* \"solady/src/tokens/ERC20.sol\":22377:22383  amount */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":22364:22375  fromBalance */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":22360:22384  sub(fromBalance, amount) */\n      sub\n        /* \"solady/src/tokens/ERC20.sol\":22343:22358  fromBalanceSlot */\n      dup3\n        /* \"solady/src/tokens/ERC20.sol\":22336:22385  sstore(fromBalanceSlot, sub(fromBalance, amount)) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":22460:22462  to */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":22454:22458  0x00 */\n      0x00\n        /* \"solady/src/tokens/ERC20.sol\":22447:22463  mstore(0x00, to) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":22513:22517  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":22507:22511  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":22497:22518  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"solady/src/tokens/ERC20.sol\":22763:22769  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":22747:22760  toBalanceSlot */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":22741:22761  sload(toBalanceSlot) */\n      sload\n        /* \"solady/src/tokens/ERC20.sol\":22737:22770  add(sload(toBalanceSlot), amount) */\n      add\n        /* \"solady/src/tokens/ERC20.sol\":22722:22735  toBalanceSlot */\n      dup2\n        /* \"solady/src/tokens/ERC20.sol\":22715:22771  sstore(toBalanceSlot, add(sload(toBalanceSlot), amount)) */\n      sstore\n        /* \"solady/src/tokens/ERC20.sol\":22839:22845  amount */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":22833:22837  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":22826:22846  mstore(0x20, amount) */\n      mstore\n        /* \"solady/src/tokens/ERC20.sol\":22933:22937  0x0c */\n      0x0c\n        /* \"solady/src/tokens/ERC20.sol\":22927:22938  mload(0x0c) */\n      mload\n        /* \"solady/src/tokens/ERC20.sol\":22923:22925  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":22919:22939  shr(96, mload(0x0c)) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":22911:22916  from_ */\n      dup5\n        /* \"solady/src/tokens/ERC20.sol\":22907:22909  96 */\n      0x60\n        /* \"solady/src/tokens/ERC20.sol\":22903:22917  shr(96, from_) */\n      shr\n        /* \"solady/src/tokens/ERC20.sol\":22876:22901  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"solady/src/tokens/ERC20.sol\":22870:22874  0x20 */\n      0x20\n        /* \"solady/src/tokens/ERC20.sol\":22864:22868  0x20 */\n      dup1\n        /* \"solady/src/tokens/ERC20.sol\":22859:22940  log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c))) */\n      log3\n        /* \"solady/src/tokens/ERC20.sol\":21795:22950  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"solady/src/tokens/ERC20.sol\":22959:22996  _afterTokenTransfer(from, to, amount) */\n      tag_272\n        /* \"solady/src/tokens/ERC20.sol\":22979:22983  from */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":22985:22987  to */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":22989:22995  amount */\n      dup4\n        /* \"solady/src/tokens/ERC20.sol\":22959:22978  _afterTokenTransfer */\n      tag_247\n        /* \"solady/src/tokens/ERC20.sol\":22959:22996  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_272:\n        /* \"solady/src/tokens/ERC20.sol\":21607:23003  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":25445:25536  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_244:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solady/src/tokens/ERC20.sol\":25648:25738  function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_247:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_275:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_276:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_277:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_312:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_312)\n    tag_314:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_278:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_279:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_317\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_275\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":818:889   */\n      tag_318\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_276\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_319\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_277\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":988:1017   */\n      tag_320\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_278\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_37:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_322\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_279\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_281:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_283:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_284:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_328\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_283\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_285:\n        /* \"#utility.yul\":1983:2007   */\n      tag_330\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_284\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_331:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_286:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_333\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_285\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_287:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_288:\n        /* \"#utility.yul\":2339:2363   */\n      tag_336\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_287\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_337:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_289:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_339\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_288\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_41:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_342\n      tag_281\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2632:2751   */\n    tag_341:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_343\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_286\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_344\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_289\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_290:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_291:\n        /* \"#utility.yul\":3196:3217   */\n      tag_347\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_290\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_44:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_349\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_291\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_292:\n        /* \"#utility.yul\":3533:3557   */\n      tag_351\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_287\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_51:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_353\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_292\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_55:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_356\n      tag_281\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3908:4027   */\n    tag_355:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_357\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_286\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_358\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_286\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_359\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_289\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_293:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_294:\n        /* \"#utility.yul\":4598:4620   */\n      tag_362\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_293\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_64:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_364\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_294\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4930   */\n    tag_295:\n        /* \"#utility.yul\":4890:4897   */\n      0x00\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4908:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5054   */\n    tag_296:\n        /* \"#utility.yul\":5023:5047   */\n      tag_367\n        /* \"#utility.yul\":5041:5046   */\n      dup2\n        /* \"#utility.yul\":5023:5047   */\n      tag_295\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5011:5048   */\n      mstore\n        /* \"#utility.yul\":4936:5054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5282   */\n    tag_69:\n        /* \"#utility.yul\":5153:5157   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5168:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5275   */\n      tag_369\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5261:5270   */\n      dup4\n        /* \"#utility.yul\":5257:5274   */\n      add\n        /* \"#utility.yul\":5248:5254   */\n      dup5\n        /* \"#utility.yul\":5204:5275   */\n      tag_296\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5060:5282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5617   */\n    tag_83:\n        /* \"#utility.yul\":5347:5353   */\n      0x00\n        /* \"#utility.yul\":5396:5398   */\n      0x20\n        /* \"#utility.yul\":5384:5393   */\n      dup3\n        /* \"#utility.yul\":5375:5382   */\n      dup5\n        /* \"#utility.yul\":5371:5394   */\n      sub\n        /* \"#utility.yul\":5367:5399   */\n      slt\n        /* \"#utility.yul\":5364:5483   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":5402:5481   */\n      tag_372\n      tag_281\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5364:5483   */\n    tag_371:\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5547:5600   */\n      tag_373\n        /* \"#utility.yul\":5592:5599   */\n      dup5\n        /* \"#utility.yul\":5583:5589   */\n      dup3\n        /* \"#utility.yul\":5572:5581   */\n      dup6\n        /* \"#utility.yul\":5568:5590   */\n      add\n        /* \"#utility.yul\":5547:5600   */\n      tag_286\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":5537:5600   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5610   */\n      pop\n        /* \"#utility.yul\":5288:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5741   */\n    tag_297:\n        /* \"#utility.yul\":5710:5734   */\n      tag_375\n        /* \"#utility.yul\":5728:5733   */\n      dup2\n        /* \"#utility.yul\":5710:5734   */\n      tag_284\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5705:5708   */\n      dup3\n        /* \"#utility.yul\":5698:5735   */\n      mstore\n        /* \"#utility.yul\":5623:5741   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5747:5969   */\n    tag_101:\n        /* \"#utility.yul\":5840:5844   */\n      0x00\n        /* \"#utility.yul\":5878:5880   */\n      0x20\n        /* \"#utility.yul\":5867:5876   */\n      dup3\n        /* \"#utility.yul\":5863:5881   */\n      add\n        /* \"#utility.yul\":5855:5881   */\n      swap1\n      pop\n        /* \"#utility.yul\":5891:5962   */\n      tag_377\n        /* \"#utility.yul\":5959:5960   */\n      0x00\n        /* \"#utility.yul\":5948:5957   */\n      dup4\n        /* \"#utility.yul\":5944:5961   */\n      add\n        /* \"#utility.yul\":5935:5941   */\n      dup5\n        /* \"#utility.yul\":5891:5962   */\n      tag_297\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5747:5969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5975:6093   */\n    tag_298:\n        /* \"#utility.yul\":6046:6068   */\n      tag_379\n        /* \"#utility.yul\":6062:6067   */\n      dup2\n        /* \"#utility.yul\":6046:6068   */\n      tag_293\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6039:6044   */\n      dup2\n        /* \"#utility.yul\":6036:6069   */\n      eq\n        /* \"#utility.yul\":6026:6087   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6083:6084   */\n      0x00\n        /* \"#utility.yul\":6080:6081   */\n      dup1\n        /* \"#utility.yul\":6073:6085   */\n      revert\n        /* \"#utility.yul\":6026:6087   */\n    tag_380:\n        /* \"#utility.yul\":5975:6093   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6099:6234   */\n    tag_299:\n        /* \"#utility.yul\":6143:6148   */\n      0x00\n        /* \"#utility.yul\":6181:6187   */\n      dup2\n        /* \"#utility.yul\":6168:6188   */\n      calldataload\n        /* \"#utility.yul\":6159:6188   */\n      swap1\n      pop\n        /* \"#utility.yul\":6197:6228   */\n      tag_382\n        /* \"#utility.yul\":6222:6227   */\n      dup2\n        /* \"#utility.yul\":6197:6228   */\n      tag_298\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6099:6234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6240:6362   */\n    tag_300:\n        /* \"#utility.yul\":6313:6337   */\n      tag_384\n        /* \"#utility.yul\":6331:6336   */\n      dup2\n        /* \"#utility.yul\":6313:6337   */\n      tag_295\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":6306:6311   */\n      dup2\n        /* \"#utility.yul\":6303:6338   */\n      eq\n        /* \"#utility.yul\":6293:6356   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":6352:6353   */\n      0x00\n        /* \"#utility.yul\":6349:6350   */\n      dup1\n        /* \"#utility.yul\":6342:6354   */\n      revert\n        /* \"#utility.yul\":6293:6356   */\n    tag_385:\n        /* \"#utility.yul\":6240:6362   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6368:6507   */\n    tag_301:\n        /* \"#utility.yul\":6414:6419   */\n      0x00\n        /* \"#utility.yul\":6452:6458   */\n      dup2\n        /* \"#utility.yul\":6439:6459   */\n      calldataload\n        /* \"#utility.yul\":6430:6459   */\n      swap1\n      pop\n        /* \"#utility.yul\":6468:6501   */\n      tag_387\n        /* \"#utility.yul\":6495:6500   */\n      dup2\n        /* \"#utility.yul\":6468:6501   */\n      tag_300\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":6368:6507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6513:7712   */\n    tag_123:\n        /* \"#utility.yul\":6624:6630   */\n      0x00\n        /* \"#utility.yul\":6632:6638   */\n      dup1\n        /* \"#utility.yul\":6640:6646   */\n      0x00\n        /* \"#utility.yul\":6648:6654   */\n      dup1\n        /* \"#utility.yul\":6656:6662   */\n      0x00\n        /* \"#utility.yul\":6664:6670   */\n      dup1\n        /* \"#utility.yul\":6672:6678   */\n      0x00\n        /* \"#utility.yul\":6721:6724   */\n      0xe0\n        /* \"#utility.yul\":6709:6718   */\n      dup9\n        /* \"#utility.yul\":6700:6707   */\n      dup11\n        /* \"#utility.yul\":6696:6719   */\n      sub\n        /* \"#utility.yul\":6692:6725   */\n      slt\n        /* \"#utility.yul\":6689:6809   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":6728:6807   */\n      tag_390\n      tag_281\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6689:6809   */\n    tag_389:\n        /* \"#utility.yul\":6848:6849   */\n      0x00\n        /* \"#utility.yul\":6873:6926   */\n      tag_391\n        /* \"#utility.yul\":6918:6925   */\n      dup11\n        /* \"#utility.yul\":6909:6915   */\n      dup3\n        /* \"#utility.yul\":6898:6907   */\n      dup12\n        /* \"#utility.yul\":6894:6916   */\n      add\n        /* \"#utility.yul\":6873:6926   */\n      tag_286\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6863:6926   */\n      swap8\n      pop\n        /* \"#utility.yul\":6819:6936   */\n      pop\n        /* \"#utility.yul\":6975:6977   */\n      0x20\n        /* \"#utility.yul\":7001:7054   */\n      tag_392\n        /* \"#utility.yul\":7046:7053   */\n      dup11\n        /* \"#utility.yul\":7037:7043   */\n      dup3\n        /* \"#utility.yul\":7026:7035   */\n      dup12\n        /* \"#utility.yul\":7022:7044   */\n      add\n        /* \"#utility.yul\":7001:7054   */\n      tag_286\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6991:7054   */\n      swap7\n      pop\n        /* \"#utility.yul\":6946:7064   */\n      pop\n        /* \"#utility.yul\":7103:7105   */\n      0x40\n        /* \"#utility.yul\":7129:7182   */\n      tag_393\n        /* \"#utility.yul\":7174:7181   */\n      dup11\n        /* \"#utility.yul\":7165:7171   */\n      dup3\n        /* \"#utility.yul\":7154:7163   */\n      dup12\n        /* \"#utility.yul\":7150:7172   */\n      add\n        /* \"#utility.yul\":7129:7182   */\n      tag_289\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7119:7182   */\n      swap6\n      pop\n        /* \"#utility.yul\":7074:7192   */\n      pop\n        /* \"#utility.yul\":7231:7233   */\n      0x60\n        /* \"#utility.yul\":7257:7310   */\n      tag_394\n        /* \"#utility.yul\":7302:7309   */\n      dup11\n        /* \"#utility.yul\":7293:7299   */\n      dup3\n        /* \"#utility.yul\":7282:7291   */\n      dup12\n        /* \"#utility.yul\":7278:7300   */\n      add\n        /* \"#utility.yul\":7257:7310   */\n      tag_289\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7247:7310   */\n      swap5\n      pop\n        /* \"#utility.yul\":7202:7320   */\n      pop\n        /* \"#utility.yul\":7359:7362   */\n      0x80\n        /* \"#utility.yul\":7386:7437   */\n      tag_395\n        /* \"#utility.yul\":7429:7436   */\n      dup11\n        /* \"#utility.yul\":7420:7426   */\n      dup3\n        /* \"#utility.yul\":7409:7418   */\n      dup12\n        /* \"#utility.yul\":7405:7427   */\n      add\n        /* \"#utility.yul\":7386:7437   */\n      tag_299\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7376:7437   */\n      swap4\n      pop\n        /* \"#utility.yul\":7330:7447   */\n      pop\n        /* \"#utility.yul\":7486:7489   */\n      0xa0\n        /* \"#utility.yul\":7513:7566   */\n      tag_396\n        /* \"#utility.yul\":7558:7565   */\n      dup11\n        /* \"#utility.yul\":7549:7555   */\n      dup3\n        /* \"#utility.yul\":7538:7547   */\n      dup12\n        /* \"#utility.yul\":7534:7556   */\n      add\n        /* \"#utility.yul\":7513:7566   */\n      tag_301\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7503:7566   */\n      swap3\n      pop\n        /* \"#utility.yul\":7457:7576   */\n      pop\n        /* \"#utility.yul\":7615:7618   */\n      0xc0\n        /* \"#utility.yul\":7642:7695   */\n      tag_397\n        /* \"#utility.yul\":7687:7694   */\n      dup11\n        /* \"#utility.yul\":7678:7684   */\n      dup3\n        /* \"#utility.yul\":7667:7676   */\n      dup12\n        /* \"#utility.yul\":7663:7685   */\n      add\n        /* \"#utility.yul\":7642:7695   */\n      tag_301\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7632:7695   */\n      swap2\n      pop\n        /* \"#utility.yul\":7586:7705   */\n      pop\n        /* \"#utility.yul\":6513:7712   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7718:8192   */\n    tag_128:\n        /* \"#utility.yul\":7786:7792   */\n      0x00\n        /* \"#utility.yul\":7794:7800   */\n      dup1\n        /* \"#utility.yul\":7843:7845   */\n      0x40\n        /* \"#utility.yul\":7831:7840   */\n      dup4\n        /* \"#utility.yul\":7822:7829   */\n      dup6\n        /* \"#utility.yul\":7818:7841   */\n      sub\n        /* \"#utility.yul\":7814:7846   */\n      slt\n        /* \"#utility.yul\":7811:7930   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":7849:7928   */\n      tag_400\n      tag_281\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7811:7930   */\n    tag_399:\n        /* \"#utility.yul\":7969:7970   */\n      0x00\n        /* \"#utility.yul\":7994:8047   */\n      tag_401\n        /* \"#utility.yul\":8039:8046   */\n      dup6\n        /* \"#utility.yul\":8030:8036   */\n      dup3\n        /* \"#utility.yul\":8019:8028   */\n      dup7\n        /* \"#utility.yul\":8015:8037   */\n      add\n        /* \"#utility.yul\":7994:8047   */\n      tag_286\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7984:8047   */\n      swap3\n      pop\n        /* \"#utility.yul\":7940:8057   */\n      pop\n        /* \"#utility.yul\":8096:8098   */\n      0x20\n        /* \"#utility.yul\":8122:8175   */\n      tag_402\n        /* \"#utility.yul\":8167:8174   */\n      dup6\n        /* \"#utility.yul\":8158:8164   */\n      dup3\n        /* \"#utility.yul\":8147:8156   */\n      dup7\n        /* \"#utility.yul\":8143:8165   */\n      add\n        /* \"#utility.yul\":8122:8175   */\n      tag_286\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8112:8175   */\n      swap2\n      pop\n        /* \"#utility.yul\":8067:8185   */\n      pop\n        /* \"#utility.yul\":7718:8192   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8198:8378   */\n    tag_302:\n        /* \"#utility.yul\":8246:8323   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8243:8244   */\n      0x00\n        /* \"#utility.yul\":8236:8324   */\n      mstore\n        /* \"#utility.yul\":8343:8347   */\n      0x22\n        /* \"#utility.yul\":8340:8341   */\n      0x04\n        /* \"#utility.yul\":8333:8348   */\n      mstore\n        /* \"#utility.yul\":8367:8371   */\n      0x24\n        /* \"#utility.yul\":8364:8365   */\n      0x00\n        /* \"#utility.yul\":8357:8372   */\n      revert\n        /* \"#utility.yul\":8384:8704   */\n    tag_148:\n        /* \"#utility.yul\":8428:8434   */\n      0x00\n        /* \"#utility.yul\":8465:8466   */\n      0x02\n        /* \"#utility.yul\":8459:8463   */\n      dup3\n        /* \"#utility.yul\":8455:8467   */\n      div\n        /* \"#utility.yul\":8445:8467   */\n      swap1\n      pop\n        /* \"#utility.yul\":8512:8513   */\n      0x01\n        /* \"#utility.yul\":8506:8510   */\n      dup3\n        /* \"#utility.yul\":8502:8514   */\n      and\n        /* \"#utility.yul\":8533:8551   */\n      dup1\n        /* \"#utility.yul\":8523:8604   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":8589:8593   */\n      0x7f\n        /* \"#utility.yul\":8581:8587   */\n      dup3\n        /* \"#utility.yul\":8577:8594   */\n      and\n        /* \"#utility.yul\":8567:8594   */\n      swap2\n      pop\n        /* \"#utility.yul\":8523:8604   */\n    tag_405:\n        /* \"#utility.yul\":8651:8653   */\n      0x20\n        /* \"#utility.yul\":8643:8649   */\n      dup3\n        /* \"#utility.yul\":8640:8654   */\n      lt\n        /* \"#utility.yul\":8620:8638   */\n      dup2\n        /* \"#utility.yul\":8617:8655   */\n      sub\n        /* \"#utility.yul\":8614:8698   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":8670:8688   */\n      tag_407\n      tag_302\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8614:8698   */\n    tag_406:\n        /* \"#utility.yul\":8435:8704   */\n      pop\n        /* \"#utility.yul\":8384:8704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8710:8867   */\n    tag_303:\n        /* \"#utility.yul\":8850:8859   */\n      0x494e56414c494400000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8846:8847   */\n      0x00\n        /* \"#utility.yul\":8838:8844   */\n      dup3\n        /* \"#utility.yul\":8834:8848   */\n      add\n        /* \"#utility.yul\":8827:8860   */\n      mstore\n        /* \"#utility.yul\":8710:8867   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8873:9238   */\n    tag_304:\n        /* \"#utility.yul\":9015:9018   */\n      0x00\n        /* \"#utility.yul\":9036:9102   */\n      tag_410\n        /* \"#utility.yul\":9100:9101   */\n      0x07\n        /* \"#utility.yul\":9095:9098   */\n      dup4\n        /* \"#utility.yul\":9036:9102   */\n      tag_276\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":9029:9102   */\n      swap2\n      pop\n        /* \"#utility.yul\":9111:9204   */\n      tag_411\n        /* \"#utility.yul\":9200:9203   */\n      dup3\n        /* \"#utility.yul\":9111:9204   */\n      tag_303\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":9229:9231   */\n      0x20\n        /* \"#utility.yul\":9224:9227   */\n      dup3\n        /* \"#utility.yul\":9220:9232   */\n      add\n        /* \"#utility.yul\":9213:9232   */\n      swap1\n      pop\n        /* \"#utility.yul\":8873:9238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9244:9663   */\n    tag_157:\n        /* \"#utility.yul\":9410:9414   */\n      0x00\n        /* \"#utility.yul\":9448:9450   */\n      0x20\n        /* \"#utility.yul\":9437:9446   */\n      dup3\n        /* \"#utility.yul\":9433:9451   */\n      add\n        /* \"#utility.yul\":9425:9451   */\n      swap1\n      pop\n        /* \"#utility.yul\":9497:9506   */\n      dup2\n        /* \"#utility.yul\":9491:9495   */\n      dup2\n        /* \"#utility.yul\":9487:9507   */\n      sub\n        /* \"#utility.yul\":9483:9484   */\n      0x00\n        /* \"#utility.yul\":9472:9481   */\n      dup4\n        /* \"#utility.yul\":9468:9485   */\n      add\n        /* \"#utility.yul\":9461:9508   */\n      mstore\n        /* \"#utility.yul\":9525:9656   */\n      tag_413\n        /* \"#utility.yul\":9651:9655   */\n      dup2\n        /* \"#utility.yul\":9525:9656   */\n      tag_304\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9517:9656   */\n      swap1\n      pop\n        /* \"#utility.yul\":9244:9663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9669:9849   */\n    tag_305:\n        /* \"#utility.yul\":9717:9794   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9714:9715   */\n      0x00\n        /* \"#utility.yul\":9707:9795   */\n      mstore\n        /* \"#utility.yul\":9814:9818   */\n      0x11\n        /* \"#utility.yul\":9811:9812   */\n      0x04\n        /* \"#utility.yul\":9804:9819   */\n      mstore\n        /* \"#utility.yul\":9838:9842   */\n      0x24\n        /* \"#utility.yul\":9835:9836   */\n      0x00\n        /* \"#utility.yul\":9828:9843   */\n      revert\n        /* \"#utility.yul\":9855:10046   */\n    tag_185:\n        /* \"#utility.yul\":9895:9898   */\n      0x00\n        /* \"#utility.yul\":9914:9934   */\n      tag_416\n        /* \"#utility.yul\":9932:9933   */\n      dup3\n        /* \"#utility.yul\":9914:9934   */\n      tag_287\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9909:9934   */\n      swap2\n      pop\n        /* \"#utility.yul\":9948:9968   */\n      tag_417\n        /* \"#utility.yul\":9966:9967   */\n      dup4\n        /* \"#utility.yul\":9948:9968   */\n      tag_287\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9943:9968   */\n      swap3\n      pop\n        /* \"#utility.yul\":9991:9992   */\n      dup3\n        /* \"#utility.yul\":9988:9989   */\n      dup3\n        /* \"#utility.yul\":9984:9993   */\n      add\n        /* \"#utility.yul\":9977:9993   */\n      swap1\n      pop\n        /* \"#utility.yul\":10012:10015   */\n      dup1\n        /* \"#utility.yul\":10009:10010   */\n      dup3\n        /* \"#utility.yul\":10006:10016   */\n      gt\n        /* \"#utility.yul\":10003:10039   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":10019:10037   */\n      tag_419\n      tag_305\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10003:10039   */\n    tag_418:\n        /* \"#utility.yul\":9855:10046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10052:10213   */\n    tag_306:\n        /* \"#utility.yul\":10192:10205   */\n      0x45584345454453204d4158000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10188:10189   */\n      0x00\n        /* \"#utility.yul\":10180:10186   */\n      dup3\n        /* \"#utility.yul\":10176:10190   */\n      add\n        /* \"#utility.yul\":10169:10206   */\n      mstore\n        /* \"#utility.yul\":10052:10213   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10219:10585   */\n    tag_307:\n        /* \"#utility.yul\":10361:10364   */\n      0x00\n        /* \"#utility.yul\":10382:10449   */\n      tag_422\n        /* \"#utility.yul\":10446:10448   */\n      0x0b\n        /* \"#utility.yul\":10441:10444   */\n      dup4\n        /* \"#utility.yul\":10382:10449   */\n      tag_276\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10375:10449   */\n      swap2\n      pop\n        /* \"#utility.yul\":10458:10551   */\n      tag_423\n        /* \"#utility.yul\":10547:10550   */\n      dup3\n        /* \"#utility.yul\":10458:10551   */\n      tag_306\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10576:10578   */\n      0x20\n        /* \"#utility.yul\":10571:10574   */\n      dup3\n        /* \"#utility.yul\":10567:10579   */\n      add\n        /* \"#utility.yul\":10560:10579   */\n      swap1\n      pop\n        /* \"#utility.yul\":10219:10585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10591:11010   */\n    tag_188:\n        /* \"#utility.yul\":10757:10761   */\n      0x00\n        /* \"#utility.yul\":10795:10797   */\n      0x20\n        /* \"#utility.yul\":10784:10793   */\n      dup3\n        /* \"#utility.yul\":10780:10798   */\n      add\n        /* \"#utility.yul\":10772:10798   */\n      swap1\n      pop\n        /* \"#utility.yul\":10844:10853   */\n      dup2\n        /* \"#utility.yul\":10838:10842   */\n      dup2\n        /* \"#utility.yul\":10834:10854   */\n      sub\n        /* \"#utility.yul\":10830:10831   */\n      0x00\n        /* \"#utility.yul\":10819:10828   */\n      dup4\n        /* \"#utility.yul\":10815:10832   */\n      add\n        /* \"#utility.yul\":10808:10855   */\n      mstore\n        /* \"#utility.yul\":10872:11003   */\n      tag_425\n        /* \"#utility.yul\":10998:11002   */\n      dup2\n        /* \"#utility.yul\":10872:11003   */\n      tag_307\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":10864:11003   */\n      swap1\n      pop\n        /* \"#utility.yul\":10591:11010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f2249e1f6fb24f1983649c95c3d44cd729adecbec5dab63cb29c695e3098ac8b64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"array_dataslot_t_string_storage": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:3",
														"type": ""
													}
												],
												"src": "7:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:3"
															},
															"nodeType": "YulIf",
															"src": "623:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:3"
															},
															"nodeType": "YulIf",
															"src": "714:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:3",
														"type": ""
													}
												],
												"src": "484:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:3",
														"type": ""
													}
												],
												"src": "810:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:3"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:3",
														"type": ""
													}
												],
												"src": "957:93:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:3"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:3",
														"type": ""
													}
												],
												"src": "1056:107:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:3",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:3"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:3"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:3"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:3"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:3"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:3"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:3",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:3",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:3",
														"type": ""
													}
												],
												"src": "1169:393:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:3",
														"type": ""
													}
												],
												"src": "1568:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:3",
														"type": ""
													}
												],
												"src": "1651:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:3",
														"type": ""
													}
												],
												"src": "1717:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:3"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:3",
														"type": ""
													}
												],
												"src": "1865:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:3",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:3"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:3"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:3"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:3"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:3",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:3",
														"type": ""
													}
												],
												"src": "1946:269:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:3",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:3"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:3",
														"type": ""
													}
												],
												"src": "2221:73:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:3"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:3"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:3"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:3"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:3",
														"type": ""
													}
												],
												"src": "2300:189:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:3"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:3",
																"statements": []
															},
															"src": "2555:120:3"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:3",
														"type": ""
													}
												],
												"src": "2495:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:3"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:3"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:3"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:3"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:3",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:3"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:3"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:3"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:3"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:3"
															},
															"nodeType": "YulIf",
															"src": "2777:446:3"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:3",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:3",
														"type": ""
													}
												],
												"src": "2687:543:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:3",
														"type": ""
													}
												],
												"src": "3236:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:3",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:3"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:3"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:3"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:3"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:3",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:3",
														"type": ""
													}
												],
												"src": "3359:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:3"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:3"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:3",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:3"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:3"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:3"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:3",
														"type": ""
													}
												],
												"src": "3533:295:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:3"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:3"
															},
															"nodeType": "YulIf",
															"src": "4038:56:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:3"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:3"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:3"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:3"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:3"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:3"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:3",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:3",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:3"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:3"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:3"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:3"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:3"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:3"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:3"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:3",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:3"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:3"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:3"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:3",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:3",
																					"statements": []
																				},
																				"src": "4524:208:3"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:3",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:3"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:3",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:3"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:3"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:3",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:3"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:3"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:3"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:3",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:3"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:3"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:3"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:3"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:3",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:3"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:3"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:3",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:3",
														"type": ""
													}
												],
												"src": "3833:1395:3"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083151502179055506040518060400160405280600681526020017f506f6e64307800000000000000000000000000000000000000000000000000008152506001908162000064919062000368565b506040518060400160405280600481526020017f504e44580000000000000000000000000000000000000000000000000000000081525060029081620000ab919062000368565b506012600360006101000a81548160ff021916908360ff1602179055506d14bddab3e51a57cff87a50000000600455348015620000e757600080fd5b506200044f565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200017057607f821691505b60208210810362000186576200018562000128565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001b1565b620001fc8683620001b1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000249620002436200023d8462000214565b6200021e565b62000214565b9050919050565b6000819050919050565b620002658362000228565b6200027d620002748262000250565b848454620001be565b825550505050565b600090565b6200029462000285565b620002a18184846200025a565b505050565b5b81811015620002c957620002bd6000826200028a565b600181019050620002a7565b5050565b601f8211156200031857620002e2816200018c565b620002ed84620001a1565b81016020851015620002fd578190505b620003156200030c85620001a1565b830182620002a6565b50505b505050565b600082821c905092915050565b60006200033d600019846008026200031d565b1980831691505092915050565b60006200035883836200032a565b9150826002028217905092915050565b6200037382620000ee565b67ffffffffffffffff8111156200038f576200038e620000f9565b5b6200039b825462000157565b620003a8828285620002cd565b600060209050601f831160018114620003e05760008415620003cb578287015190505b620003d785826200034a565b86555062000447565b601f198416620003f0866200018c565b60005b828110156200041a57848901518255600182019150602085019450602081019050620003f3565b868310156200043a578489015162000436601f8916826200032a565b8355505b6001600288020188555050505b505050505050565b6117e6806200045f6000396000f3fe6080604052600436106101815760003560e01c8063791879ef116100d1578063d30ed3b31161008a578063f04e283e11610064578063f04e283e14610531578063f2fde38b1461054d578063f83d179114610569578063fee81cf41461059257610181565b8063d30ed3b3146104a2578063d505accf146104cb578063dd62ed3e146104f457610181565b8063791879ef1461036a5780637ecebe00146103955780638da5cb5b146103d257806395d89b41146103fd578063a457c2d714610428578063a9059cbb1461046557610181565b8063313ce5671161013e5780635372b2f6116101185780635372b2f6146102fd57806354d1f13d1461031957806370a0823114610323578063715018a61461036057610181565b8063313ce5671461026a5780633644e5151461029557806339509351146102c057610181565b806306fdde0314610186578063095ea7b3146101b15780630f15f4c0146101ee57806318160ddd146101f857806323b872dd146102235780632569296214610260575b600080fd5b34801561019257600080fd5b5061019b6105cf565b6040516101a8919061126b565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190611326565b610661565b6040516101e59190611381565b60405180910390f35b6101f66106b5565b005b34801561020457600080fd5b5061020d610783565b60405161021a91906113ab565b60405180910390f35b34801561022f57600080fd5b5061024a600480360381019061024591906113c6565b610795565b6040516102579190611381565b60405180910390f35b6102686107bb565b005b34801561027657600080fd5b5061027f61080f565b60405161028c9190611435565b60405180910390f35b3480156102a157600080fd5b506102aa610826565b6040516102b79190611469565b60405180910390f35b3480156102cc57600080fd5b506102e760048036038101906102e29190611326565b6108a7565b6040516102f49190611381565b60405180910390f35b61031760048036038101906103129190611326565b6108c3565b005b610321610a20565b005b34801561032f57600080fd5b5061034a60048036038101906103459190611484565b610a5c565b60405161035791906113ab565b60405180910390f35b610368610a77565b005b34801561037657600080fd5b5061037f610a8b565b60405161038c9190611381565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b79190611484565b610a9c565b6040516103c991906113ab565b60405180910390f35b3480156103de57600080fd5b506103e7610ab7565b6040516103f491906114c0565b60405180910390f35b34801561040957600080fd5b50610412610ac5565b60405161041f919061126b565b60405180910390f35b34801561043457600080fd5b5061044f600480360381019061044a9190611326565b610b57565b60405161045c9190611381565b60405180910390f35b34801561047157600080fd5b5061048c60048036038101906104879190611326565b610b73565b6040516104999190611381565b60405180910390f35b3480156104ae57600080fd5b506104c960048036038101906104c491906113c6565b610b8f565b005b3480156104d757600080fd5b506104f260048036038101906104ed9190611533565b610baf565b005b34801561050057600080fd5b5061051b600480360381019061051691906115d5565b610cde565b60405161052891906113ab565b60405180910390f35b61054b60048036038101906105469190611484565b610cfe565b005b61056760048036038101906105629190611484565b610d3f565b005b34801561057557600080fd5b50610590600480360381019061058b91906113c6565b610d69565b005b34801561059e57600080fd5b506105b960048036038101906105b49190611484565b610d89565b6040516105c691906113ab565b60405180910390f35b6060600180546105de90611644565b80601f016020809104026020016040519081016040528092919081815260200182805461060a90611644565b80156106575780601f1061062c57610100808354040283529160200191610657565b820191906000526020600020905b81548152906001019060200180831161063a57829003601f168201915b5050505050905090565b600082602052637f5e9f20600c5233600052816034600c205581600052602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560206000a36001905092915050565b6000151560008054906101000a900460ff16151514610709576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610700906116c1565b60405180910390fd5b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000806101000a81548160ff02191690831515021790555061078161077033610da4565b6a01a784379d99db42000000610db3565b565b60006805345cdf77eb68f44c54905090565b60006107b26107a385610da4565b6107ac85610da4565b84610e4a565b90509392505050565b60006107c5610f1f565b67ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6000600360009054906101000a900460ff16905090565b6000604051905060006108376105cf565b805190602001209050817f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81528160208201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604082015246606082015230608082015260a081209250505090565b60006108bb6108b584610da4565b83610f2a565b905092915050565b6001151560008054906101000a900460ff16151514610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e906116c1565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099e906116c1565b60405180910390fd5b60006109b1610783565b9050600082826109c19190611710565b9050600454811115610a08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ff90611790565b60405180910390fd5b610a1a610a1485610da4565b84610db3565b50505050565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b60006387a211a2600c52816000526020600c20549050919050565b610a7f610f9d565b610a896000610fba565b565b60008054906101000a900460ff1681565b60006338377508600c52816000526020600c20549050919050565b6000638b78c6d81954905090565b606060028054610ad490611644565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0090611644565b8015610b4d5780601f10610b2257610100808354040283529160200191610b4d565b820191906000526020600020905b815481529060010190602001808311610b3057829003601f168201915b5050505050905090565b6000610b6b610b6584610da4565b83610ff8565b905092915050565b6000610b87610b8184610da4565b8361106b565b905092915050565b610baa610b9b84610da4565b610ba484610da4565b836110fd565b505050565b6000610bb9610826565b905060405185421115610bd457631a15a3cc6000526004601cfd5b8860601b60601c98508760601b60601c97506338377508600c52886000526020600c2080546001810182557f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c983528a60208401528960408401528860608401528060808401528760a08401526119016000528360205260c083206040526042601e206000528660ff1660205285604052846060526020806080600060015afa508a3d5114610c8a5763ddafbaef6000526004601cfd5b89637f5e9f2060a01b17604052886034602c2055898b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925602060608701a38260405260006060525050505050505050505050565b600081602052637f5e9f20600c52826000526034600c2054905092915050565b610d06610f9d565b63389a75e1600c52806000526020600c208054421115610d2e57636f5e88186000526004601cfd5b6000815550610d3c81610fba565b50565b610d47610f9d565b8060601b610d5d57637448fbae6000526004601cfd5b610d6681610fba565b50565b610d84610d7584610da4565b610d7e84610da4565b83611140565b505050565b600063389a75e1600c52816000526020600c20549050919050565b60005a60a01b82179050919050565b610dbf600083836111d1565b6805345cdf77eb68f44c5481810181811015610de35763e5cfe9576000526004601cfd5b806805345cdf77eb68f44c556387a211a2600c52836000526020600c2083815401815583602052600c5160601c60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a3505050610e46600083836111d6565b5050565b6000610e578484846111d1565b8360601b33602052637f5e9f208117600c526034600c2080546000198114610e955780851115610e8f576313be252b6000526004601cfd5b84810382555b6387a211a28317600c526020600c20805480871115610ebc5763f4d678b86000526004601cfd5b8681038255876000526020600c2087815401815587602052600c5160601c8660601c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a3505050505050610f148484846111d6565b600190509392505050565b60006202a300905090565b600082602052637f5e9f20600c52336000526034600c20805483810181811015610f5c5763f90670666000526004601cfd5b80835580600052602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560206000a35050506001905092915050565b638b78c6d819543314610fb8576382b429006000526004601cfd5b565b638b78c6d8198160601b60601c91508181547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38181555050565b600082602052637f5e9f20600c52336000526034600c2080548381101561102757638301ab386000526004601cfd5b83810380835580600052602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560206000a35050506001905092915050565b60006110783384846111d1565b6387a211a2600c52336000526020600c208054808411156110a15763f4d678b86000526004601cfd5b8381038255846000526020600c2084815401815584602052600c5160601c337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a35050506110f33384846111d6565b6001905092915050565b81602052637f5e9f20600c52826000526034600c20805460001981146111395780831115611133576313be252b6000526004601cfd5b82810382555b5050505050565b61114b8383836111d1565b8260601b6387a211a28117600c526020600c208054808411156111765763f4d678b86000526004601cfd5b8381038255846000526020600c2084815401815584602052600c5160601c8460601c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a3505050506111cc8383836111d6565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112155780820151818401526020810190506111fa565b60008484015250505050565b6000601f19601f8301169050919050565b600061123d826111db565b61124781856111e6565b93506112578185602086016111f7565b61126081611221565b840191505092915050565b600060208201905081810360008301526112858184611232565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112bd82611292565b9050919050565b6112cd816112b2565b81146112d857600080fd5b50565b6000813590506112ea816112c4565b92915050565b6000819050919050565b611303816112f0565b811461130e57600080fd5b50565b600081359050611320816112fa565b92915050565b6000806040838503121561133d5761133c61128d565b5b600061134b858286016112db565b925050602061135c85828601611311565b9150509250929050565b60008115159050919050565b61137b81611366565b82525050565b60006020820190506113966000830184611372565b92915050565b6113a5816112f0565b82525050565b60006020820190506113c0600083018461139c565b92915050565b6000806000606084860312156113df576113de61128d565b5b60006113ed868287016112db565b93505060206113fe868287016112db565b925050604061140f86828701611311565b9150509250925092565b600060ff82169050919050565b61142f81611419565b82525050565b600060208201905061144a6000830184611426565b92915050565b6000819050919050565b61146381611450565b82525050565b600060208201905061147e600083018461145a565b92915050565b60006020828403121561149a5761149961128d565b5b60006114a8848285016112db565b91505092915050565b6114ba816112b2565b82525050565b60006020820190506114d560008301846114b1565b92915050565b6114e481611419565b81146114ef57600080fd5b50565b600081359050611501816114db565b92915050565b61151081611450565b811461151b57600080fd5b50565b60008135905061152d81611507565b92915050565b600080600080600080600060e0888a0312156115525761155161128d565b5b60006115608a828b016112db565b97505060206115718a828b016112db565b96505060406115828a828b01611311565b95505060606115938a828b01611311565b94505060806115a48a828b016114f2565b93505060a06115b58a828b0161151e565b92505060c06115c68a828b0161151e565b91505092959891949750929550565b600080604083850312156115ec576115eb61128d565b5b60006115fa858286016112db565b925050602061160b858286016112db565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061165c57607f821691505b60208210810361166f5761166e611615565b5b50919050565b7f494e56414c494400000000000000000000000000000000000000000000000000600082015250565b60006116ab6007836111e6565b91506116b682611675565b602082019050919050565b600060208201905081810360008301526116da8161169e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061171b826112f0565b9150611726836112f0565b925082820190508082111561173e5761173d6116e1565b5b92915050565b7f45584345454453204d4158000000000000000000000000000000000000000000600082015250565b600061177a600b836111e6565b915061178582611744565b602082019050919050565b600060208201905081810360008301526117a98161176d565b905091905056fea2646970667358221220f2249e1f6fb24f1983649c95c3d44cd729adecbec5dab63cb29c695e3098ac8b64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6E6430780000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH3 0x64 SWAP2 SWAP1 PUSH3 0x368 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504E445800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP2 PUSH3 0xAB SWAP2 SWAP1 PUSH3 0x368 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH14 0x14BDDAB3E51A57CFF87A50000000 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x44F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x170 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x186 JUMPI PUSH3 0x185 PUSH3 0x128 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1F0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1B1 JUMP JUMPDEST PUSH3 0x1FC DUP7 DUP4 PUSH3 0x1B1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x249 PUSH3 0x243 PUSH3 0x23D DUP5 PUSH3 0x214 JUMP JUMPDEST PUSH3 0x21E JUMP JUMPDEST PUSH3 0x214 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x265 DUP4 PUSH3 0x228 JUMP JUMPDEST PUSH3 0x27D PUSH3 0x274 DUP3 PUSH3 0x250 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1BE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x294 PUSH3 0x285 JUMP JUMPDEST PUSH3 0x2A1 DUP2 DUP5 DUP5 PUSH3 0x25A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2C9 JUMPI PUSH3 0x2BD PUSH1 0x0 DUP3 PUSH3 0x28A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x2A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x318 JUMPI PUSH3 0x2E2 DUP2 PUSH3 0x18C JUMP JUMPDEST PUSH3 0x2ED DUP5 PUSH3 0x1A1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2FD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x315 PUSH3 0x30C DUP6 PUSH3 0x1A1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x2A6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x33D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x31D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x358 DUP4 DUP4 PUSH3 0x32A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x373 DUP3 PUSH3 0xEE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x38F JUMPI PUSH3 0x38E PUSH3 0xF9 JUMP JUMPDEST JUMPDEST PUSH3 0x39B DUP3 SLOAD PUSH3 0x157 JUMP JUMPDEST PUSH3 0x3A8 DUP3 DUP3 DUP6 PUSH3 0x2CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3E0 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3CB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3D7 DUP6 DUP3 PUSH3 0x34A JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x447 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3F0 DUP7 PUSH3 0x18C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x41A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3F3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x43A JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x436 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x32A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17E6 DUP1 PUSH3 0x45F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x791879EF GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD30ED3B3 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF04E283E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF04E283E EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0xF83D1791 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xFEE81CF4 EQ PUSH2 0x592 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xD30ED3B3 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F4 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x791879EF EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x465 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5372B2F6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x5372B2F6 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x54D1F13D EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x360 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C0 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xF15F4C0 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x25692962 EQ PUSH2 0x260 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x6B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH2 0x7BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH2 0xA20 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH2 0xA77 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x1644 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x60A SWAP1 PUSH2 0x1644 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x657 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x657 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE DUP2 PUSH1 0x34 PUSH1 0xC KECCAK256 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2C MLOAD PUSH1 0x60 SHR CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x0 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x781 PUSH2 0x770 CALLER PUSH2 0xDA4 JUMP JUMPDEST PUSH11 0x1A784379D99DB42000000 PUSH2 0xDB3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH9 0x5345CDF77EB68F44C SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B2 PUSH2 0x7A3 DUP6 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x7AC DUP6 PUSH2 0xDA4 JUMP JUMPDEST DUP5 PUSH2 0xE4A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C5 PUSH2 0xF1F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP ADD SWAP1 POP PUSH4 0x389A75E1 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 PUSH1 0xC KECCAK256 SSTORE CALLER PUSH32 0xDBF36A107DA19E49527A7176A1BABF963B4B0FF8CDE35EE35D6CD8F1F9AC7E1D PUSH1 0x0 DUP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x837 PUSH2 0x5CF JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP2 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 KECCAK256 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BB PUSH2 0x8B5 DUP5 PUSH2 0xDA4 JUMP JUMPDEST DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP1 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99E SWAP1 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9B1 PUSH2 0x783 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FF SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1A PUSH2 0xA14 DUP6 PUSH2 0xDA4 JUMP JUMPDEST DUP5 PUSH2 0xDB3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x389A75E1 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xC KECCAK256 SSTORE CALLER PUSH32 0xFA7B8EAB7DA67F412CC9575ED43464468F9BFBAE89D1675917346CA6D8FE3C92 PUSH1 0x0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x87A211A2 PUSH1 0xC MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7F PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xA89 PUSH1 0x0 PUSH2 0xFBA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x38377508 PUSH1 0xC MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x8B78C6D8 NOT SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xAD4 SWAP1 PUSH2 0x1644 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB00 SWAP1 PUSH2 0x1644 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB4D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB22 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB4D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB30 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B PUSH2 0xB65 DUP5 PUSH2 0xDA4 JUMP JUMPDEST DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB87 PUSH2 0xB81 DUP5 PUSH2 0xDA4 JUMP JUMPDEST DUP4 PUSH2 0x106B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAA PUSH2 0xB9B DUP5 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0xBA4 DUP5 PUSH2 0xDA4 JUMP JUMPDEST DUP4 PUSH2 0x10FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB9 PUSH2 0x826 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP6 TIMESTAMP GT ISZERO PUSH2 0xBD4 JUMPI PUSH4 0x1A15A3CC PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP9 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP9 POP DUP8 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP8 POP PUSH4 0x38377508 PUSH1 0xC MSTORE DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP4 MSTORE DUP11 PUSH1 0x20 DUP5 ADD MSTORE DUP10 PUSH1 0x40 DUP5 ADD MSTORE DUP9 PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP5 ADD MSTORE DUP8 PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1901 PUSH1 0x0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0xC0 DUP4 KECCAK256 PUSH1 0x40 MSTORE PUSH1 0x42 PUSH1 0x1E KECCAK256 PUSH1 0x0 MSTORE DUP7 PUSH1 0xFF AND PUSH1 0x20 MSTORE DUP6 PUSH1 0x40 MSTORE DUP5 PUSH1 0x60 MSTORE PUSH1 0x20 DUP1 PUSH1 0x80 PUSH1 0x0 PUSH1 0x1 GAS STATICCALL POP DUP11 RETURNDATASIZE MLOAD EQ PUSH2 0xC8A JUMPI PUSH4 0xDDAFBAEF PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP10 PUSH4 0x7F5E9F20 PUSH1 0xA0 SHL OR PUSH1 0x40 MSTORE DUP9 PUSH1 0x34 PUSH1 0x2C KECCAK256 SSTORE DUP10 DUP12 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x60 DUP8 ADD LOG3 DUP3 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD06 PUSH2 0xF9D JUMP JUMPDEST PUSH4 0x389A75E1 PUSH1 0xC MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD TIMESTAMP GT ISZERO PUSH2 0xD2E JUMPI PUSH4 0x6F5E8818 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x0 DUP2 SSTORE POP PUSH2 0xD3C DUP2 PUSH2 0xFBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD47 PUSH2 0xF9D JUMP JUMPDEST DUP1 PUSH1 0x60 SHL PUSH2 0xD5D JUMPI PUSH4 0x7448FBAE PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH2 0xD66 DUP2 PUSH2 0xFBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD84 PUSH2 0xD75 DUP5 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0xD7E DUP5 PUSH2 0xDA4 JUMP JUMPDEST DUP4 PUSH2 0x1140 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x389A75E1 PUSH1 0xC MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 GAS PUSH1 0xA0 SHL DUP3 OR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBF PUSH1 0x0 DUP4 DUP4 PUSH2 0x11D1 JUMP JUMPDEST PUSH9 0x5345CDF77EB68F44C SLOAD DUP2 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0xDE3 JUMPI PUSH4 0xE5CFE957 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP1 PUSH9 0x5345CDF77EB68F44C SSTORE PUSH4 0x87A211A2 PUSH1 0xC MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP4 DUP2 SLOAD ADD DUP2 SSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP PUSH2 0xE46 PUSH1 0x0 DUP4 DUP4 PUSH2 0x11D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE57 DUP5 DUP5 DUP5 PUSH2 0x11D1 JUMP JUMPDEST DUP4 PUSH1 0x60 SHL CALLER PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 DUP2 OR PUSH1 0xC MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xE95 JUMPI DUP1 DUP6 GT ISZERO PUSH2 0xE8F JUMPI PUSH4 0x13BE252B PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP5 DUP2 SUB DUP3 SSTORE JUMPDEST PUSH4 0x87A211A2 DUP4 OR PUSH1 0xC MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP8 GT ISZERO PUSH2 0xEBC JUMPI PUSH4 0xF4D678B8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP7 DUP2 SUB DUP3 SSTORE DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP8 DUP2 SLOAD ADD DUP2 SSTORE DUP8 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR DUP7 PUSH1 0x60 SHR PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP POP POP POP PUSH2 0xF14 DUP5 DUP5 DUP5 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP4 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0xF5C JUMPI PUSH4 0xF9067066 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP1 DUP4 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2C MLOAD PUSH1 0x60 SHR CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x0 LOG3 POP POP POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x8B78C6D8 NOT SLOAD CALLER EQ PUSH2 0xFB8 JUMPI PUSH4 0x82B42900 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST JUMP JUMPDEST PUSH4 0x8B78C6D8 NOT DUP2 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP2 POP DUP2 DUP2 SLOAD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x1027 JUMPI PUSH4 0x8301AB38 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP4 DUP2 SUB DUP1 DUP4 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2C MLOAD PUSH1 0x60 SHR CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x0 LOG3 POP POP POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1078 CALLER DUP5 DUP5 PUSH2 0x11D1 JUMP JUMPDEST PUSH4 0x87A211A2 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP5 GT ISZERO PUSH2 0x10A1 JUMPI PUSH4 0xF4D678B8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP4 DUP2 SUB DUP3 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP5 DUP2 SLOAD ADD DUP2 SSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR CALLER PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP PUSH2 0x10F3 CALLER DUP5 DUP5 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1139 JUMPI DUP1 DUP4 GT ISZERO PUSH2 0x1133 JUMPI PUSH4 0x13BE252B PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP3 DUP2 SUB DUP3 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x114B DUP4 DUP4 DUP4 PUSH2 0x11D1 JUMP JUMPDEST DUP3 PUSH1 0x60 SHL PUSH4 0x87A211A2 DUP2 OR PUSH1 0xC MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP5 GT ISZERO PUSH2 0x1176 JUMPI PUSH4 0xF4D678B8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP4 DUP2 SUB DUP3 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP5 DUP2 SLOAD ADD DUP2 SSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR DUP5 PUSH1 0x60 SHR PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP POP PUSH2 0x11CC DUP4 DUP4 DUP4 PUSH2 0x11D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1215 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123D DUP3 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x1247 DUP2 DUP6 PUSH2 0x11E6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1257 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x1221 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1285 DUP2 DUP5 PUSH2 0x1232 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12BD DUP3 PUSH2 0x1292 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CD DUP2 PUSH2 0x12B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12EA DUP2 PUSH2 0x12C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1303 DUP2 PUSH2 0x12F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x130E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1320 DUP2 PUSH2 0x12FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x133D JUMPI PUSH2 0x133C PUSH2 0x128D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x134B DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x135C DUP6 DUP3 DUP7 ADD PUSH2 0x1311 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137B DUP2 PUSH2 0x1366 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1396 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1372 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13A5 DUP2 PUSH2 0x12F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x139C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13DF JUMPI PUSH2 0x13DE PUSH2 0x128D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13ED DUP7 DUP3 DUP8 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13FE DUP7 DUP3 DUP8 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x140F DUP7 DUP3 DUP8 ADD PUSH2 0x1311 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142F DUP2 PUSH2 0x1419 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x144A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1463 DUP2 PUSH2 0x1450 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x147E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x145A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149A JUMPI PUSH2 0x1499 PUSH2 0x128D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14A8 DUP5 DUP3 DUP6 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14BA DUP2 PUSH2 0x12B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E4 DUP2 PUSH2 0x1419 JUMP JUMPDEST DUP2 EQ PUSH2 0x14EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1501 DUP2 PUSH2 0x14DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1510 DUP2 PUSH2 0x1450 JUMP JUMPDEST DUP2 EQ PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152D DUP2 PUSH2 0x1507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x128D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1560 DUP11 DUP3 DUP12 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1571 DUP11 DUP3 DUP12 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1582 DUP11 DUP3 DUP12 ADD PUSH2 0x1311 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1593 DUP11 DUP3 DUP12 ADD PUSH2 0x1311 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x15A4 DUP11 DUP3 DUP12 ADD PUSH2 0x14F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x15B5 DUP11 DUP3 DUP12 ADD PUSH2 0x151E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x15C6 DUP11 DUP3 DUP12 ADD PUSH2 0x151E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EC JUMPI PUSH2 0x15EB PUSH2 0x128D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FA DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x160B DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x165C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x166F JUMPI PUSH2 0x166E PUSH2 0x1615 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E56414C494400000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AB PUSH1 0x7 DUP4 PUSH2 0x11E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B6 DUP3 PUSH2 0x1675 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16DA DUP2 PUSH2 0x169E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x171B DUP3 PUSH2 0x12F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1726 DUP4 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x173E JUMPI PUSH2 0x173D PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45584345454453204D4158000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177A PUSH1 0xB DUP4 PUSH2 0x11E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1785 DUP3 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A9 DUP2 PUSH2 0x176D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0x24 SWAP15 0x1F PUSH16 0xB24F1983649C95C3D44CD729ADECBEC5 0xDA 0xB6 EXTCODECOPY 0xB2 SWAP13 PUSH10 0x5E3098AC8B64736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "141:2669:0:-:0;;;206:5;184:27;;;;;;;;;;;;;;;;;;;;218:32;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;257;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;323:2;296:29;;;;;;;;;;;;;;;;;;;;362:33;332:63;;141:2669;;;;;;;;;;;;7:99:3;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;141:2669:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_699": {
									"entryPoint": 2086,
									"id": 699,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_afterTokenTransfer_825": {
									"entryPoint": 4566,
									"id": 825,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_814": {
									"entryPoint": 4561,
									"id": 814,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_brutalized_181": {
									"entryPoint": 3492,
									"id": 181,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkOwner_329": {
									"entryPoint": 3997,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_727": {
									"entryPoint": 3507,
									"id": 727,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_ownershipHandoverValidFor_340": {
									"entryPoint": 3871,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_323": {
									"entryPoint": 4026,
									"id": 323,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_791": {
									"entryPoint": 4349,
									"id": 791,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_779": {
									"entryPoint": 4416,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@activate_209": {
									"entryPoint": 1717,
									"id": 209,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_547": {
									"entryPoint": 3294,
									"id": 547,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_561": {
									"entryPoint": 1633,
									"id": 561,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_535": {
									"entryPoint": 2652,
									"id": 535,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cancelOwnershipHandover_389": {
									"entryPoint": 2592,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@completeOwnershipHandover_403": {
									"entryPoint": 3326,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_51": {
									"entryPoint": 2063,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_172": {
									"entryPoint": 2903,
									"id": 172,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decreaseAllowance_589": {
									"entryPoint": 4088,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@directSpendAllowance_91": {
									"entryPoint": 2959,
									"id": 91,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@directTransfer_71": {
									"entryPoint": 3433,
									"id": 71,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@increaseAllowance_153": {
									"entryPoint": 2215,
									"id": 153,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_575": {
									"entryPoint": 3882,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minable_10": {
									"entryPoint": 2699,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintSupplyFromMinedLP_257": {
									"entryPoint": 2243,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_33": {
									"entryPoint": 1487,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_655": {
									"entryPoint": 2716,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_411": {
									"entryPoint": 2743,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownershipHandoverExpiresAt_421": {
									"entryPoint": 3465,
									"id": 421,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@permit_680": {
									"entryPoint": 2991,
									"id": 680,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@renounceOwnership_368": {
									"entryPoint": 2679,
									"id": 368,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestOwnershipHandover_383": {
									"entryPoint": 1979,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_42": {
									"entryPoint": 2757,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_525": {
									"entryPoint": 1923,
									"id": 525,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_134": {
									"entryPoint": 1941,
									"id": 134,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_645": {
									"entryPoint": 3658,
									"id": 645,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_354": {
									"entryPoint": 3391,
									"id": 354,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_110": {
									"entryPoint": 2931,
									"id": 110,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_617": {
									"entryPoint": 4203,
									"id": 617,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5653,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879": {
									"entryPoint": 5749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11013:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:3",
														"type": ""
													}
												],
												"src": "7:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:3",
														"type": ""
													}
												],
												"src": "112:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:3",
																"statements": []
															},
															"src": "378:113:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:3",
														"type": ""
													}
												],
												"src": "287:246:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:3",
														"type": ""
													}
												],
												"src": "539:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:3",
														"type": ""
													}
												],
												"src": "647:377:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:3",
														"type": ""
													}
												],
												"src": "1030:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:3",
														"type": ""
													}
												],
												"src": "1349:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:3",
														"type": ""
													}
												],
												"src": "1676:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:3",
														"type": ""
													}
												],
												"src": "1808:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:3"
															},
															"nodeType": "YulIf",
															"src": "1963:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:3",
														"type": ""
													}
												],
												"src": "1910:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:3",
														"type": ""
													}
												],
												"src": "2038:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:3",
														"type": ""
													}
												],
												"src": "2183:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:3"
															},
															"nodeType": "YulIf",
															"src": "2319:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:3",
														"type": ""
													}
												],
												"src": "2266:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:3",
														"type": ""
													}
												],
												"src": "2394:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:3"
															},
															"nodeType": "YulIf",
															"src": "2632:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:3",
														"type": ""
													}
												],
												"src": "2539:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:3",
														"type": ""
													}
												],
												"src": "3019:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:3",
														"type": ""
													}
												],
												"src": "3115:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:3",
														"type": ""
													}
												],
												"src": "3230:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:3",
														"type": ""
													}
												],
												"src": "3446:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:3",
														"type": ""
													}
												],
												"src": "3570:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:3"
															},
															"nodeType": "YulIf",
															"src": "3908:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:3",
														"type": ""
													}
												],
												"src": "3798:619:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:3",
														"type": ""
													}
												],
												"src": "4423:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:3",
														"type": ""
													}
												],
												"src": "4515:112:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:3",
														"type": ""
													}
												],
												"src": "4633:214:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4898:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4908:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4919:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4908:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4880:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4890:7:3",
														"type": ""
													}
												],
												"src": "4853:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5001:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5041:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5023:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5023:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5011:37:3"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4989:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4996:3:3",
														"type": ""
													}
												],
												"src": "4936:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5158:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5168:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5176:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5168:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5248:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5272:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5257:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5204:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5204:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5130:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5142:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5153:4:3",
														"type": ""
													}
												],
												"src": "5060:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5354:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5400:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5402:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5402:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5375:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:32:3"
															},
															"nodeType": "YulIf",
															"src": "5364:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5493:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5508:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5522:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5512:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5537:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5572:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5583:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5568:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5568:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5592:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5547:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5537:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5324:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5335:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5347:6:3",
														"type": ""
													}
												],
												"src": "5288:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5688:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5705:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5728:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5710:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5710:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5698:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5698:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5676:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5683:3:3",
														"type": ""
													}
												],
												"src": "5623:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5845:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5855:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5867:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5878:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5863:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5863:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5855:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5935:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5948:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5959:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5944:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5944:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5891:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5891:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5891:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5817:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5829:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5840:4:3",
														"type": ""
													}
												],
												"src": "5747:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6016:77:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6071:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6080:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6083:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6073:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6073:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6073:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6039:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6062:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "6046:15:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6046:22:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6036:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6036:33:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6029:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6029:41:3"
															},
															"nodeType": "YulIf",
															"src": "6026:61:3"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6009:5:3",
														"type": ""
													}
												],
												"src": "5975:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6149:85:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6159:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6181:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6168:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6168:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6159:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6222:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "6197:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6197:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6197:31:3"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6127:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6135:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6143:5:3",
														"type": ""
													}
												],
												"src": "6099:135:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6283:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6340:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6349:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6352:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6342:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6342:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6342:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6306:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6331:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "6313:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6313:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6303:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6303:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6296:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6296:43:3"
															},
															"nodeType": "YulIf",
															"src": "6293:63:3"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6276:5:3",
														"type": ""
													}
												],
												"src": "6240:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6420:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6430:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6452:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6439:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6430:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6495:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "6468:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6468:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6468:33:3"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6398:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6406:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6414:5:3",
														"type": ""
													}
												],
												"src": "6368:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6679:1033:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6726:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6728:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6728:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6728:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6700:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6709:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6696:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6696:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6721:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6692:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6692:33:3"
															},
															"nodeType": "YulIf",
															"src": "6689:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6819:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6834:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6848:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6838:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6863:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6898:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6909:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6894:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6894:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6918:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6873:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6873:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6863:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6946:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6961:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6975:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6965:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6991:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7026:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7037:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7022:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7022:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7046:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7001:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7001:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6991:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7074:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7089:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7103:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7093:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7119:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7154:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7165:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7150:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7150:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7174:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7129:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7129:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7119:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7202:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7217:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:2:3",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7221:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7247:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7282:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7293:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7278:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7278:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7302:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7257:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7257:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7247:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7330:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7345:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7359:3:3",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7349:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7376:61:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7409:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7420:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7405:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7405:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7429:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7386:18:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7386:51:3"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "7376:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7457:119:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7472:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7486:3:3",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7476:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7503:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7538:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7549:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7534:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7534:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7558:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "7513:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7513:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "7503:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7586:119:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7601:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7615:3:3",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7605:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7632:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7667:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7678:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7663:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7663:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7687:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "7642:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7642:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "7632:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6601:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6612:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6624:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6632:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6640:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6648:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6656:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6664:6:3",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "6672:6:3",
														"type": ""
													}
												],
												"src": "6513:1199:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7801:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7847:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7849:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7849:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7849:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7822:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7831:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7818:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7818:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7843:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7814:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:32:3"
															},
															"nodeType": "YulIf",
															"src": "7811:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "7940:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7955:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7969:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7959:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7984:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8019:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8030:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8015:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8015:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8039:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7994:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7994:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7984:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8067:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8082:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8096:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8086:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8112:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8147:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8158:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8143:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8143:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8167:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8122:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8122:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8112:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7763:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7774:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7786:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7794:6:3",
														"type": ""
													}
												],
												"src": "7718:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8226:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8243:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8246:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8236:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8236:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8236:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8340:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8343:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8333:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8333:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8333:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8364:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8367:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8357:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8357:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8357:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8198:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8435:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8445:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8459:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8465:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8455:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8455:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8445:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8476:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8506:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8512:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8480:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8553:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8567:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8581:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8589:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8577:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8577:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8567:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8533:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8526:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8526:26:3"
															},
															"nodeType": "YulIf",
															"src": "8523:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8656:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "8670:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8670:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8670:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8620:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8643:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8651:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8640:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8640:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8617:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8617:38:3"
															},
															"nodeType": "YulIf",
															"src": "8614:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8419:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8428:6:3",
														"type": ""
													}
												],
												"src": "8384:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8816:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8838:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8846:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8834:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8834:14:3"
																	},
																	{
																		"hexValue": "494e56414c4944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8850:9:3",
																		"type": "",
																		"value": "INVALID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8827:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8827:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8827:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8808:6:3",
														"type": ""
													}
												],
												"src": "8710:157:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9019:219:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9029:73:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9095:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9100:1:3",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9036:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9036:66:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9029:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9200:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
																	"nodeType": "YulIdentifier",
																	"src": "9111:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9111:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9111:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9213:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9224:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9229:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9220:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9220:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9213:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9007:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9015:3:3",
														"type": ""
													}
												],
												"src": "8873:365:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9415:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9425:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9437:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9448:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9433:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9433:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9425:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9472:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9483:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9468:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9468:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9491:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9487:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9487:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9461:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9461:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9461:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9517:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9651:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9525:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9517:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9395:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9410:4:3",
														"type": ""
													}
												],
												"src": "9244:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9697:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9714:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9717:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9707:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9707:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9707:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9811:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9814:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9804:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9804:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9804:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9835:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9838:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9828:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9828:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9828:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9669:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9899:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9909:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9932:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9914:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9914:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9909:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9943:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9966:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9948:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9948:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9943:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9977:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9988:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9991:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9984:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9984:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9977:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10017:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10019:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10019:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10019:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10009:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10012:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10006:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:10:3"
															},
															"nodeType": "YulIf",
															"src": "10003:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9886:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9889:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9895:3:3",
														"type": ""
													}
												],
												"src": "9855:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10158:55:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10180:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10188:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10176:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10176:14:3"
																	},
																	{
																		"hexValue": "45584345454453204d4158",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10192:13:3",
																		"type": "",
																		"value": "EXCEEDS MAX"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10169:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10169:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10169:37:3"
														}
													]
												},
												"name": "store_literal_in_memory_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10150:6:3",
														"type": ""
													}
												],
												"src": "10052:161:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10365:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10375:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10441:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10446:2:3",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10382:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10382:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10375:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10547:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6",
																	"nodeType": "YulIdentifier",
																	"src": "10458:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10458:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10458:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10560:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10571:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10576:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10567:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10567:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10560:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10353:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10361:3:3",
														"type": ""
													}
												],
												"src": "10219:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10762:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10772:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10784:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10795:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10780:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10780:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10772:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10819:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10830:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10815:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10815:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10838:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10844:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10834:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10834:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10808:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10808:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10808:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10864:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10998:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10872:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10872:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10864:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10742:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10757:4:3",
														"type": ""
													}
												],
												"src": "10591:419:3"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879(memPtr) {\n\n        mstore(add(memPtr, 0), \"INVALID\")\n\n    }\n\n    function abi_encode_t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"EXCEEDS MAX\")\n\n    }\n\n    function abi_encode_t_stringliteral_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101815760003560e01c8063791879ef116100d1578063d30ed3b31161008a578063f04e283e11610064578063f04e283e14610531578063f2fde38b1461054d578063f83d179114610569578063fee81cf41461059257610181565b8063d30ed3b3146104a2578063d505accf146104cb578063dd62ed3e146104f457610181565b8063791879ef1461036a5780637ecebe00146103955780638da5cb5b146103d257806395d89b41146103fd578063a457c2d714610428578063a9059cbb1461046557610181565b8063313ce5671161013e5780635372b2f6116101185780635372b2f6146102fd57806354d1f13d1461031957806370a0823114610323578063715018a61461036057610181565b8063313ce5671461026a5780633644e5151461029557806339509351146102c057610181565b806306fdde0314610186578063095ea7b3146101b15780630f15f4c0146101ee57806318160ddd146101f857806323b872dd146102235780632569296214610260575b600080fd5b34801561019257600080fd5b5061019b6105cf565b6040516101a8919061126b565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190611326565b610661565b6040516101e59190611381565b60405180910390f35b6101f66106b5565b005b34801561020457600080fd5b5061020d610783565b60405161021a91906113ab565b60405180910390f35b34801561022f57600080fd5b5061024a600480360381019061024591906113c6565b610795565b6040516102579190611381565b60405180910390f35b6102686107bb565b005b34801561027657600080fd5b5061027f61080f565b60405161028c9190611435565b60405180910390f35b3480156102a157600080fd5b506102aa610826565b6040516102b79190611469565b60405180910390f35b3480156102cc57600080fd5b506102e760048036038101906102e29190611326565b6108a7565b6040516102f49190611381565b60405180910390f35b61031760048036038101906103129190611326565b6108c3565b005b610321610a20565b005b34801561032f57600080fd5b5061034a60048036038101906103459190611484565b610a5c565b60405161035791906113ab565b60405180910390f35b610368610a77565b005b34801561037657600080fd5b5061037f610a8b565b60405161038c9190611381565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b79190611484565b610a9c565b6040516103c991906113ab565b60405180910390f35b3480156103de57600080fd5b506103e7610ab7565b6040516103f491906114c0565b60405180910390f35b34801561040957600080fd5b50610412610ac5565b60405161041f919061126b565b60405180910390f35b34801561043457600080fd5b5061044f600480360381019061044a9190611326565b610b57565b60405161045c9190611381565b60405180910390f35b34801561047157600080fd5b5061048c60048036038101906104879190611326565b610b73565b6040516104999190611381565b60405180910390f35b3480156104ae57600080fd5b506104c960048036038101906104c491906113c6565b610b8f565b005b3480156104d757600080fd5b506104f260048036038101906104ed9190611533565b610baf565b005b34801561050057600080fd5b5061051b600480360381019061051691906115d5565b610cde565b60405161052891906113ab565b60405180910390f35b61054b60048036038101906105469190611484565b610cfe565b005b61056760048036038101906105629190611484565b610d3f565b005b34801561057557600080fd5b50610590600480360381019061058b91906113c6565b610d69565b005b34801561059e57600080fd5b506105b960048036038101906105b49190611484565b610d89565b6040516105c691906113ab565b60405180910390f35b6060600180546105de90611644565b80601f016020809104026020016040519081016040528092919081815260200182805461060a90611644565b80156106575780601f1061062c57610100808354040283529160200191610657565b820191906000526020600020905b81548152906001019060200180831161063a57829003601f168201915b5050505050905090565b600082602052637f5e9f20600c5233600052816034600c205581600052602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560206000a36001905092915050565b6000151560008054906101000a900460ff16151514610709576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610700906116c1565b60405180910390fd5b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000806101000a81548160ff02191690831515021790555061078161077033610da4565b6a01a784379d99db42000000610db3565b565b60006805345cdf77eb68f44c54905090565b60006107b26107a385610da4565b6107ac85610da4565b84610e4a565b90509392505050565b60006107c5610f1f565b67ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6000600360009054906101000a900460ff16905090565b6000604051905060006108376105cf565b805190602001209050817f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81528160208201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604082015246606082015230608082015260a081209250505090565b60006108bb6108b584610da4565b83610f2a565b905092915050565b6001151560008054906101000a900460ff16151514610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e906116c1565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099e906116c1565b60405180910390fd5b60006109b1610783565b9050600082826109c19190611710565b9050600454811115610a08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ff90611790565b60405180910390fd5b610a1a610a1485610da4565b84610db3565b50505050565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b60006387a211a2600c52816000526020600c20549050919050565b610a7f610f9d565b610a896000610fba565b565b60008054906101000a900460ff1681565b60006338377508600c52816000526020600c20549050919050565b6000638b78c6d81954905090565b606060028054610ad490611644565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0090611644565b8015610b4d5780601f10610b2257610100808354040283529160200191610b4d565b820191906000526020600020905b815481529060010190602001808311610b3057829003601f168201915b5050505050905090565b6000610b6b610b6584610da4565b83610ff8565b905092915050565b6000610b87610b8184610da4565b8361106b565b905092915050565b610baa610b9b84610da4565b610ba484610da4565b836110fd565b505050565b6000610bb9610826565b905060405185421115610bd457631a15a3cc6000526004601cfd5b8860601b60601c98508760601b60601c97506338377508600c52886000526020600c2080546001810182557f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c983528a60208401528960408401528860608401528060808401528760a08401526119016000528360205260c083206040526042601e206000528660ff1660205285604052846060526020806080600060015afa508a3d5114610c8a5763ddafbaef6000526004601cfd5b89637f5e9f2060a01b17604052886034602c2055898b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925602060608701a38260405260006060525050505050505050505050565b600081602052637f5e9f20600c52826000526034600c2054905092915050565b610d06610f9d565b63389a75e1600c52806000526020600c208054421115610d2e57636f5e88186000526004601cfd5b6000815550610d3c81610fba565b50565b610d47610f9d565b8060601b610d5d57637448fbae6000526004601cfd5b610d6681610fba565b50565b610d84610d7584610da4565b610d7e84610da4565b83611140565b505050565b600063389a75e1600c52816000526020600c20549050919050565b60005a60a01b82179050919050565b610dbf600083836111d1565b6805345cdf77eb68f44c5481810181811015610de35763e5cfe9576000526004601cfd5b806805345cdf77eb68f44c556387a211a2600c52836000526020600c2083815401815583602052600c5160601c60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a3505050610e46600083836111d6565b5050565b6000610e578484846111d1565b8360601b33602052637f5e9f208117600c526034600c2080546000198114610e955780851115610e8f576313be252b6000526004601cfd5b84810382555b6387a211a28317600c526020600c20805480871115610ebc5763f4d678b86000526004601cfd5b8681038255876000526020600c2087815401815587602052600c5160601c8660601c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a3505050505050610f148484846111d6565b600190509392505050565b60006202a300905090565b600082602052637f5e9f20600c52336000526034600c20805483810181811015610f5c5763f90670666000526004601cfd5b80835580600052602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560206000a35050506001905092915050565b638b78c6d819543314610fb8576382b429006000526004601cfd5b565b638b78c6d8198160601b60601c91508181547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38181555050565b600082602052637f5e9f20600c52336000526034600c2080548381101561102757638301ab386000526004601cfd5b83810380835580600052602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560206000a35050506001905092915050565b60006110783384846111d1565b6387a211a2600c52336000526020600c208054808411156110a15763f4d678b86000526004601cfd5b8381038255846000526020600c2084815401815584602052600c5160601c337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a35050506110f33384846111d6565b6001905092915050565b81602052637f5e9f20600c52826000526034600c20805460001981146111395780831115611133576313be252b6000526004601cfd5b82810382555b5050505050565b61114b8383836111d1565b8260601b6387a211a28117600c526020600c208054808411156111765763f4d678b86000526004601cfd5b8381038255846000526020600c2084815401815584602052600c5160601c8460601c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a3505050506111cc8383836111d6565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112155780820151818401526020810190506111fa565b60008484015250505050565b6000601f19601f8301169050919050565b600061123d826111db565b61124781856111e6565b93506112578185602086016111f7565b61126081611221565b840191505092915050565b600060208201905081810360008301526112858184611232565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112bd82611292565b9050919050565b6112cd816112b2565b81146112d857600080fd5b50565b6000813590506112ea816112c4565b92915050565b6000819050919050565b611303816112f0565b811461130e57600080fd5b50565b600081359050611320816112fa565b92915050565b6000806040838503121561133d5761133c61128d565b5b600061134b858286016112db565b925050602061135c85828601611311565b9150509250929050565b60008115159050919050565b61137b81611366565b82525050565b60006020820190506113966000830184611372565b92915050565b6113a5816112f0565b82525050565b60006020820190506113c0600083018461139c565b92915050565b6000806000606084860312156113df576113de61128d565b5b60006113ed868287016112db565b93505060206113fe868287016112db565b925050604061140f86828701611311565b9150509250925092565b600060ff82169050919050565b61142f81611419565b82525050565b600060208201905061144a6000830184611426565b92915050565b6000819050919050565b61146381611450565b82525050565b600060208201905061147e600083018461145a565b92915050565b60006020828403121561149a5761149961128d565b5b60006114a8848285016112db565b91505092915050565b6114ba816112b2565b82525050565b60006020820190506114d560008301846114b1565b92915050565b6114e481611419565b81146114ef57600080fd5b50565b600081359050611501816114db565b92915050565b61151081611450565b811461151b57600080fd5b50565b60008135905061152d81611507565b92915050565b600080600080600080600060e0888a0312156115525761155161128d565b5b60006115608a828b016112db565b97505060206115718a828b016112db565b96505060406115828a828b01611311565b95505060606115938a828b01611311565b94505060806115a48a828b016114f2565b93505060a06115b58a828b0161151e565b92505060c06115c68a828b0161151e565b91505092959891949750929550565b600080604083850312156115ec576115eb61128d565b5b60006115fa858286016112db565b925050602061160b858286016112db565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061165c57607f821691505b60208210810361166f5761166e611615565b5b50919050565b7f494e56414c494400000000000000000000000000000000000000000000000000600082015250565b60006116ab6007836111e6565b91506116b682611675565b602082019050919050565b600060208201905081810360008301526116da8161169e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061171b826112f0565b9150611726836112f0565b925082820190508082111561173e5761173d6116e1565b5b92915050565b7f45584345454453204d4158000000000000000000000000000000000000000000600082015250565b600061177a600b836111e6565b915061178582611744565b602082019050919050565b600060208201905081810360008301526117a98161176d565b905091905056fea2646970667358221220f2249e1f6fb24f1983649c95c3d44cd729adecbec5dab63cb29c695e3098ac8b64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x791879EF GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD30ED3B3 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF04E283E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF04E283E EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0xF83D1791 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xFEE81CF4 EQ PUSH2 0x592 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xD30ED3B3 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F4 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x791879EF EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x465 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5372B2F6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x5372B2F6 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x54D1F13D EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x360 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C0 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xF15F4C0 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x25692962 EQ PUSH2 0x260 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x6B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH2 0x7BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH2 0xA20 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH2 0xA77 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x1644 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x60A SWAP1 PUSH2 0x1644 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x657 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x657 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE DUP2 PUSH1 0x34 PUSH1 0xC KECCAK256 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2C MLOAD PUSH1 0x60 SHR CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x0 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x781 PUSH2 0x770 CALLER PUSH2 0xDA4 JUMP JUMPDEST PUSH11 0x1A784379D99DB42000000 PUSH2 0xDB3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH9 0x5345CDF77EB68F44C SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B2 PUSH2 0x7A3 DUP6 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x7AC DUP6 PUSH2 0xDA4 JUMP JUMPDEST DUP5 PUSH2 0xE4A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C5 PUSH2 0xF1F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP ADD SWAP1 POP PUSH4 0x389A75E1 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 PUSH1 0xC KECCAK256 SSTORE CALLER PUSH32 0xDBF36A107DA19E49527A7176A1BABF963B4B0FF8CDE35EE35D6CD8F1F9AC7E1D PUSH1 0x0 DUP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x837 PUSH2 0x5CF JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP2 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 KECCAK256 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BB PUSH2 0x8B5 DUP5 PUSH2 0xDA4 JUMP JUMPDEST DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP1 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99E SWAP1 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9B1 PUSH2 0x783 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FF SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1A PUSH2 0xA14 DUP6 PUSH2 0xDA4 JUMP JUMPDEST DUP5 PUSH2 0xDB3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x389A75E1 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xC KECCAK256 SSTORE CALLER PUSH32 0xFA7B8EAB7DA67F412CC9575ED43464468F9BFBAE89D1675917346CA6D8FE3C92 PUSH1 0x0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x87A211A2 PUSH1 0xC MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7F PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xA89 PUSH1 0x0 PUSH2 0xFBA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x38377508 PUSH1 0xC MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x8B78C6D8 NOT SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xAD4 SWAP1 PUSH2 0x1644 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB00 SWAP1 PUSH2 0x1644 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB4D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB22 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB4D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB30 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B PUSH2 0xB65 DUP5 PUSH2 0xDA4 JUMP JUMPDEST DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB87 PUSH2 0xB81 DUP5 PUSH2 0xDA4 JUMP JUMPDEST DUP4 PUSH2 0x106B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAA PUSH2 0xB9B DUP5 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0xBA4 DUP5 PUSH2 0xDA4 JUMP JUMPDEST DUP4 PUSH2 0x10FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB9 PUSH2 0x826 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP6 TIMESTAMP GT ISZERO PUSH2 0xBD4 JUMPI PUSH4 0x1A15A3CC PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP9 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP9 POP DUP8 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP8 POP PUSH4 0x38377508 PUSH1 0xC MSTORE DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP4 MSTORE DUP11 PUSH1 0x20 DUP5 ADD MSTORE DUP10 PUSH1 0x40 DUP5 ADD MSTORE DUP9 PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP5 ADD MSTORE DUP8 PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1901 PUSH1 0x0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0xC0 DUP4 KECCAK256 PUSH1 0x40 MSTORE PUSH1 0x42 PUSH1 0x1E KECCAK256 PUSH1 0x0 MSTORE DUP7 PUSH1 0xFF AND PUSH1 0x20 MSTORE DUP6 PUSH1 0x40 MSTORE DUP5 PUSH1 0x60 MSTORE PUSH1 0x20 DUP1 PUSH1 0x80 PUSH1 0x0 PUSH1 0x1 GAS STATICCALL POP DUP11 RETURNDATASIZE MLOAD EQ PUSH2 0xC8A JUMPI PUSH4 0xDDAFBAEF PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP10 PUSH4 0x7F5E9F20 PUSH1 0xA0 SHL OR PUSH1 0x40 MSTORE DUP9 PUSH1 0x34 PUSH1 0x2C KECCAK256 SSTORE DUP10 DUP12 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x60 DUP8 ADD LOG3 DUP3 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD06 PUSH2 0xF9D JUMP JUMPDEST PUSH4 0x389A75E1 PUSH1 0xC MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD TIMESTAMP GT ISZERO PUSH2 0xD2E JUMPI PUSH4 0x6F5E8818 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x0 DUP2 SSTORE POP PUSH2 0xD3C DUP2 PUSH2 0xFBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD47 PUSH2 0xF9D JUMP JUMPDEST DUP1 PUSH1 0x60 SHL PUSH2 0xD5D JUMPI PUSH4 0x7448FBAE PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH2 0xD66 DUP2 PUSH2 0xFBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD84 PUSH2 0xD75 DUP5 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0xD7E DUP5 PUSH2 0xDA4 JUMP JUMPDEST DUP4 PUSH2 0x1140 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x389A75E1 PUSH1 0xC MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 GAS PUSH1 0xA0 SHL DUP3 OR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBF PUSH1 0x0 DUP4 DUP4 PUSH2 0x11D1 JUMP JUMPDEST PUSH9 0x5345CDF77EB68F44C SLOAD DUP2 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0xDE3 JUMPI PUSH4 0xE5CFE957 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP1 PUSH9 0x5345CDF77EB68F44C SSTORE PUSH4 0x87A211A2 PUSH1 0xC MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP4 DUP2 SLOAD ADD DUP2 SSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP PUSH2 0xE46 PUSH1 0x0 DUP4 DUP4 PUSH2 0x11D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE57 DUP5 DUP5 DUP5 PUSH2 0x11D1 JUMP JUMPDEST DUP4 PUSH1 0x60 SHL CALLER PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 DUP2 OR PUSH1 0xC MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xE95 JUMPI DUP1 DUP6 GT ISZERO PUSH2 0xE8F JUMPI PUSH4 0x13BE252B PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP5 DUP2 SUB DUP3 SSTORE JUMPDEST PUSH4 0x87A211A2 DUP4 OR PUSH1 0xC MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP8 GT ISZERO PUSH2 0xEBC JUMPI PUSH4 0xF4D678B8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP7 DUP2 SUB DUP3 SSTORE DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP8 DUP2 SLOAD ADD DUP2 SSTORE DUP8 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR DUP7 PUSH1 0x60 SHR PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP POP POP POP PUSH2 0xF14 DUP5 DUP5 DUP5 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP4 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0xF5C JUMPI PUSH4 0xF9067066 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP1 DUP4 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2C MLOAD PUSH1 0x60 SHR CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x0 LOG3 POP POP POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x8B78C6D8 NOT SLOAD CALLER EQ PUSH2 0xFB8 JUMPI PUSH4 0x82B42900 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST JUMP JUMPDEST PUSH4 0x8B78C6D8 NOT DUP2 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP2 POP DUP2 DUP2 SLOAD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x1027 JUMPI PUSH4 0x8301AB38 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP4 DUP2 SUB DUP1 DUP4 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2C MLOAD PUSH1 0x60 SHR CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x0 LOG3 POP POP POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1078 CALLER DUP5 DUP5 PUSH2 0x11D1 JUMP JUMPDEST PUSH4 0x87A211A2 PUSH1 0xC MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP5 GT ISZERO PUSH2 0x10A1 JUMPI PUSH4 0xF4D678B8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP4 DUP2 SUB DUP3 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP5 DUP2 SLOAD ADD DUP2 SSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR CALLER PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP PUSH2 0x10F3 CALLER DUP5 DUP5 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1139 JUMPI DUP1 DUP4 GT ISZERO PUSH2 0x1133 JUMPI PUSH4 0x13BE252B PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP3 DUP2 SUB DUP3 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x114B DUP4 DUP4 DUP4 PUSH2 0x11D1 JUMP JUMPDEST DUP3 PUSH1 0x60 SHL PUSH4 0x87A211A2 DUP2 OR PUSH1 0xC MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP5 GT ISZERO PUSH2 0x1176 JUMPI PUSH4 0xF4D678B8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP4 DUP2 SUB DUP3 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP5 DUP2 SLOAD ADD DUP2 SSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR DUP5 PUSH1 0x60 SHR PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP POP PUSH2 0x11CC DUP4 DUP4 DUP4 PUSH2 0x11D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1215 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123D DUP3 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x1247 DUP2 DUP6 PUSH2 0x11E6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1257 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x1221 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1285 DUP2 DUP5 PUSH2 0x1232 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12BD DUP3 PUSH2 0x1292 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CD DUP2 PUSH2 0x12B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12EA DUP2 PUSH2 0x12C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1303 DUP2 PUSH2 0x12F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x130E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1320 DUP2 PUSH2 0x12FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x133D JUMPI PUSH2 0x133C PUSH2 0x128D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x134B DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x135C DUP6 DUP3 DUP7 ADD PUSH2 0x1311 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137B DUP2 PUSH2 0x1366 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1396 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1372 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13A5 DUP2 PUSH2 0x12F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x139C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13DF JUMPI PUSH2 0x13DE PUSH2 0x128D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13ED DUP7 DUP3 DUP8 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13FE DUP7 DUP3 DUP8 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x140F DUP7 DUP3 DUP8 ADD PUSH2 0x1311 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142F DUP2 PUSH2 0x1419 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x144A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1463 DUP2 PUSH2 0x1450 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x147E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x145A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149A JUMPI PUSH2 0x1499 PUSH2 0x128D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14A8 DUP5 DUP3 DUP6 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14BA DUP2 PUSH2 0x12B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E4 DUP2 PUSH2 0x1419 JUMP JUMPDEST DUP2 EQ PUSH2 0x14EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1501 DUP2 PUSH2 0x14DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1510 DUP2 PUSH2 0x1450 JUMP JUMPDEST DUP2 EQ PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152D DUP2 PUSH2 0x1507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x128D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1560 DUP11 DUP3 DUP12 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1571 DUP11 DUP3 DUP12 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1582 DUP11 DUP3 DUP12 ADD PUSH2 0x1311 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1593 DUP11 DUP3 DUP12 ADD PUSH2 0x1311 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x15A4 DUP11 DUP3 DUP12 ADD PUSH2 0x14F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x15B5 DUP11 DUP3 DUP12 ADD PUSH2 0x151E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x15C6 DUP11 DUP3 DUP12 ADD PUSH2 0x151E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EC JUMPI PUSH2 0x15EB PUSH2 0x128D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FA DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x160B DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x165C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x166F JUMPI PUSH2 0x166E PUSH2 0x1615 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E56414C494400000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AB PUSH1 0x7 DUP4 PUSH2 0x11E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B6 DUP3 PUSH2 0x1675 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16DA DUP2 PUSH2 0x169E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x171B DUP3 PUSH2 0x12F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1726 DUP4 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x173E JUMPI PUSH2 0x173D PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45584345454453204D4158000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177A PUSH1 0xB DUP4 PUSH2 0x11E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1785 DUP3 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A9 DUP2 PUSH2 0x176D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0x24 SWAP15 0x1F PUSH16 0xB24F1983649C95C3D44CD729ADECBEC5 0xDA 0xB6 EXTCODECOPY 0xB2 SWAP13 PUSH10 0x5E3098AC8B64736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "141:2669:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;431:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5995:573:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2177:245:0;;;:::i;:::-;;4847:195:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1261:232:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7162:617:1;;;:::i;:::-;;651:100:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17096:1062:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1501:227:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2428:379;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7861:456:1;;;:::i;:::-;;5108:286:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6903:100:1;;;:::i;:::-;;184:27:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13503:340:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9549:191:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;539:104:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1736:227;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1105:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;920:177;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14027:3010:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5489:375;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8504:708:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6489:349;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;759:153:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9843:435:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;431:100:0;485:13;518:5;511:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;431:100;:::o;5995:573:2:-;6069:4;6228:7;6222:4;6215:21;6262:20;6256:4;6249:34;6309:8;6303:4;6296:22;6361:6;6354:4;6348;6338:21;6331:37;6436:6;6430:4;6423:20;6524:4;6518:11;6514:2;6510:20;6500:8;6473:25;6467:4;6461;6456:75;6557:4;6550:11;;5995:573;;;;:::o;2177:245:0:-;2244:5;2233:16;;:7;;;;;;;;;;:16;;;2225:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;2288:10;2272:13;;:26;;;;;;;;;;;;;;;;;;2319:4;2309:7;;:14;;;;;;;;;;;;;;;;;;2359:45;2365:23;2377:10;2365:11;:23::i;:::-;2390:13;2359:5;:45::i;:::-;2177:245::o;4847:195:2:-;4899:14;5007:18;5001:25;4991:35;;4847:195;:::o;1261:232:0:-;1394:4;1423:62;1442:17;1454:4;1442:11;:17::i;:::-;1461:15;1473:2;1461:11;:15::i;:::-;1478:6;1423:18;:62::i;:::-;1416:69;;1261:232;;;;;:::o;7162:617:1:-;7255:15;7291:28;:26;:28::i;:::-;7273:46;;:15;:46;7255:64;;7487:19;7481:4;7474:33;7537:8;7531:4;7524:22;7593:7;7586:4;7580;7570:21;7563:38;7740:8;7693:45;7690:1;7687;7682:67;7389:374;7162:617::o;651:100:0:-;709:5;734:9;;;;;;;;;;;727:16;;651:100;:::o;17096:1062:2:-;17153:14;17261:4;17255:11;17245:21;;17412:16;17447:6;:4;:6::i;:::-;17431:24;;;;;;17412:43;;17540:6;17726:66;17723:1;17716:77;17827:8;17820:4;17817:1;17813:12;17806:30;17946:66;17939:4;17936:1;17932:12;17925:88;18047:9;18040:4;18037:1;18033:12;18026:31;18091:9;18084:4;18081:1;18077:12;18070:31;18137:4;18134:1;18124:18;18114:28;;17517:635;;17096:1062;:::o;1501:227:0:-;1634:4;1663:57;1687:20;1699:7;1687:11;:20::i;:::-;1709:10;1663:23;:57::i;:::-;1656:64;;1501:227;;;;:::o;2428:379::-;2536:4;2525:15;;:7;;;;;;;;;;:15;;;2517:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2585:13;;;;;;;;;;;2571:27;;:10;:27;;;2563:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2621:12;2636:13;:11;:13::i;:::-;2621:28;;2660:16;2689:5;2679:7;:15;;;;:::i;:::-;2660:34;;2730:10;;2715:11;:25;;2707:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2767:32;2773:18;2785:5;2773:11;:18::i;:::-;2793:5;2767;:32::i;:::-;2506:301;;2428:379;;:::o;7861:456:1:-;8063:19;8057:4;8050:33;8109:8;8103:4;8096:22;8161:1;8154:4;8148;8138:21;8131:32;8292:8;8246:44;8243:1;8240;8235:66;7861:456::o;5108:286:2:-;5171:14;5276:18;5270:4;5263:32;5321:5;5315:4;5308:19;5372:4;5366;5356:21;5350:28;5340:38;;5108:286;;;:::o;6903:100:1:-;10667:13;:11;:13::i;:::-;6975:21:::1;6993:1;6975:9;:21::i;:::-;6903:100::o:0;184:27:0:-;;;;;;;;;;;;:::o;13503:340:2:-;13563:14;13726:17;13720:4;13713:31;13770:5;13764:4;13757:19;13821:4;13815;13805:21;13799:28;13789:38;;13503:340;;;:::o;9549:191:1:-;9595:14;9707:15;9703:20;9697:27;9687:37;;9549:191;:::o;539:104:0:-;595:13;628:7;621:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;539:104;:::o;1736:227::-;1869:4;1898:57;1922:20;1934:7;1922:11;:20::i;:::-;1944:10;1898:23;:57::i;:::-;1891:64;;1736:227;;;;:::o;1105:150::-;1184:4;1208:39;1223:15;1235:2;1223:11;:15::i;:::-;1240:6;1208:14;:39::i;:::-;1201:46;;1105:150;;;;:::o;920:177::-;1024:65;1040:18;1052:5;1040:11;:18::i;:::-;1060:20;1072:7;1060:11;:20::i;:::-;1082:6;1024:15;:65::i;:::-;920:177;;;:::o;14027:3010:2:-;14226:23;14252:18;:16;:18::i;:::-;14226:44;;14406:4;14400:11;14513:8;14500:11;14497:25;14494:142;;;14554:10;14548:4;14541:24;14617:4;14611;14604:18;14494:142;14714:5;14710:2;14706:14;14702:2;14698:23;14689:32;;14761:7;14757:2;14753:16;14749:2;14745:25;14734:36;;14854:17;14848:4;14841:31;14898:5;14892:4;14885:19;14950:4;14944;14934:21;14992:9;14986:16;15103:1;15091:10;15087:18;15076:9;15069:37;15325:66;15322:1;15315:77;15426:5;15419:4;15416:1;15412:12;15405:27;15466:7;15459:4;15456:1;15452:12;15445:29;15508:5;15501:4;15498:1;15494:12;15487:27;15548:10;15541:4;15538:1;15534:12;15527:32;15593:8;15586:4;15583:1;15579:12;15572:30;15664:6;15661:1;15654:17;15697:15;15691:4;15684:29;15752:4;15749:1;15739:18;15733:4;15726:32;15844:4;15838;15828:21;15825:1;15818:32;15886:1;15880:4;15876:12;15870:4;15863:26;15915:1;15909:4;15902:15;15943:1;15937:4;15930:15;15998:4;15992;15986;15983:1;15980;15973:5;15962:41;15958:46;16423:5;16404:16;16398:23;16395:34;16385:159;;16462:10;16456:4;16449:24;16525:4;16519;16512:18;16385:159;16720:7;16697:20;16692:3;16688:30;16685:43;16679:4;16672:57;16772:5;16765:4;16759;16749:21;16742:36;16892:7;16885:5;16858:25;16852:4;16845;16842:1;16838:12;16833:67;16926:1;16920:4;16913:15;16990:1;16984:4;16977:15;14332:2699;;;;14027:3010;;;;;;;:::o;5489:375::-;5601:14;5710:7;5704:4;5697:21;5744:20;5738:4;5731:34;5791:5;5785:4;5778:19;5842:4;5836;5826:21;5820:28;5810:38;;5489:375;;;;:::o;8504:708:1:-;10667:13;:11;:13::i;:::-;8738:19:::1;8732:4;8725:33;8784:12;8778:4;8771:26;8846:4;8840;8830:21;8952:12;8946:19;8933:11;8930:36;8927:157;;;8998:10;8992:4;8985:24;9065:4;9059;9052:18;8927:157;9161:1;9147:12;9140:23;8656:517;9182:23;9192:12;9182:9;:23::i;:::-;8504:708:::0;:::o;6489:349::-;10667:13;:11;:13::i;:::-;6661:8:::1;6657:2;6653:17;6643:150;;6703:10;6697:4;6690:24;6774:4;6768;6761:18;6643:150;6812:19;6822:8;6812:9;:19::i;:::-;6489:349:::0;:::o;759:153:0:-;851:53;861:17;873:4;861:11;:17::i;:::-;880:15;892:2;880:11;:15::i;:::-;897:6;851:9;:53::i;:::-;759:153;;;:::o;9843:435:1:-;9962:14;10113:19;10107:4;10100:33;10159:12;10153:4;10146:26;10256:4;10250;10240:21;10234:28;10224:38;;9843:435;;;:::o;1971:200:0:-;2026:14;2146:5;2141:3;2137:15;2134:1;2131:22;2121:32;;1971:200;;;:::o;18562:1172:2:-;18632:44;18661:1;18665:2;18669:6;18632:20;:44::i;:::-;18783:18;18777:25;18862:6;18843:17;18839:30;18959:17;18941:16;18938:39;18935:162;;;19009:10;19003:4;18996:24;19078:4;19072;19065:18;18935:162;19184:16;19164:18;19157:44;19287:18;19281:4;19274:32;19332:2;19326:4;19319:16;19385:4;19379;19369:21;19501:6;19485:13;19479:20;19475:33;19460:13;19453:56;19577:6;19571:4;19564:20;19658:4;19652:11;19648:2;19644:20;19641:1;19614:25;19608:4;19602;19597:68;18738:937;;;19684:43;19712:1;19716:2;19720:6;19684:19;:43::i;:::-;18562:1172;;:::o;10886:2203::-;10974:4;10990:38;11011:4;11017:2;11021:6;10990:20;:38::i;:::-;11125:4;11121:2;11117:13;11218:8;11212:4;11205:22;11263:20;11256:5;11253:31;11247:4;11240:45;11335:4;11329;11319:21;11377:13;11371:20;11499:1;11495:6;11483:10;11480:22;11470:430;;11617:10;11609:6;11606:22;11603:159;;;11664:10;11658:4;11651:24;11739:4;11733;11726:18;11603:159;11878:6;11866:10;11862:23;11847:13;11840:46;11470:430;11996:18;11989:5;11986:29;11980:4;11973:43;12068:4;12062;12052:21;12111:15;12105:22;12201:11;12193:6;12190:23;12187:146;;;12245:10;12239:4;12232:24;12314:4;12308;12301:18;12187:146;12442:6;12429:11;12425:24;12408:15;12401:49;12525:2;12519:4;12512:16;12578:4;12572;12562:21;12828:6;12812:13;12806:20;12802:33;12787:13;12780:56;12904:6;12898:4;12891:20;12998:4;12992:11;12988:2;12984:20;12976:5;12972:2;12968:14;12941:25;12935:4;12929;12924:81;11090:1925;;;;;;13024:37;13044:4;13050:2;13054:6;13024:19;:37::i;:::-;13078:4;13071:11;;10886:2203;;;;;:::o;6019:110:1:-;6088:6;6113:9;6106:16;;6019:110;:::o;6700:1058:2:-;6788:4;6945:7;6939:4;6932:21;6979:20;6973:4;6966:34;7026:8;7020:4;7013:22;7085:4;7079;7069:21;7132:13;7126:20;7239:10;7222:15;7218:32;7322:15;7306:14;7303:35;7300:156;;;7370:10;7364:4;7357:24;7437:4;7431;7424:18;7300:156;7535:14;7520:13;7513:37;7618:14;7612:4;7605:28;7714:4;7708:11;7704:2;7700:20;7690:8;7663:25;7657:4;7651;7646:75;6856:875;;;7747:4;7740:11;;6700:1058;;;;:::o;5424:364:1:-;5640:15;5636:20;5630:27;5620:8;5617:41;5607:165;;5691:10;5685:4;5678:24;5753:4;5747;5740:18;5607:165;5424:364::o;4871:495::-;5022:15;5018:20;5119:8;5115:2;5111:17;5107:2;5103:26;5091:38;;5265:8;5253:9;5247:16;5207:38;5204:1;5201;5196:78;5341:8;5330:9;5323:27;4987:373;4871:495;:::o;7890:1035:2:-;7978:4;8135:7;8129:4;8122:21;8169:20;8163:4;8156:34;8216:8;8210:4;8203:22;8275:4;8269;8259:21;8322:13;8316:20;8413:10;8396:15;8393:31;8390:153;;;8456:10;8450:4;8443:24;8524:4;8518;8511:18;8390:153;8656:10;8639:15;8635:32;8702:14;8687:13;8680:37;8785:14;8779:4;8772:28;8881:4;8875:11;8871:2;8867:20;8857:8;8830:25;8824:4;8818;8813:75;8046:852;;;8914:4;8907:11;;7890:1035;;;;:::o;9112:1406::-;9182:4;9198:44;9219:10;9231:2;9235:6;9198:20;:44::i;:::-;9391:18;9385:4;9378:32;9436:8;9430:4;9423:22;9497:4;9491;9481:21;9540:15;9534:22;9630:11;9622:6;9619:23;9616:146;;;9674:10;9668:4;9661:24;9743:4;9737;9730:18;9616:146;9871:6;9858:11;9854:24;9837:15;9830:49;9954:2;9948:4;9941:16;10007:4;10001;9991:21;10257:6;10241:13;10235:20;10231:33;10216:13;10209:56;10333:6;10327:4;10320:20;10421:4;10415:11;10411:2;10407:20;10397:8;10370:25;10364:4;10358;10353:75;9304:1134;;;10447:43;10467:10;10479:2;10483:6;10447:19;:43::i;:::-;10507:4;10500:11;;9112:1406;;;;:::o;23377:959::-;23618:7;23612:4;23605:21;23652:20;23646:4;23639:34;23699:5;23693:4;23686:19;23755:4;23749;23739:21;23797:13;23791:20;23919:1;23915:6;23903:10;23900:22;23890:430;;24037:10;24029:6;24026:22;24023:159;;;24084:10;24078:4;24071:24;24159:4;24153;24146:18;24023:159;24298:6;24286:10;24282:23;24267:13;24260:46;23890:430;23529:801;;23377:959;;;:::o;21607:1396::-;21695:38;21716:4;21722:2;21726:6;21695:20;:38::i;:::-;21830:4;21826:2;21822:13;21931:18;21924:5;21921:29;21915:4;21908:43;22003:4;21997;21987:21;22046:15;22040:22;22136:11;22128:6;22125:23;22122:146;;;22180:10;22174:4;22167:24;22249:4;22243;22236:18;22122:146;22377:6;22364:11;22360:24;22343:15;22336:49;22460:2;22454:4;22447:16;22513:4;22507;22497:21;22763:6;22747:13;22741:20;22737:33;22722:13;22715:56;22839:6;22833:4;22826:20;22933:4;22927:11;22923:2;22919:20;22911:5;22907:2;22903:14;22876:25;22870:4;22864;22859:81;21795:1155;;;;22959:37;22979:4;22985:2;22989:6;22959:19;:37::i;:::-;21607:1396;;;:::o;25445:91::-;;;;:::o;25648:90::-;;;;:::o;7:99:3:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:118::-;5710:24;5728:5;5710:24;:::i;:::-;5705:3;5698:37;5623:118;;:::o;5747:222::-;5840:4;5878:2;5867:9;5863:18;5855:26;;5891:71;5959:1;5948:9;5944:17;5935:6;5891:71;:::i;:::-;5747:222;;;;:::o;5975:118::-;6046:22;6062:5;6046:22;:::i;:::-;6039:5;6036:33;6026:61;;6083:1;6080;6073:12;6026:61;5975:118;:::o;6099:135::-;6143:5;6181:6;6168:20;6159:29;;6197:31;6222:5;6197:31;:::i;:::-;6099:135;;;;:::o;6240:122::-;6313:24;6331:5;6313:24;:::i;:::-;6306:5;6303:35;6293:63;;6352:1;6349;6342:12;6293:63;6240:122;:::o;6368:139::-;6414:5;6452:6;6439:20;6430:29;;6468:33;6495:5;6468:33;:::i;:::-;6368:139;;;;:::o;6513:1199::-;6624:6;6632;6640;6648;6656;6664;6672;6721:3;6709:9;6700:7;6696:23;6692:33;6689:120;;;6728:79;;:::i;:::-;6689:120;6848:1;6873:53;6918:7;6909:6;6898:9;6894:22;6873:53;:::i;:::-;6863:63;;6819:117;6975:2;7001:53;7046:7;7037:6;7026:9;7022:22;7001:53;:::i;:::-;6991:63;;6946:118;7103:2;7129:53;7174:7;7165:6;7154:9;7150:22;7129:53;:::i;:::-;7119:63;;7074:118;7231:2;7257:53;7302:7;7293:6;7282:9;7278:22;7257:53;:::i;:::-;7247:63;;7202:118;7359:3;7386:51;7429:7;7420:6;7409:9;7405:22;7386:51;:::i;:::-;7376:61;;7330:117;7486:3;7513:53;7558:7;7549:6;7538:9;7534:22;7513:53;:::i;:::-;7503:63;;7457:119;7615:3;7642:53;7687:7;7678:6;7667:9;7663:22;7642:53;:::i;:::-;7632:63;;7586:119;6513:1199;;;;;;;;;;:::o;7718:474::-;7786:6;7794;7843:2;7831:9;7822:7;7818:23;7814:32;7811:119;;;7849:79;;:::i;:::-;7811:119;7969:1;7994:53;8039:7;8030:6;8019:9;8015:22;7994:53;:::i;:::-;7984:63;;7940:117;8096:2;8122:53;8167:7;8158:6;8147:9;8143:22;8122:53;:::i;:::-;8112:63;;8067:118;7718:474;;;;;:::o;8198:180::-;8246:77;8243:1;8236:88;8343:4;8340:1;8333:15;8367:4;8364:1;8357:15;8384:320;8428:6;8465:1;8459:4;8455:12;8445:22;;8512:1;8506:4;8502:12;8533:18;8523:81;;8589:4;8581:6;8577:17;8567:27;;8523:81;8651:2;8643:6;8640:14;8620:18;8617:38;8614:84;;8670:18;;:::i;:::-;8614:84;8435:269;8384:320;;;:::o;8710:157::-;8850:9;8846:1;8838:6;8834:14;8827:33;8710:157;:::o;8873:365::-;9015:3;9036:66;9100:1;9095:3;9036:66;:::i;:::-;9029:73;;9111:93;9200:3;9111:93;:::i;:::-;9229:2;9224:3;9220:12;9213:19;;8873:365;;;:::o;9244:419::-;9410:4;9448:2;9437:9;9433:18;9425:26;;9497:9;9491:4;9487:20;9483:1;9472:9;9468:17;9461:47;9525:131;9651:4;9525:131;:::i;:::-;9517:139;;9244:419;;;:::o;9669:180::-;9717:77;9714:1;9707:88;9814:4;9811:1;9804:15;9838:4;9835:1;9828:15;9855:191;9895:3;9914:20;9932:1;9914:20;:::i;:::-;9909:25;;9948:20;9966:1;9948:20;:::i;:::-;9943:25;;9991:1;9988;9984:9;9977:16;;10012:3;10009:1;10006:10;10003:36;;;10019:18;;:::i;:::-;10003:36;9855:191;;;;:::o;10052:161::-;10192:13;10188:1;10180:6;10176:14;10169:37;10052:161;:::o;10219:366::-;10361:3;10382:67;10446:2;10441:3;10382:67;:::i;:::-;10375:74;;10458:93;10547:3;10458:93;:::i;:::-;10576:2;10571:3;10567:12;10560:19;;10219:366;;;:::o;10591:419::-;10757:4;10795:2;10784:9;10780:18;10772:26;;10844:9;10838:4;10834:20;10830:1;10819:9;10815:17;10808:47;10872:131;10998:4;10872:131;:::i;:::-;10864:139;;10591:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1223600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"activate()": "101365",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24841",
								"balanceOf(address)": "2897",
								"cancelOwnershipHandover()": "6385",
								"completeOwnershipHandover(address)": "35595",
								"decimals()": "2525",
								"decreaseAllowance(address,uint256)": "27155",
								"directSpendAllowance(address,address,uint256)": "infinite",
								"directTransfer(address,address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "27134",
								"minable()": "2491",
								"mintSupplyFromMinedLP(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2853",
								"owner()": "2556",
								"ownershipHandoverExpiresAt(address)": "2918",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "11058",
								"requestOwnershipHandover()": "23611",
								"symbol()": "infinite",
								"totalSupply()": "2527",
								"transfer(address,uint256)": "51498",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28447"
							},
							"internal": {
								"_brutalized(address)": "39"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 141,
									"end": 2810,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 206,
									"end": 211,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 211,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 211,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 184,
									"end": 211,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 184,
									"end": 211,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 211,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 218,
									"end": 250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 218,
									"end": 250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 218,
									"end": 250,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 218,
									"end": 250,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 218,
									"end": 250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "PUSH",
									"source": 0,
									"value": "506F6E6430780000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 218,
									"end": 250,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 218,
									"end": 250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 218,
									"end": 250,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 218,
									"end": 250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 218,
									"end": 250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 218,
									"end": 250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 257,
									"end": 289,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 257,
									"end": 289,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 257,
									"end": 289,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 257,
									"end": 289,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 257,
									"end": 289,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "PUSH",
									"source": 0,
									"value": "504E445800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 289,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 257,
									"end": 289,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 257,
									"end": 289,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 257,
									"end": 289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 257,
									"end": 289,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 257,
									"end": 289,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 323,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 296,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 296,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 296,
									"end": 325,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 296,
									"end": 325,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 296,
									"end": 325,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 296,
									"end": 325,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 362,
									"end": 395,
									"name": "PUSH",
									"source": 0,
									"value": "14BDDAB3E51A57CFF87A50000000"
								},
								{
									"begin": 332,
									"end": 395,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 332,
									"end": 395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "79"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 3,
									"value": "79"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 2810,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f2249e1f6fb24f1983649c95c3d44cd729adecbec5dab63cb29c695e3098ac8b64736f6c63430008120033",
									".code": [
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "791879EF"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "D30ED3B3"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "F04E283E"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "F04E283E"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "F83D1791"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "FEE81CF4"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "D30ED3B3"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "791879EF"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "5372B2F6"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "5372B2F6"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "54D1F13D"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "F15F4C0"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "25692962"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 2810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 431,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 431,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5995,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5995,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5995,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2422,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2177,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2177,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2177,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2422,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2177,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2422,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4847,
											"end": 5042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4847,
											"end": 5042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1261,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1261,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1261,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7162,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7162,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 7162,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7162,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 7162,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7779,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 651,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 651,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 651,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 17096,
											"end": 18158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 17096,
											"end": 18158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1501,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1501,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1501,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2428,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2428,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7861,
											"end": 8317,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7861,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7861,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 7861,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8317,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7861,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8317,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5108,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5108,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5108,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 7003,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6903,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6903,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6903,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 7003,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6903,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 7003,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 211,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 184,
											"end": 211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 184,
											"end": 211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 13503,
											"end": 13843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 13503,
											"end": 13843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 13503,
											"end": 13843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9549,
											"end": 9740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9549,
											"end": 9740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 539,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 539,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 539,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1736,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1736,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1736,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1105,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1105,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1105,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 920,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 920,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 14027,
											"end": 17037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 14027,
											"end": 17037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5489,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5489,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5489,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 8504,
											"end": 9212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8504,
											"end": 9212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 6489,
											"end": 6838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6489,
											"end": 6838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 759,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 759,
											"end": 912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 759,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 759,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 759,
											"end": 912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 759,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 759,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 759,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 759,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 9843,
											"end": 10278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 9843,
											"end": 10278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 9843,
											"end": 10278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 431,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 431,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 485,
											"end": 498,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 518,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 511,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 511,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 511,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6073,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6228,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6222,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6215,
											"end": 6236,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 6282,
											"name": "PUSH",
											"source": 2,
											"value": "7F5E9F20"
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6309,
											"end": 6317,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6303,
											"end": 6307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6296,
											"end": 6318,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6358,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 6348,
											"end": 6352,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 6338,
											"end": 6359,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6331,
											"end": 6368,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6436,
											"end": 6442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "2C"
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6516,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6510,
											"end": 6530,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6500,
											"end": 6508,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6473,
											"end": 6498,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6456,
											"end": 6531,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6557,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6550,
											"end": 6561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6550,
											"end": 6561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2422,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2177,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2225,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2309,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2365,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2377,
											"end": 2387,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2365,
											"end": 2388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2388,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2365,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "1A784379D99DB42000000"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2359,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2404,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2359,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4899,
											"end": 4913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "PUSH",
											"source": 2,
											"value": "5345CDF77EB68F44C"
										},
										{
											"begin": 5001,
											"end": 5026,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4991,
											"end": 5026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4991,
											"end": 5026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 5042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1442,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1454,
											"end": 1458,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1442,
											"end": 1459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1459,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1442,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1461,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1461,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1423,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1485,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1423,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7162,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7162,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 7291,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7291,
											"end": 7319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7319,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 7291,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7319,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7273,
											"end": 7319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7288,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7487,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "389A75E1"
										},
										{
											"begin": 7481,
											"end": 7485,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 7474,
											"end": 7507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7537,
											"end": 7545,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7580,
											"end": 7584,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 7570,
											"end": 7591,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7563,
											"end": 7601,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7748,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7738,
											"name": "PUSH",
											"source": 1,
											"value": "DBF36A107DA19E49527A7176A1BABF963B4B0FF8CDE35EE35D6CD8F1F9AC7E1D"
										},
										{
											"begin": 7690,
											"end": 7691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7749,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 651,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 651,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 734,
											"end": 743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 734,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 734,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 734,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 734,
											"end": 743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 734,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 727,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17153,
											"end": 17167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17261,
											"end": 17265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17255,
											"end": 17266,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17245,
											"end": 17266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17245,
											"end": 17266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17447,
											"end": 17453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 17447,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 17447,
											"end": 17453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17447,
											"end": 17453,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 17447,
											"end": 17453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17431,
											"end": 17455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17431,
											"end": 17455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17431,
											"end": 17455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17431,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17431,
											"end": 17455,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17412,
											"end": 17455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17412,
											"end": 17455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17540,
											"end": 17546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17726,
											"end": 17792,
											"name": "PUSH",
											"source": 2,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 17723,
											"end": 17724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17716,
											"end": 17793,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17827,
											"end": 17835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17820,
											"end": 17824,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17817,
											"end": 17818,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17813,
											"end": 17825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17806,
											"end": 17836,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17946,
											"end": 18012,
											"name": "PUSH",
											"source": 2,
											"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
										},
										{
											"begin": 17939,
											"end": 17943,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17936,
											"end": 17937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17932,
											"end": 17944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 18013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18047,
											"end": 18056,
											"name": "CHAINID",
											"source": 2
										},
										{
											"begin": 18040,
											"end": 18044,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 18037,
											"end": 18038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18033,
											"end": 18045,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18026,
											"end": 18057,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18091,
											"end": 18100,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 18084,
											"end": 18088,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 18081,
											"end": 18082,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18077,
											"end": 18089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18070,
											"end": 18101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18137,
											"end": 18141,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 18134,
											"end": 18135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18124,
											"end": 18142,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18114,
											"end": 18142,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 18114,
											"end": 18142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17517,
											"end": 18152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17517,
											"end": 18152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 18158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1687,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1699,
											"end": 1706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1687,
											"end": 1707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1707,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1687,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1719,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1663,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1663,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2525,
											"end": 2540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2517,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2571,
											"end": 2598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2581,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2571,
											"end": 2598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2563,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2563,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2636,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2636,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2636,
											"end": 2649,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2636,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2694,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2679,
											"end": 2694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2679,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2694,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2679,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2730,
											"end": 2740,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2707,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2707,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2785,
											"end": 2790,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2773,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2767,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2799,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2767,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7861,
											"end": 8317,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 7861,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8063,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "389A75E1"
										},
										{
											"begin": 8057,
											"end": 8061,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 8050,
											"end": 8083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8117,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8148,
											"end": 8152,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 8138,
											"end": 8159,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8300,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8290,
											"name": "PUSH",
											"source": 1,
											"value": "FA7B8EAB7DA67F412CC9575ED43464468F9BFBAE89D1675917346CA6D8FE3C92"
										},
										{
											"begin": 8243,
											"end": 8244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8240,
											"end": 8241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8235,
											"end": 8301,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5171,
											"end": 5185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "PUSH",
											"source": 2,
											"value": "87A211A2"
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 5263,
											"end": 5295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5327,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5370,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 5356,
											"end": 5377,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5350,
											"end": 5378,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5108,
											"end": 5394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 7003,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6903,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 10667,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 10667,
											"end": 10680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10680,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 10667,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6975,
											"end": 6996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6993,
											"end": 6994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6975,
											"end": 6996,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6975,
											"end": 6996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6975,
											"end": 6996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 7003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 211,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 184,
											"end": 211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13563,
											"end": 13577,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13726,
											"end": 13743,
											"name": "PUSH",
											"source": 2,
											"value": "38377508"
										},
										{
											"begin": 13720,
											"end": 13724,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 13713,
											"end": 13744,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13770,
											"end": 13775,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13764,
											"end": 13768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13757,
											"end": 13776,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13821,
											"end": 13825,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13815,
											"end": 13819,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 13805,
											"end": 13826,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13799,
											"end": 13827,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13789,
											"end": 13827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13789,
											"end": 13827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9707,
											"end": 9722,
											"name": "PUSH",
											"source": 1,
											"value": "8B78C6D8"
										},
										{
											"begin": 9703,
											"end": 9723,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9697,
											"end": 9724,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 539,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 628,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 621,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 621,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1869,
											"end": 1873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1922,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1934,
											"end": 1941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1922,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1942,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1922,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1898,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1955,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1898,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1223,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1223,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1223,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1208,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1247,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1208,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1040,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1040,
											"end": 1058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1040,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1060,
											"end": 1080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1080,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1060,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1024,
											"end": 1089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1089,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1024,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14226,
											"end": 14249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14252,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 14252,
											"end": 14268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 14252,
											"end": 14270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14252,
											"end": 14270,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 14252,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14226,
											"end": 14270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14226,
											"end": 14270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14400,
											"end": 14411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14513,
											"end": 14521,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14500,
											"end": 14511,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 14497,
											"end": 14522,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 14494,
											"end": 14636,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14494,
											"end": 14636,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 14494,
											"end": 14636,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14554,
											"end": 14564,
											"name": "PUSH",
											"source": 2,
											"value": "1A15A3CC"
										},
										{
											"begin": 14548,
											"end": 14552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14541,
											"end": 14565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14617,
											"end": 14621,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14611,
											"end": 14615,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 14604,
											"end": 14622,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14494,
											"end": 14636,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 14494,
											"end": 14636,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14714,
											"end": 14719,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14710,
											"end": 14712,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14706,
											"end": 14720,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14702,
											"end": 14704,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14698,
											"end": 14721,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 14689,
											"end": 14721,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 14689,
											"end": 14721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14761,
											"end": 14768,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14757,
											"end": 14759,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14753,
											"end": 14769,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14749,
											"end": 14751,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14745,
											"end": 14770,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 14734,
											"end": 14770,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 14734,
											"end": 14770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14854,
											"end": 14871,
											"name": "PUSH",
											"source": 2,
											"value": "38377508"
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 14841,
											"end": 14872,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14898,
											"end": 14903,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14892,
											"end": 14896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14904,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14950,
											"end": 14954,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14944,
											"end": 14948,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 14934,
											"end": 14955,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14986,
											"end": 15002,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15103,
											"end": 15104,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15091,
											"end": 15101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15087,
											"end": 15105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15076,
											"end": 15085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15069,
											"end": 15106,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15325,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 15322,
											"end": 15323,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15315,
											"end": 15392,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15426,
											"end": 15431,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 15419,
											"end": 15423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15416,
											"end": 15417,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15405,
											"end": 15432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15466,
											"end": 15473,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15459,
											"end": 15463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15456,
											"end": 15457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15452,
											"end": 15464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15445,
											"end": 15474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15508,
											"end": 15513,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15501,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15498,
											"end": 15499,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15494,
											"end": 15506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15487,
											"end": 15514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15548,
											"end": 15558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15541,
											"end": 15545,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 15538,
											"end": 15539,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15534,
											"end": 15546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15527,
											"end": 15559,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15593,
											"end": 15601,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15590,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 15583,
											"end": 15584,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15579,
											"end": 15591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15572,
											"end": 15602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15664,
											"end": 15670,
											"name": "PUSH",
											"source": 2,
											"value": "1901"
										},
										{
											"begin": 15661,
											"end": 15662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15654,
											"end": 15671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15697,
											"end": 15712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15691,
											"end": 15695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15684,
											"end": 15713,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15752,
											"end": 15756,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 15749,
											"end": 15750,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15739,
											"end": 15757,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15733,
											"end": 15737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15726,
											"end": 15758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15844,
											"end": 15848,
											"name": "PUSH",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 15838,
											"end": 15842,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 15828,
											"end": 15849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15825,
											"end": 15826,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15818,
											"end": 15850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15887,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15880,
											"end": 15884,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 15876,
											"end": 15888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15874,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15889,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15915,
											"end": 15916,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15909,
											"end": 15913,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15902,
											"end": 15917,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15943,
											"end": 15944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15937,
											"end": 15941,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15930,
											"end": 15945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15998,
											"end": 16002,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15992,
											"end": 15996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 15983,
											"end": 15984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15980,
											"end": 15981,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15973,
											"end": 15978,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15962,
											"end": 16003,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 15958,
											"end": 16004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16423,
											"end": 16428,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 16404,
											"end": 16420,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16398,
											"end": 16421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16395,
											"end": 16429,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16385,
											"end": 16544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 16385,
											"end": 16544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16462,
											"end": 16472,
											"name": "PUSH",
											"source": 2,
											"value": "DDAFBAEF"
										},
										{
											"begin": 16456,
											"end": 16460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16449,
											"end": 16473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16525,
											"end": 16529,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16519,
											"end": 16523,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 16512,
											"end": 16530,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16385,
											"end": 16544,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 16385,
											"end": 16544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16720,
											"end": 16727,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16697,
											"end": 16717,
											"name": "PUSH",
											"source": 2,
											"value": "7F5E9F20"
										},
										{
											"begin": 16692,
											"end": 16695,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 16688,
											"end": 16718,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16685,
											"end": 16728,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 16679,
											"end": 16683,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16672,
											"end": 16729,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16777,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16765,
											"end": 16769,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 16759,
											"end": 16763,
											"name": "PUSH",
											"source": 2,
											"value": "2C"
										},
										{
											"begin": 16749,
											"end": 16770,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16742,
											"end": 16778,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16892,
											"end": 16899,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16885,
											"end": 16890,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 16858,
											"end": 16883,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16852,
											"end": 16856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16845,
											"end": 16849,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16842,
											"end": 16843,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16838,
											"end": 16850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16833,
											"end": 16900,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 16926,
											"end": 16927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16920,
											"end": 16924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16913,
											"end": 16928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16990,
											"end": 16991,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 16988,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16977,
											"end": 16992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14332,
											"end": 17031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14332,
											"end": 17031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14332,
											"end": 17031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14332,
											"end": 17031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14027,
											"end": 17037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 5718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5744,
											"end": 5764,
											"name": "PUSH",
											"source": 2,
											"value": "7F5E9F20"
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 5796,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5785,
											"end": 5789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5846,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5836,
											"end": 5840,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 5826,
											"end": 5847,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5848,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5848,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5848,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10667,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 10667,
											"end": 10680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10680,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10667,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "389A75E1"
										},
										{
											"begin": 8732,
											"end": 8736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 8725,
											"end": 8758,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8796,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8846,
											"end": 8850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8840,
											"end": 8844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 8830,
											"end": 8851,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8964,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8965,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 8930,
											"end": 8966,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 9084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 9084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 8927,
											"end": 9084,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8998,
											"end": 9008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6F5E8818"
										},
										{
											"begin": 8992,
											"end": 8996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 9009,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9065,
											"end": 9069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9059,
											"end": 9063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 9052,
											"end": 9070,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 9084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 8927,
											"end": 9084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9147,
											"end": 9159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9163,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 9173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9182,
											"end": 9205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9192,
											"end": 9204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9182,
											"end": 9191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 9182,
											"end": 9205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9182,
											"end": 9205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9182,
											"end": 9205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 9212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10667,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 10667,
											"end": 10680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10680,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10667,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6669,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6657,
											"end": 6659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6653,
											"end": 6670,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6643,
											"end": 6793,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "7448FBAE"
										},
										{
											"begin": 6697,
											"end": 6701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6690,
											"end": 6714,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6768,
											"end": 6772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 6761,
											"end": 6779,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6643,
											"end": 6793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6822,
											"end": 6830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6812,
											"end": 6831,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6812,
											"end": 6831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 912,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 759,
											"end": 912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 851,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 861,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 873,
											"end": 877,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 861,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 861,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 861,
											"end": 878,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 861,
											"end": 878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 880,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 880,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 880,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 880,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 897,
											"end": 903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 851,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 851,
											"end": 904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 851,
											"end": 904,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 851,
											"end": 904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9962,
											"end": 9976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10132,
											"name": "PUSH",
											"source": 1,
											"value": "389A75E1"
										},
										{
											"begin": 10107,
											"end": 10111,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 10100,
											"end": 10133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10146,
											"end": 10172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10256,
											"end": 10260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10250,
											"end": 10254,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 10240,
											"end": 10261,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10262,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10224,
											"end": 10262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10224,
											"end": 10262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 10278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1971,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2144,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 2137,
											"end": 2152,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 2171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18562,
											"end": 19734,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 18562,
											"end": 19734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18632,
											"end": 18676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 18661,
											"end": 18662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18665,
											"end": 18667,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18669,
											"end": 18675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18632,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 18632,
											"end": 18676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18632,
											"end": 18676,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 18632,
											"end": 18676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18783,
											"end": 18801,
											"name": "PUSH",
											"source": 2,
											"value": "5345CDF77EB68F44C"
										},
										{
											"begin": 18777,
											"end": 18802,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18862,
											"end": 18868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18843,
											"end": 18860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18839,
											"end": 18869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18959,
											"end": 18976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18941,
											"end": 18957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18938,
											"end": 18977,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 18935,
											"end": 19097,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18935,
											"end": 19097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 18935,
											"end": 19097,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19009,
											"end": 19019,
											"name": "PUSH",
											"source": 2,
											"value": "E5CFE957"
										},
										{
											"begin": 19003,
											"end": 19007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18996,
											"end": 19020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19078,
											"end": 19082,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19072,
											"end": 19076,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18935,
											"end": 19097,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 18935,
											"end": 19097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19184,
											"end": 19200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19164,
											"end": 19182,
											"name": "PUSH",
											"source": 2,
											"value": "5345CDF77EB68F44C"
										},
										{
											"begin": 19157,
											"end": 19201,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19287,
											"end": 19305,
											"name": "PUSH",
											"source": 2,
											"value": "87A211A2"
										},
										{
											"begin": 19281,
											"end": 19285,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 19274,
											"end": 19306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19332,
											"end": 19334,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19326,
											"end": 19330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19319,
											"end": 19335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19385,
											"end": 19389,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19379,
											"end": 19383,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 19369,
											"end": 19390,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19501,
											"end": 19507,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19485,
											"end": 19498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19479,
											"end": 19499,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19475,
											"end": 19508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19460,
											"end": 19473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19453,
											"end": 19509,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19577,
											"end": 19583,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19571,
											"end": 19575,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19564,
											"end": 19584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19658,
											"end": 19662,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 19652,
											"end": 19663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19648,
											"end": 19650,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 19644,
											"end": 19664,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 19641,
											"end": 19642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19614,
											"end": 19639,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19608,
											"end": 19612,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19602,
											"end": 19606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19597,
											"end": 19665,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 18738,
											"end": 19675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18738,
											"end": 19675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18738,
											"end": 19675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19684,
											"end": 19727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 19712,
											"end": 19713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19716,
											"end": 19718,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19720,
											"end": 19726,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19684,
											"end": 19703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 19684,
											"end": 19727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19684,
											"end": 19727,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 19684,
											"end": 19727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18562,
											"end": 19734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18562,
											"end": 19734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18562,
											"end": 19734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 13089,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 10886,
											"end": 13089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10974,
											"end": 10978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10990,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 11011,
											"end": 11015,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11017,
											"end": 11019,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11021,
											"end": 11027,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10990,
											"end": 11028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11028,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10990,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11125,
											"end": 11129,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11121,
											"end": 11123,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11117,
											"end": 11130,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 11218,
											"end": 11226,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 11212,
											"end": 11216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11205,
											"end": 11227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11263,
											"end": 11283,
											"name": "PUSH",
											"source": 2,
											"value": "7F5E9F20"
										},
										{
											"begin": 11256,
											"end": 11261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11253,
											"end": 11284,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11247,
											"end": 11251,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 11240,
											"end": 11285,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11335,
											"end": 11339,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 11329,
											"end": 11333,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 11319,
											"end": 11340,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11377,
											"end": 11390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11371,
											"end": 11391,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11499,
											"end": 11500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11495,
											"end": 11501,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11483,
											"end": 11493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11480,
											"end": 11502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11470,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 11470,
											"end": 11900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11617,
											"end": 11627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11609,
											"end": 11615,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11606,
											"end": 11628,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11603,
											"end": 11762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11603,
											"end": 11762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 11603,
											"end": 11762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11664,
											"end": 11674,
											"name": "PUSH",
											"source": 2,
											"value": "13BE252B"
										},
										{
											"begin": 11658,
											"end": 11662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11651,
											"end": 11675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11739,
											"end": 11743,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11733,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 11726,
											"end": 11744,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11603,
											"end": 11762,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 11603,
											"end": 11762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11878,
											"end": 11884,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11866,
											"end": 11876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11862,
											"end": 11885,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11847,
											"end": 11860,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11886,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11470,
											"end": 11900,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 11470,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "PUSH",
											"source": 2,
											"value": "87A211A2"
										},
										{
											"begin": 11989,
											"end": 11994,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12015,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11980,
											"end": 11984,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 11973,
											"end": 12016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12068,
											"end": 12072,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12062,
											"end": 12066,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 12052,
											"end": 12073,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12111,
											"end": 12126,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12201,
											"end": 12212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12193,
											"end": 12199,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12190,
											"end": 12213,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 12187,
											"end": 12333,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12187,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 12187,
											"end": 12333,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12245,
											"end": 12255,
											"name": "PUSH",
											"source": 2,
											"value": "F4D678B8"
										},
										{
											"begin": 12239,
											"end": 12243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12232,
											"end": 12256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12314,
											"end": 12318,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12308,
											"end": 12312,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 12301,
											"end": 12319,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12187,
											"end": 12333,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 12187,
											"end": 12333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12448,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12429,
											"end": 12440,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12425,
											"end": 12449,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12401,
											"end": 12450,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12525,
											"end": 12527,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12519,
											"end": 12523,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12512,
											"end": 12528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12578,
											"end": 12582,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12572,
											"end": 12576,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 12562,
											"end": 12583,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12828,
											"end": 12834,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12812,
											"end": 12825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12806,
											"end": 12826,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12802,
											"end": 12835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12787,
											"end": 12800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12780,
											"end": 12836,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12904,
											"end": 12910,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12898,
											"end": 12902,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12891,
											"end": 12911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12998,
											"end": 13002,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 12992,
											"end": 13003,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12988,
											"end": 12990,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12984,
											"end": 13004,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 12976,
											"end": 12981,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12972,
											"end": 12974,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12968,
											"end": 12982,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 12941,
											"end": 12966,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12935,
											"end": 12939,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12924,
											"end": 13005,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11090,
											"end": 13015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11090,
											"end": 13015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11090,
											"end": 13015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11090,
											"end": 13015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11090,
											"end": 13015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11090,
											"end": 13015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13024,
											"end": 13061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 13044,
											"end": 13048,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13052,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13024,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 13024,
											"end": 13061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13024,
											"end": 13061,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 13024,
											"end": 13061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13078,
											"end": 13082,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13071,
											"end": 13082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13071,
											"end": 13082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 13089,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 13089,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 13089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 13089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 13089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 13089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6129,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6019,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6088,
											"end": 6094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6122,
											"name": "PUSH",
											"source": 1,
											"value": "2A300"
										},
										{
											"begin": 6106,
											"end": 6122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6700,
											"end": 7758,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6700,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6788,
											"end": 6792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6945,
											"end": 6952,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6939,
											"end": 6943,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6932,
											"end": 6953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6979,
											"end": 6999,
											"name": "PUSH",
											"source": 2,
											"value": "7F5E9F20"
										},
										{
											"begin": 6973,
											"end": 6977,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 6966,
											"end": 7000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7026,
											"end": 7034,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7020,
											"end": 7024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7013,
											"end": 7035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 7079,
											"end": 7083,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 7069,
											"end": 7090,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7132,
											"end": 7145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7126,
											"end": 7146,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7239,
											"end": 7249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7222,
											"end": 7237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7218,
											"end": 7250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7322,
											"end": 7337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7306,
											"end": 7320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7303,
											"end": 7338,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 7300,
											"end": 7456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7370,
											"end": 7380,
											"name": "PUSH",
											"source": 2,
											"value": "F9067066"
										},
										{
											"begin": 7364,
											"end": 7368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7441,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7456,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 7300,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7549,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7533,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7612,
											"end": 7616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7605,
											"end": 7633,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "PUSH",
											"source": 2,
											"value": "2C"
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7700,
											"end": 7720,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7690,
											"end": 7698,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7688,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7657,
											"end": 7661,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7651,
											"end": 7655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7721,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6856,
											"end": 7731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6856,
											"end": 7731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6856,
											"end": 7731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7740,
											"end": 7751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7740,
											"end": 7751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 7758,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 7758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 7758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 7758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 7758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5788,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5424,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5655,
											"name": "PUSH",
											"source": 1,
											"value": "8B78C6D8"
										},
										{
											"begin": 5636,
											"end": 5656,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5657,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5628,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5658,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5607,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5607,
											"end": 5772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5701,
											"name": "PUSH",
											"source": 1,
											"value": "82B42900"
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5753,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5747,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5607,
											"end": 5772,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5607,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5366,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4871,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5037,
											"name": "PUSH",
											"source": 1,
											"value": "8B78C6D8"
										},
										{
											"begin": 5018,
											"end": 5038,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5117,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5111,
											"end": 5128,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5103,
											"end": 5129,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 5204,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5274,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 8925,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 7890,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7978,
											"end": 7982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8133,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8169,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "7F5E9F20"
										},
										{
											"begin": 8163,
											"end": 8167,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 8156,
											"end": 8190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8216,
											"end": 8224,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8203,
											"end": 8225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 8269,
											"end": 8273,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 8259,
											"end": 8280,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8322,
											"end": 8335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8316,
											"end": 8336,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8413,
											"end": 8423,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8396,
											"end": 8411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8390,
											"end": 8543,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8390,
											"end": 8543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 8390,
											"end": 8543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8456,
											"end": 8466,
											"name": "PUSH",
											"source": 2,
											"value": "8301AB38"
										},
										{
											"begin": 8450,
											"end": 8454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8443,
											"end": 8467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8524,
											"end": 8528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8518,
											"end": 8522,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 8511,
											"end": 8529,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8390,
											"end": 8543,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 8390,
											"end": 8543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8656,
											"end": 8666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8639,
											"end": 8654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8667,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8687,
											"end": 8700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8680,
											"end": 8717,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8785,
											"end": 8799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8779,
											"end": 8783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8772,
											"end": 8800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 2,
											"value": "2C"
										},
										{
											"begin": 8875,
											"end": 8886,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8871,
											"end": 8873,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8867,
											"end": 8887,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8857,
											"end": 8865,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8830,
											"end": 8855,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8824,
											"end": 8828,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8888,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8914,
											"end": 8918,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8907,
											"end": 8918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8907,
											"end": 8918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7890,
											"end": 8925,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7890,
											"end": 8925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7890,
											"end": 8925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7890,
											"end": 8925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7890,
											"end": 8925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 10518,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 9112,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9186,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9219,
											"end": 9229,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 9231,
											"end": 9233,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9241,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9198,
											"end": 9242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9242,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9198,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "PUSH",
											"source": 2,
											"value": "87A211A2"
										},
										{
											"begin": 9385,
											"end": 9389,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 9378,
											"end": 9410,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9436,
											"end": 9444,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 9430,
											"end": 9434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9423,
											"end": 9445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9497,
											"end": 9501,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9491,
											"end": 9495,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 9481,
											"end": 9502,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9555,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9630,
											"end": 9641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9628,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9619,
											"end": 9642,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 9762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9616,
											"end": 9762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9674,
											"end": 9684,
											"name": "PUSH",
											"source": 2,
											"value": "F4D678B8"
										},
										{
											"begin": 9668,
											"end": 9672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9661,
											"end": 9685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9743,
											"end": 9747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9737,
											"end": 9741,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 9730,
											"end": 9748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 9762,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9616,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9871,
											"end": 9877,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9858,
											"end": 9869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9837,
											"end": 9852,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9879,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9954,
											"end": 9956,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9948,
											"end": 9952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 9957,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10001,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 9991,
											"end": 10012,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10257,
											"end": 10263,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10241,
											"end": 10254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10235,
											"end": 10255,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10264,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10265,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10339,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10327,
											"end": 10331,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10421,
											"end": 10425,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 10415,
											"end": 10426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10411,
											"end": 10413,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10407,
											"end": 10427,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 10405,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 10370,
											"end": 10395,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10364,
											"end": 10368,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10353,
											"end": 10428,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9304,
											"end": 10438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9304,
											"end": 10438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9304,
											"end": 10438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10467,
											"end": 10477,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 10479,
											"end": 10481,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10483,
											"end": 10489,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10447,
											"end": 10490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10490,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10447,
											"end": 10490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10507,
											"end": 10511,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10500,
											"end": 10511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 10518,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 10518,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 10518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 10518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 10518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23377,
											"end": 24336,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 23377,
											"end": 24336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23618,
											"end": 23625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23612,
											"end": 23616,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23605,
											"end": 23626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23652,
											"end": 23672,
											"name": "PUSH",
											"source": 2,
											"value": "7F5E9F20"
										},
										{
											"begin": 23646,
											"end": 23650,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 23639,
											"end": 23673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23699,
											"end": 23704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23693,
											"end": 23697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23686,
											"end": 23705,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23755,
											"end": 23759,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 23749,
											"end": 23753,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 23739,
											"end": 23760,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 23797,
											"end": 23810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23791,
											"end": 23811,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 23919,
											"end": 23920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23915,
											"end": 23921,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 23903,
											"end": 23913,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23900,
											"end": 23922,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 23890,
											"end": 24320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 23890,
											"end": 24320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 24037,
											"end": 24047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 24029,
											"end": 24035,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24026,
											"end": 24048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 24023,
											"end": 24182,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 24023,
											"end": 24182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 24023,
											"end": 24182,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 24084,
											"end": 24094,
											"name": "PUSH",
											"source": 2,
											"value": "13BE252B"
										},
										{
											"begin": 24078,
											"end": 24082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24071,
											"end": 24095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24159,
											"end": 24163,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 24153,
											"end": 24157,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 24146,
											"end": 24164,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 24023,
											"end": 24182,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 24023,
											"end": 24182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24298,
											"end": 24304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24286,
											"end": 24296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24282,
											"end": 24305,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 24267,
											"end": 24280,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24260,
											"end": 24306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 23890,
											"end": 24320,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 23890,
											"end": 24320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23529,
											"end": 24330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23529,
											"end": 24330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23377,
											"end": 24336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23377,
											"end": 24336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23377,
											"end": 24336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23377,
											"end": 24336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 21607,
											"end": 23003,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 21607,
											"end": 23003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21695,
											"end": 21733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 21716,
											"end": 21720,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21722,
											"end": 21724,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21726,
											"end": 21732,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21695,
											"end": 21715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 21695,
											"end": 21733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 21695,
											"end": 21733,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 21695,
											"end": 21733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21830,
											"end": 21834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21826,
											"end": 21828,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 21822,
											"end": 21835,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 21931,
											"end": 21949,
											"name": "PUSH",
											"source": 2,
											"value": "87A211A2"
										},
										{
											"begin": 21924,
											"end": 21929,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21921,
											"end": 21950,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 21915,
											"end": 21919,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 21908,
											"end": 21951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22003,
											"end": 22007,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21997,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 21987,
											"end": 22008,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22046,
											"end": 22061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 22136,
											"end": 22147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22128,
											"end": 22134,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22125,
											"end": 22148,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 22122,
											"end": 22268,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 22122,
											"end": 22268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 22122,
											"end": 22268,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22180,
											"end": 22190,
											"name": "PUSH",
											"source": 2,
											"value": "F4D678B8"
										},
										{
											"begin": 22174,
											"end": 22178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22167,
											"end": 22191,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22249,
											"end": 22253,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 22243,
											"end": 22247,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 22236,
											"end": 22254,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 22122,
											"end": 22268,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 22122,
											"end": 22268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22377,
											"end": 22383,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 22364,
											"end": 22375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22360,
											"end": 22384,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 22343,
											"end": 22358,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22336,
											"end": 22385,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 22460,
											"end": 22462,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22454,
											"end": 22458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22447,
											"end": 22463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22513,
											"end": 22517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22507,
											"end": 22511,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 22497,
											"end": 22518,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22763,
											"end": 22769,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22747,
											"end": 22760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22741,
											"end": 22761,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 22737,
											"end": 22770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22722,
											"end": 22735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22715,
											"end": 22771,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 22839,
											"end": 22845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22833,
											"end": 22837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22826,
											"end": 22846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22933,
											"end": 22937,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 22927,
											"end": 22938,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 22925,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 22919,
											"end": 22939,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 22911,
											"end": 22916,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22907,
											"end": 22909,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 22903,
											"end": 22917,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 22876,
											"end": 22901,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22870,
											"end": 22874,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22864,
											"end": 22868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22859,
											"end": 22940,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 21795,
											"end": 22950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21795,
											"end": 22950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21795,
											"end": 22950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21795,
											"end": 22950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22959,
											"end": 22996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 22979,
											"end": 22983,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 22985,
											"end": 22987,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 22989,
											"end": 22995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 22959,
											"end": 22978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 22959,
											"end": 22996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22959,
											"end": 22996,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 22959,
											"end": 22996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21607,
											"end": 23003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21607,
											"end": 23003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21607,
											"end": 23003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21607,
											"end": 23003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25445,
											"end": 25536,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 25445,
											"end": 25536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25445,
											"end": 25536,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25445,
											"end": 25536,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25445,
											"end": 25536,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25445,
											"end": 25536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25648,
											"end": 25738,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 25648,
											"end": 25738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25648,
											"end": 25738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25648,
											"end": 25738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25648,
											"end": 25738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25648,
											"end": 25738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 5023,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 5204,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5371,
											"end": 5394,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5399,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 5402,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 5547,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5288,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5741,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 5623,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 5728,
											"end": 5733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 5710,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5734,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 5710,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5705,
											"end": 5708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5969,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5747,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5867,
											"end": 5876,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5855,
											"end": 5881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5891,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 5959,
											"end": 5960,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5957,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 5941,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5891,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 5891,
											"end": 5962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5891,
											"end": 5962,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 5891,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5969,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5969,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5975,
											"end": 6093,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 5975,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6046,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6062,
											"end": 6067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6046,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6046,
											"end": 6068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6046,
											"end": 6068,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6046,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6039,
											"end": 6044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6036,
											"end": 6069,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 6026,
											"end": 6087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6083,
											"end": 6084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6080,
											"end": 6081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6073,
											"end": 6085,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6087,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 6026,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5975,
											"end": 6093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5975,
											"end": 6093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6234,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 6099,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6181,
											"end": 6187,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6188,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6197,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 6222,
											"end": 6227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6197,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 6197,
											"end": 6228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6197,
											"end": 6228,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 6197,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6234,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6362,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 6240,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6313,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 6331,
											"end": 6336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6313,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 6313,
											"end": 6337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6313,
											"end": 6337,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 6313,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6306,
											"end": 6311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6338,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6350,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6342,
											"end": 6354,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6507,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 6368,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6414,
											"end": 6419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6458,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6439,
											"end": 6459,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 6495,
											"end": 6500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 6468,
											"end": 6501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6501,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 6468,
											"end": 6501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6507,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6638,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6640,
											"end": 6646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6654,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6656,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6670,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6672,
											"end": 6678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6724,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6709,
											"end": 6718,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6707,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6696,
											"end": 6719,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6692,
											"end": 6725,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6689,
											"end": 6809,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6689,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 6689,
											"end": 6809,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6728,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 6728,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 6728,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6728,
											"end": 6807,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 6728,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6689,
											"end": 6809,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 6689,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6848,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6909,
											"end": 6915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6898,
											"end": 6907,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 6894,
											"end": 6916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6873,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 6873,
											"end": 6926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6873,
											"end": 6926,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 6873,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6863,
											"end": 6926,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 6863,
											"end": 6926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6819,
											"end": 6936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6975,
											"end": 6977,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7001,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 7046,
											"end": 7053,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7026,
											"end": 7035,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 7022,
											"end": 7044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7001,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 7001,
											"end": 7054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7001,
											"end": 7054,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 7001,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6991,
											"end": 7054,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 6991,
											"end": 7054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 7064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7129,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 7174,
											"end": 7181,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7163,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 7150,
											"end": 7172,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7129,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 7129,
											"end": 7182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7129,
											"end": 7182,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 7129,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7119,
											"end": 7182,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 7119,
											"end": 7182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7074,
											"end": 7192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7231,
											"end": 7233,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 7302,
											"end": 7309,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7299,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7291,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 7278,
											"end": 7300,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 7257,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7247,
											"end": 7310,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7247,
											"end": 7310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7202,
											"end": 7320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7359,
											"end": 7362,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7386,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 7420,
											"end": 7426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7409,
											"end": 7418,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 7405,
											"end": 7427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7386,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 7386,
											"end": 7437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7386,
											"end": 7437,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 7386,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7376,
											"end": 7437,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7376,
											"end": 7437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7489,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 7558,
											"end": 7565,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7538,
											"end": 7547,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 7534,
											"end": 7556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 7513,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7503,
											"end": 7566,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7503,
											"end": 7566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7457,
											"end": 7576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7615,
											"end": 7618,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 7642,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 7687,
											"end": 7694,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 7678,
											"end": 7684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7667,
											"end": 7676,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 7663,
											"end": 7685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7642,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 7642,
											"end": 7695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7642,
											"end": 7695,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 7642,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7586,
											"end": 7705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 7712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 8192,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7718,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7786,
											"end": 7792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7843,
											"end": 7845,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7831,
											"end": 7840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7822,
											"end": 7829,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7818,
											"end": 7841,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7814,
											"end": 7846,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7930,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 7811,
											"end": 7930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7849,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 7849,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7849,
											"end": 7928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7849,
											"end": 7928,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 7849,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7930,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 7811,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7994,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 8039,
											"end": 8046,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8030,
											"end": 8036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8019,
											"end": 8028,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7994,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 7994,
											"end": 8047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7994,
											"end": 8047,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 7994,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8047,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7940,
											"end": 8057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8096,
											"end": 8098,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8122,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 8167,
											"end": 8174,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8164,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8147,
											"end": 8156,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8143,
											"end": 8165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8122,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 8122,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8122,
											"end": 8175,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 8122,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8112,
											"end": 8175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8112,
											"end": 8175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8067,
											"end": 8185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 8192,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 8192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 8192,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 8192,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 8192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 8192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8198,
											"end": 8378,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 8198,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8246,
											"end": 8323,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8243,
											"end": 8244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8343,
											"end": 8347,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 8340,
											"end": 8341,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8333,
											"end": 8348,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8364,
											"end": 8365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8372,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8384,
											"end": 8704,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 8384,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8428,
											"end": 8434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8466,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8455,
											"end": 8467,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8512,
											"end": 8513,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8506,
											"end": 8510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8502,
											"end": 8514,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8523,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 8523,
											"end": 8604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8589,
											"end": 8593,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 8581,
											"end": 8587,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8577,
											"end": 8594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8567,
											"end": 8594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8567,
											"end": 8594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8523,
											"end": 8604,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 8523,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8651,
											"end": 8653,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8643,
											"end": 8649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8640,
											"end": 8654,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8617,
											"end": 8655,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8614,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 8614,
											"end": 8698,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8670,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 8670,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 8670,
											"end": 8688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8670,
											"end": 8688,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 8670,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8614,
											"end": 8698,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 8614,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8435,
											"end": 8704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8384,
											"end": 8704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8384,
											"end": 8704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8384,
											"end": 8704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8384,
											"end": 8704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8710,
											"end": 8867,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 8710,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8850,
											"end": 8859,
											"name": "PUSH",
											"source": 3,
											"value": "494E56414C494400000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8846,
											"end": 8847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8827,
											"end": 8860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8710,
											"end": 8867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8710,
											"end": 8867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8873,
											"end": 9238,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 8873,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9015,
											"end": 9018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9036,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 9100,
											"end": 9101,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 9095,
											"end": 9098,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9036,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9036,
											"end": 9102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9036,
											"end": 9102,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 9036,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9029,
											"end": 9102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9029,
											"end": 9102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9111,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 9200,
											"end": 9203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9111,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 9111,
											"end": 9204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9111,
											"end": 9204,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 9111,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9229,
											"end": 9231,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9220,
											"end": 9232,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9213,
											"end": 9232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9213,
											"end": 9232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8873,
											"end": 9238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8873,
											"end": 9238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8873,
											"end": 9238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8873,
											"end": 9238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9244,
											"end": 9663,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 9244,
											"end": 9663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9448,
											"end": 9450,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9437,
											"end": 9446,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9433,
											"end": 9451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9497,
											"end": 9506,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9491,
											"end": 9495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9507,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9483,
											"end": 9484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9472,
											"end": 9481,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9468,
											"end": 9485,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9461,
											"end": 9508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 9651,
											"end": 9655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9525,
											"end": 9656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9656,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 9525,
											"end": 9656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9517,
											"end": 9656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9517,
											"end": 9656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9244,
											"end": 9663,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9244,
											"end": 9663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9244,
											"end": 9663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9244,
											"end": 9663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9669,
											"end": 9849,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 9669,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9794,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9714,
											"end": 9715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9707,
											"end": 9795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9814,
											"end": 9818,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9804,
											"end": 9819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9838,
											"end": 9842,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9835,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9828,
											"end": 9843,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 10046,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 9855,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9895,
											"end": 9898,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 9932,
											"end": 9933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 9914,
											"end": 9934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "tag",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9909,
											"end": 9934,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9909,
											"end": 9934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9948,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9948,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 9948,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9948,
											"end": 9968,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 9948,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9943,
											"end": 9968,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9943,
											"end": 9968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9991,
											"end": 9992,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9988,
											"end": 9989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9984,
											"end": 9993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10012,
											"end": 10015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10009,
											"end": 10010,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10016,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10003,
											"end": 10039,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10003,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 10003,
											"end": 10039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 10019,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 10019,
											"end": 10037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10019,
											"end": 10037,
											"name": "tag",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 10019,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10003,
											"end": 10039,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 10003,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 10046,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 10046,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 10046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 10046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 10046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10052,
											"end": 10213,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 10052,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10192,
											"end": 10205,
											"name": "PUSH",
											"source": 3,
											"value": "45584345454453204D4158000000000000000000000000000000000000000000"
										},
										{
											"begin": 10188,
											"end": 10189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10180,
											"end": 10186,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10176,
											"end": 10190,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10169,
											"end": 10206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10052,
											"end": 10213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10052,
											"end": 10213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10585,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10219,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10361,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10382,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 10446,
											"end": 10448,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 10441,
											"end": 10444,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10382,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 10382,
											"end": 10449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10382,
											"end": 10449,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 10382,
											"end": 10449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10375,
											"end": 10449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10375,
											"end": 10449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10458,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 10547,
											"end": 10550,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10458,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 10458,
											"end": 10551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10458,
											"end": 10551,
											"name": "tag",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 10458,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10578,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10571,
											"end": 10574,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10567,
											"end": 10579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10560,
											"end": 10579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10560,
											"end": 10579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 11010,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 10591,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10795,
											"end": 10797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10780,
											"end": 10798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10772,
											"end": 10798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10772,
											"end": 10798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10844,
											"end": 10853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10838,
											"end": 10842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10834,
											"end": 10854,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10830,
											"end": 10831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10819,
											"end": 10828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10815,
											"end": 10832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10855,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10872,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 10998,
											"end": 11002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10872,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10872,
											"end": 11003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10872,
											"end": 11003,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 10872,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 11003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 11003,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 11010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 11010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 11010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 11010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/Pond0x.sol",
								"solady/src/auth/Ownable.sol",
								"solady/src/tokens/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"activate()": "0f15f4c0",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cancelOwnershipHandover()": "54d1f13d",
							"completeOwnershipHandover(address)": "f04e283e",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"directSpendAllowance(address,address,uint256)": "d30ed3b3",
							"directTransfer(address,address,uint256)": "f83d1791",
							"increaseAllowance(address,uint256)": "39509351",
							"minable()": "791879ef",
							"mintSupplyFromMinedLP(address,uint256)": "5372b2f6",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"ownershipHandoverExpiresAt(address)": "fee81cf4",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"requestOwnershipHandover()": "25692962",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AllowanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoHandoverRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipHandoverCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipHandoverRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"completeOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"directSpendAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"directTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mintSupplyFromMinedLP\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"result\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"ownershipHandoverExpiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AllowanceOverflow()\":[{\"details\":\"The allowance has overflowed.\"}],\"AllowanceUnderflow()\":[{\"details\":\"The allowance has underflowed.\"}],\"InsufficientAllowance()\":[{\"details\":\"Insufficient allowance.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"InvalidPermit()\":[{\"details\":\"The permit is invalid.\"}],\"NewOwnerIsZeroAddress()\":[{\"details\":\"The `newOwner` cannot be the zero address.\"}],\"NoHandoverRequest()\":[{\"details\":\"The `pendingOwner` does not have a valid handover request.\"}],\"PermitExpired()\":[{\"details\":\"The permit has expired.\"}],\"TotalSupplyOverflow()\":[{\"details\":\"The total supply has overflowed.\"}],\"Unauthorized()\":[{\"details\":\"The caller is not authorized to call the function.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\"},\"OwnershipHandoverCanceled(address)\":{\"details\":\"The ownership handover to `pendingOwner` has been canceled.\"},\"OwnershipHandoverRequested(address)\":{\"details\":\"An ownership handover to `pendingOwner` has been requested.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"The ownership is transferred from `oldOwner` to `newOwner`. This event is intentionally kept the same as OpenZeppelin's Ownable to be compatible with indexers and [EIP-173](https://eips.ethereum.org/EIPS/eip-173), despite it not being as lightweight as a single argument event.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the EIP-2612 domains separator.\"},\"allowance(address,address)\":{\"details\":\"Returns the amount of tokens that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `owner`.\"},\"cancelOwnershipHandover()\":{\"details\":\"Cancels the two-step ownership handover to the caller, if any.\"},\"completeOwnershipHandover(address)\":{\"details\":\"Allows the owner to complete the two-step ownership handover to `pendingOwner`. Reverts if there is no existing ownership handover requested by `pendingOwner`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. Emits a {Approval} event.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. Emits a {Approval} event.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit.\"},\"owner()\":{\"details\":\"Returns the owner of the contract.\"},\"ownershipHandoverExpiresAt(address)\":{\"details\":\"Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event.\"},\"renounceOwnership()\":{\"details\":\"Allows the owner to renounce their ownership.\"},\"requestOwnershipHandover()\":{\"details\":\"Request a two-step ownership handover to the caller. The request will automatically expire in 48 hours (172800 seconds) by default.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Allows the owner to transfer the ownership to `newOwner`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pond0x.sol\":\"Pond0x\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Pond0x.sol\":{\"keccak256\":\"0x07286e64bee3a6f9b2cd12b7a645793737a35c9f7593c756f6f3b2baa3e4dbd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bbea499b1d3c22fdb64f30b6791f4205758548620483ecf4468dbe76bcee2e\",\"dweb:/ipfs/QmYZ1UWcceU9ofHLnpNdZU9yWraoHBC4BnjcDKiikbHga4\"]},\"solady/src/auth/Ownable.sol\":{\"keccak256\":\"0xa0d943b6588c18b375535353b0b93310346a22997f91f9057348d6cdb33d9359\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76543c2e852af68f272a7be8966ecec47f552c0f75b21b79a5f7a60c078a2ab\",\"dweb:/ipfs/Qmdz2U2gUedvWkBKeEfuccw4RkMBZ1D64CbqFi8rDNsL5M\"]},\"solady/src/tokens/ERC20.sol\":{\"keccak256\":\"0x264e4675697d05dfb9bbe9cc91c6bda7962d934f1e940336fd75d509b7f396c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5856338689f03f36c057203c5085243e104b8487274432062ebf076b512edeea\",\"dweb:/ipfs/QmXrqgaWQikKkHfoBkYPxeMTJWUY5uf7kSmipNbpU35XwK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Pond0x.sol:Pond0x",
								"label": "minable",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 13,
								"contract": "contracts/Pond0x.sol:Pond0x",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 16,
								"contract": "contracts/Pond0x.sol:Pond0x",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 19,
								"contract": "contracts/Pond0x.sol:Pond0x",
								"label": "_decimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint8"
							},
							{
								"astId": 22,
								"contract": "contracts/Pond0x.sol:Pond0x",
								"label": "max_supply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 24,
								"contract": "contracts/Pond0x.sol:Pond0x",
								"label": "allowed_miner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"solady/src/auth/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"name": "NewOwnerIsZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoHandoverRequest",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "OwnershipHandoverCanceled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "OwnershipHandoverRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "cancelOwnershipHandover",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "completeOwnershipHandover",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "result",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "ownershipHandoverExpiresAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestOwnershipHandover",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/auth/Ownable.sol)",
						"details": "While the ownable portion follows [EIP-173](https://eips.ethereum.org/EIPS/eip-173) for compatibility, the nomenclature for the 2-step ownership handover may be unique to this codebase.",
						"errors": {
							"NewOwnerIsZeroAddress()": [
								{
									"details": "The `newOwner` cannot be the zero address."
								}
							],
							"NoHandoverRequest()": [
								{
									"details": "The `pendingOwner` does not have a valid handover request."
								}
							],
							"Unauthorized()": [
								{
									"details": "The caller is not authorized to call the function."
								}
							]
						},
						"events": {
							"OwnershipHandoverCanceled(address)": {
								"details": "The ownership handover to `pendingOwner` has been canceled."
							},
							"OwnershipHandoverRequested(address)": {
								"details": "An ownership handover to `pendingOwner` has been requested."
							},
							"OwnershipTransferred(address,address)": {
								"details": "The ownership is transferred from `oldOwner` to `newOwner`. This event is intentionally kept the same as OpenZeppelin's Ownable to be compatible with indexers and [EIP-173](https://eips.ethereum.org/EIPS/eip-173), despite it not being as lightweight as a single argument event."
							}
						},
						"kind": "dev",
						"methods": {
							"cancelOwnershipHandover()": {
								"details": "Cancels the two-step ownership handover to the caller, if any."
							},
							"completeOwnershipHandover(address)": {
								"details": "Allows the owner to complete the two-step ownership handover to `pendingOwner`. Reverts if there is no existing ownership handover requested by `pendingOwner`."
							},
							"owner()": {
								"details": "Returns the owner of the contract."
							},
							"ownershipHandoverExpiresAt(address)": {
								"details": "Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`."
							},
							"renounceOwnership()": {
								"details": "Allows the owner to renounce their ownership."
							},
							"requestOwnershipHandover()": {
								"details": "Request a two-step ownership handover to the caller. The request will automatically expire in 48 hours (172800 seconds) by default."
							},
							"transferOwnership(address)": {
								"details": "Allows the owner to transfer the ownership to `newOwner`."
							}
						},
						"stateVariables": {
							"_OWNERSHIP_HANDOVER_CANCELED_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"OwnershipHandoverCanceled(address)\"))`."
							},
							"_OWNERSHIP_HANDOVER_REQUESTED_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"OwnershipHandoverRequested(address)\"))`."
							},
							"_OWNERSHIP_TRANSFERRED_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"OwnershipTransferred(address,address)\"))`."
							},
							"_OWNER_SLOT_NOT": {
								"details": "The owner slot is given by: `not(_OWNER_SLOT_NOT)`. It is intentionally chosen to be a high value to avoid collision with lower slots. The choice of manual storage layout is to enable compatibility with both regular and upgradeable contracts."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"cancelOwnershipHandover()": "54d1f13d",
							"completeOwnershipHandover(address)": "f04e283e",
							"owner()": "8da5cb5b",
							"ownershipHandoverExpiresAt(address)": "fee81cf4",
							"renounceOwnership()": "715018a6",
							"requestOwnershipHandover()": "25692962",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NewOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoHandoverRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipHandoverCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipHandoverRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancelOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"completeOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"result\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"ownershipHandoverExpiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/auth/Ownable.sol)\",\"details\":\"While the ownable portion follows [EIP-173](https://eips.ethereum.org/EIPS/eip-173) for compatibility, the nomenclature for the 2-step ownership handover may be unique to this codebase.\",\"errors\":{\"NewOwnerIsZeroAddress()\":[{\"details\":\"The `newOwner` cannot be the zero address.\"}],\"NoHandoverRequest()\":[{\"details\":\"The `pendingOwner` does not have a valid handover request.\"}],\"Unauthorized()\":[{\"details\":\"The caller is not authorized to call the function.\"}]},\"events\":{\"OwnershipHandoverCanceled(address)\":{\"details\":\"The ownership handover to `pendingOwner` has been canceled.\"},\"OwnershipHandoverRequested(address)\":{\"details\":\"An ownership handover to `pendingOwner` has been requested.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"The ownership is transferred from `oldOwner` to `newOwner`. This event is intentionally kept the same as OpenZeppelin's Ownable to be compatible with indexers and [EIP-173](https://eips.ethereum.org/EIPS/eip-173), despite it not being as lightweight as a single argument event.\"}},\"kind\":\"dev\",\"methods\":{\"cancelOwnershipHandover()\":{\"details\":\"Cancels the two-step ownership handover to the caller, if any.\"},\"completeOwnershipHandover(address)\":{\"details\":\"Allows the owner to complete the two-step ownership handover to `pendingOwner`. Reverts if there is no existing ownership handover requested by `pendingOwner`.\"},\"owner()\":{\"details\":\"Returns the owner of the contract.\"},\"ownershipHandoverExpiresAt(address)\":{\"details\":\"Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`.\"},\"renounceOwnership()\":{\"details\":\"Allows the owner to renounce their ownership.\"},\"requestOwnershipHandover()\":{\"details\":\"Request a two-step ownership handover to the caller. The request will automatically expire in 48 hours (172800 seconds) by default.\"},\"transferOwnership(address)\":{\"details\":\"Allows the owner to transfer the ownership to `newOwner`.\"}},\"stateVariables\":{\"_OWNERSHIP_HANDOVER_CANCELED_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"OwnershipHandoverCanceled(address)\\\"))`.\"},\"_OWNERSHIP_HANDOVER_REQUESTED_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"OwnershipHandoverRequested(address)\\\"))`.\"},\"_OWNERSHIP_TRANSFERRED_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"OwnershipTransferred(address,address)\\\"))`.\"},\"_OWNER_SLOT_NOT\":{\"details\":\"The owner slot is given by: `not(_OWNER_SLOT_NOT)`. It is intentionally chosen to be a high value to avoid collision with lower slots. The choice of manual storage layout is to enable compatibility with both regular and upgradeable contracts.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple single owner authorization mixin.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"solady/src/auth/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solady/src/auth/Ownable.sol\":{\"keccak256\":\"0xa0d943b6588c18b375535353b0b93310346a22997f91f9057348d6cdb33d9359\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76543c2e852af68f272a7be8966ecec47f552c0f75b21b79a5f7a60c078a2ab\",\"dweb:/ipfs/Qmdz2U2gUedvWkBKeEfuccw4RkMBZ1D64CbqFi8rDNsL5M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple single owner authorization mixin.",
						"version": 1
					}
				}
			},
			"solady/src/tokens/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"name": "AllowanceOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AllowanceUnderflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPermit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PermitExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TotalSupplyOverflow",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "result",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "difference",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "difference",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)",
						"details": "Note: The ERC20 standard allows minting and transferring to and from the zero address, minting and transferring zero tokens, as well as self-approvals. For performance, this implementation WILL NOT revert for such actions. Please add any checks with overrides if desired.",
						"errors": {
							"AllowanceOverflow()": [
								{
									"details": "The allowance has overflowed."
								}
							],
							"AllowanceUnderflow()": [
								{
									"details": "The allowance has underflowed."
								}
							],
							"InsufficientAllowance()": [
								{
									"details": "Insufficient allowance."
								}
							],
							"InsufficientBalance()": [
								{
									"details": "Insufficient balance."
								}
							],
							"InvalidPermit()": [
								{
									"details": "The permit is invalid."
								}
							],
							"PermitExpired()": [
								{
									"details": "The permit has expired."
								}
							],
							"TotalSupplyOverflow()": [
								{
									"details": "The total supply has overflowed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the EIP-2612 domains separator."
							},
							"allowance(address,address)": {
								"details": "Returns the amount of tokens that `spender` can spend on behalf of `owner`."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `owner`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. Emits a {Approval} event."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. Emits a {Approval} event."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."
							}
						},
						"stateVariables": {
							"_ALLOWANCE_SLOT_SEED": {
								"details": "The allowance slot of (`owner`, `spender`) is given by: ```     mstore(0x20, spender)     mstore(0x0c, _ALLOWANCE_SLOT_SEED)     mstore(0x00, owner)     let allowanceSlot := keccak256(0x0c, 0x34) ```"
							},
							"_APPROVAL_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"Approval(address,address,uint256)\"))`."
							},
							"_BALANCE_SLOT_SEED": {
								"details": "The balance slot of `owner` is given by: ```     mstore(0x0c, _BALANCE_SLOT_SEED)     mstore(0x00, owner)     let balanceSlot := keccak256(0x0c, 0x20) ```"
							},
							"_NONCES_SLOT_SEED": {
								"details": "The nonce slot of `owner` is given by: ```     mstore(0x0c, _NONCES_SLOT_SEED)     mstore(0x00, owner)     let nonceSlot := keccak256(0x0c, 0x20) ```"
							},
							"_TOTAL_SUPPLY_SLOT": {
								"details": "The storage slot for the total supply."
							},
							"_TRANSFER_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"Transfer(address,address,uint256)\"))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AllowanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\",\"details\":\"Note: The ERC20 standard allows minting and transferring to and from the zero address, minting and transferring zero tokens, as well as self-approvals. For performance, this implementation WILL NOT revert for such actions. Please add any checks with overrides if desired.\",\"errors\":{\"AllowanceOverflow()\":[{\"details\":\"The allowance has overflowed.\"}],\"AllowanceUnderflow()\":[{\"details\":\"The allowance has underflowed.\"}],\"InsufficientAllowance()\":[{\"details\":\"Insufficient allowance.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"InvalidPermit()\":[{\"details\":\"The permit is invalid.\"}],\"PermitExpired()\":[{\"details\":\"The permit has expired.\"}],\"TotalSupplyOverflow()\":[{\"details\":\"The total supply has overflowed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the EIP-2612 domains separator.\"},\"allowance(address,address)\":{\"details\":\"Returns the amount of tokens that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `owner`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. Emits a {Approval} event.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. Emits a {Approval} event.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event.\"}},\"stateVariables\":{\"_ALLOWANCE_SLOT_SEED\":{\"details\":\"The allowance slot of (`owner`, `spender`) is given by: ```     mstore(0x20, spender)     mstore(0x0c, _ALLOWANCE_SLOT_SEED)     mstore(0x00, owner)     let allowanceSlot := keccak256(0x0c, 0x34) ```\"},\"_APPROVAL_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Approval(address,address,uint256)\\\"))`.\"},\"_BALANCE_SLOT_SEED\":{\"details\":\"The balance slot of `owner` is given by: ```     mstore(0x0c, _BALANCE_SLOT_SEED)     mstore(0x00, owner)     let balanceSlot := keccak256(0x0c, 0x20) ```\"},\"_NONCES_SLOT_SEED\":{\"details\":\"The nonce slot of `owner` is given by: ```     mstore(0x0c, _NONCES_SLOT_SEED)     mstore(0x00, owner)     let nonceSlot := keccak256(0x0c, 0x20) ```\"},\"_TOTAL_SUPPLY_SLOT\":{\"details\":\"The storage slot for the total supply.\"},\"_TRANSFER_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Transfer(address,address,uint256)\\\"))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"solady/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solady/src/tokens/ERC20.sol\":{\"keccak256\":\"0x264e4675697d05dfb9bbe9cc91c6bda7962d934f1e940336fd75d509b7f396c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5856338689f03f36c057203c5085243e104b8487274432062ebf076b512edeea\",\"dweb:/ipfs/QmXrqgaWQikKkHfoBkYPxeMTJWUY5uf7kSmipNbpU35XwK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple ERC20 + EIP-2612 implementation.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Pond0x.sol": {
				"ast": {
					"absolutePath": "contracts/Pond0x.sol",
					"exportedSymbols": {
						"ERC20": [
							826
						],
						"Ownable": [
							430
						],
						"Pond0x": [
							258
						]
					},
					"id": 259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "solady/src/auth/Ownable.sol",
							"file": "solady/src/auth/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 259,
							"sourceUnit": 431,
							"src": "61:37:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "solady/src/tokens/ERC20.sol",
							"file": "solady/src/tokens/ERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 259,
							"sourceUnit": 827,
							"src": "100:37:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Ownable",
										"nameLocations": [
											"160:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 430,
										"src": "160:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "160:7:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "ERC20",
										"nameLocations": [
											"169:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 826,
										"src": "169:5:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "169:5:0"
								}
							],
							"canonicalName": "Pond0x",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 258,
							"linearizedBaseContracts": [
								258,
								826,
								430
							],
							"name": "Pond0x",
							"nameLocation": "150:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "791879ef",
									"id": 10,
									"mutability": "mutable",
									"name": "minable",
									"nameLocation": "196:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "184:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "184:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "206:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "234:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "218:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 11,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "218:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "506f6e643078",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "242:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b8205928b771e2220a9b6e55d7a145e56f06561d203bbb778f2e42de2202c174",
											"typeString": "literal_string \"Pond0x\""
										},
										"value": "Pond0x"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "273:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "257:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 14,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "257:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "504e4458",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "283:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0fbed5521858b001929f24d056545bf9f4a851be9fb4d5a39fa1728cd352f8dd",
											"typeString": "literal_string \"PNDX\""
										},
										"value": "PNDX"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "311:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "296:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 17,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "296:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "323:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "max_supply",
									"nameLocation": "349:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "332:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "332:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343230363930303030303030303030303030303030303030303030303030303030",
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "362:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_420690000000000000000000000000000_by_1",
											"typeString": "int_const 4206...(25 digits omitted)...0000"
										},
										"value": "420690000000000000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "allowed_miner",
									"nameLocation": "410:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "402:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 23,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "402:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										502
									],
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "500:31:0",
										"statements": [
											{
												"expression": {
													"id": 30,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "518:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 29,
												"id": 31,
												"nodeType": "Return",
												"src": "511:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "440:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 26,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "467:8:0"
									},
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "485:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 27,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "485:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:15:0"
									},
									"scope": 258,
									"src": "431:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										508
									],
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "610:33:0",
										"statements": [
											{
												"expression": {
													"id": 39,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 16,
													"src": "628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 38,
												"id": 40,
												"nodeType": "Return",
												"src": "621:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "548:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 35,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "577:8:0"
									},
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "595:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 36,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "595:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:15:0"
									},
									"scope": 258,
									"src": "539:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										517
									],
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "716:35:0",
										"statements": [
											{
												"expression": {
													"id": 48,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "734:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 47,
												"id": 49,
												"nodeType": "Return",
												"src": "727:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "660:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 44,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "691:8:0"
									},
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "709:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 45,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "709:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:7:0"
									},
									"scope": 258,
									"src": "651:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "840:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 62,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "873:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 61,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "861:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "861:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 65,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "892:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 64,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "880:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "880:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 67,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "897:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 60,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "851:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "851:53:0"
											}
										]
									},
									"functionSelector": "f83d1791",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "directTransfer",
									"nameLocation": "768:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "791:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "783:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "805:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "797:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "817:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "809:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:42:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:0:0"
									},
									"scope": 258,
									"src": "759:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "1013:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 82,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1052:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 81,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1040:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1040:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 85,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "1072:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 84,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1060:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1060:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 87,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1082:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 80,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1024:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1024:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1024:65:0"
											}
										]
									},
									"functionSelector": "d30ed3b3",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "directSpendAllowance",
									"nameLocation": "929:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "958:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "950:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "973:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "965:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "990:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "982:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:48:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:0"
									},
									"scope": 258,
									"src": "920:177:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										617
									],
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1190:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 104,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1235:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 103,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1223:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1223:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 106,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1240:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 101,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1208:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Pond0x_$258_$",
																"typeString": "type(contract super Pond0x)"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1214:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 617,
														"src": "1208:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1208:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 108,
												"nodeType": "Return",
												"src": "1201:46:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1114:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 97,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1166:8:0"
									},
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1131:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1123:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1122:28:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1184:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1184:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1183:6:0"
									},
									"scope": 258,
									"src": "1105:150:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										645
									],
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "1405:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 125,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "1454:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 124,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1442:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1442:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 128,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "1473:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 127,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1461:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1461:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 130,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "1478:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 122,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1423:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Pond0x_$258_$",
																"typeString": "type(contract super Pond0x)"
															}
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1429:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 645,
														"src": "1423:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1423:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 121,
												"id": 132,
												"nodeType": "Return",
												"src": "1416:69:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1270:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 118,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1367:8:0"
									},
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1291:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1283:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1305:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1297:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1317:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1309:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:42:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1394:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:6:0"
									},
									"scope": 258,
									"src": "1261:232:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										575
									],
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1645:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 147,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "1699:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 146,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1687:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1687:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 149,
															"name": "difference",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1709:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 144,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1663:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Pond0x_$258_$",
																"typeString": "type(contract super Pond0x)"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1669:17:0",
														"memberName": "increaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 575,
														"src": "1663:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1663:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 143,
												"id": 151,
												"nodeType": "Return",
												"src": "1656:64:0"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "1510:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1607:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1536:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1528:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "difference",
												"nameLocation": "1553:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1545:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:37:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1634:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1634:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:6:0"
									},
									"scope": 258,
									"src": "1501:227:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										589
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1880:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 166,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1934:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 165,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1922:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1922:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 168,
															"name": "difference",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1944:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 163,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1898:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Pond0x_$258_$",
																"typeString": "type(contract super Pond0x)"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1904:17:0",
														"memberName": "decreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 589,
														"src": "1898:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1898:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 162,
												"id": 170,
												"nodeType": "Return",
												"src": "1891:64:0"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "1745:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 159,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1842:8:0"
									},
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "difference",
												"nameLocation": "1788:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1780:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:37:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1869:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1869:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:6:0"
									},
									"scope": 258,
									"src": "1736:227:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2042:129:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2106:58:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2121:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2134:1:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2141:3:0",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "2146:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2146:5:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2137:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2137:15:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2131:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:22:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 174,
														"isOffset": false,
														"isSlot": false,
														"src": "2134:1:0",
														"valueSize": 1
													},
													{
														"declaration": 177,
														"isOffset": false,
														"isSlot": false,
														"src": "2121:6:0",
														"valueSize": 1
													}
												],
												"id": 179,
												"nodeType": "InlineAssembly",
												"src": "2097:67:0"
											}
										]
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_brutalized",
									"nameLocation": "1980:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2000:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1992:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:11:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2034:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2026:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:16:0"
									},
									"scope": 258,
									"src": "1971:200:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "2214:208:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 185,
																"name": "minable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2233:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2244:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2233:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c4944",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2251:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
																"typeString": "literal_string \"INVALID\""
															},
															"value": "INVALID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
																"typeString": "literal_string \"INVALID\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2225:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2225:36:0"
											},
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 191,
														"name": "allowed_miner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "2272:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 192,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2288:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2292:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2288:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2272:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "2272:26:0"
											},
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 196,
														"name": "minable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2319:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2309:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "2309:14:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 202,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2377:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2381:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2377:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 201,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2365:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2365:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32303030303030",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2390:13:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2000000000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000000000"
															},
															"value": "2000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2000000000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000000000"
															}
														],
														"id": 200,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "2359:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2359:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2359:45:0"
											}
										]
									},
									"functionSelector": "0f15f4c0",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "activate",
									"nameLocation": "2186:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:2:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:0:0"
									},
									"scope": 258,
									"src": "2177:245:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "2506:301:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "minable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2525:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2536:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2525:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c4944",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2542:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
																"typeString": "literal_string \"INVALID\""
															},
															"value": "INVALID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
																"typeString": "literal_string \"INVALID\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "2517:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 224,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2571:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2575:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2571:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 226,
																"name": "allowed_miner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2585:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2571:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c4944",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2600:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
																"typeString": "literal_string \"INVALID\""
															},
															"value": "INVALID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
																"typeString": "literal_string \"INVALID\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2563:47:0"
											},
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "_supply",
														"nameLocation": "2626:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "2621:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 231,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 235,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 233,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2636:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2636:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2621:28:0"
											},
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "_calculated",
														"nameLocation": "2665:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "2660:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2660:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 238,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2679:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 239,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2689:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2679:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2660:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "_calculated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "2715:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 244,
																"name": "max_supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2730:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2715:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45584345454453204d4158",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2742:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6",
																"typeString": "literal_string \"EXCEEDS MAX\""
															},
															"value": "EXCEEDS MAX"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b8a6d3f6564798fb295c32828dfc3fd0f50a007820e22d55dd8ecc4494f175b6",
																"typeString": "literal_string \"EXCEEDS MAX\""
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2707:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2707:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 251,
																	"name": "miner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "2785:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 250,
																"name": "_brutalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
																	"typeString": "function (address) view returns (address)"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2773:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "2793:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 249,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "2767:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2767:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "2767:32:0"
											}
										]
									},
									"functionSelector": "5372b2f6",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintSupplyFromMinedLP",
									"nameLocation": "2437:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "miner",
												"nameLocation": "2467:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "2459:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "2474:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2458:30:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2506:0:0"
									},
									"scope": 258,
									"src": "2428:379:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 259,
							"src": "141:2669:0",
							"usedErrors": [
								264,
								267,
								270,
								436,
								439,
								442,
								445,
								448,
								451,
								454
							]
						}
					],
					"src": "33:2777:0"
				},
				"id": 0
			},
			"solady/src/auth/Ownable.sol": {
				"ast": {
					"absolutePath": "solady/src/auth/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							430
						]
					},
					"id": 431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 260,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 261,
								"nodeType": "StructuredDocumentation",
								"src": "57:345:1",
								"text": "@notice Simple single owner authorization mixin.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/auth/Ownable.sol)\n @dev While the ownable portion follows\n [EIP-173](https://eips.ethereum.org/EIPS/eip-173) for compatibility,\n the nomenclature for the 2-step ownership handover may be unique to this codebase."
							},
							"fullyImplemented": true,
							"id": 430,
							"linearizedBaseContracts": [
								430
							],
							"name": "Ownable",
							"nameLocation": "420:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "717:59:1",
										"text": "@dev The caller is not authorized to call the function."
									},
									"errorSelector": "82b42900",
									"id": 264,
									"name": "Unauthorized",
									"nameLocation": "787:12:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:1"
									},
									"src": "781:21:1"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "808:51:1",
										"text": "@dev The `newOwner` cannot be the zero address."
									},
									"errorSelector": "7448fbae",
									"id": 267,
									"name": "NewOwnerIsZeroAddress",
									"nameLocation": "870:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:1"
									},
									"src": "864:30:1"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": "@dev The `pendingOwner` does not have a valid handover request."
									},
									"errorSelector": "6f5e8818",
									"id": 270,
									"name": "NoHandoverRequest",
									"nameLocation": "978:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:2:1"
									},
									"src": "972:26:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "1287:310:1",
										"text": "@dev The ownership is transferred from `oldOwner` to `newOwner`.\n This event is intentionally kept the same as OpenZeppelin's Ownable to be\n compatible with indexers and [EIP-173](https://eips.ethereum.org/EIPS/eip-173),\n despite it not being as lightweight as a single argument event."
									},
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 277,
									"name": "OwnershipTransferred",
									"nameLocation": "1608:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "1645:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1629:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1671:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1655:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:52:1"
									},
									"src": "1602:79:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1687:68:1",
										"text": "@dev An ownership handover to `pendingOwner` has been requested."
									},
									"eventSelector": "dbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d",
									"id": 282,
									"name": "OwnershipHandoverRequested",
									"nameLocation": "1766:26:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "1809:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1793:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:30:1"
									},
									"src": "1760:63:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1829:68:1",
										"text": "@dev The ownership handover to `pendingOwner` has been canceled."
									},
									"eventSelector": "fa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92",
									"id": 287,
									"name": "OwnershipHandoverCanceled",
									"nameLocation": "1908:25:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"indexed": true,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "1950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1934:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1933:30:1"
									},
									"src": "1902:62:1"
								},
								{
									"constant": true,
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1970:69:1",
										"text": "@dev `keccak256(bytes(\"OwnershipTransferred(address,address)\"))`."
									},
									"id": 291,
									"mutability": "constant",
									"name": "_OWNERSHIP_TRANSFERRED_EVENT_SIGNATURE",
									"nameLocation": "2069:38:1",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "2044:140:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 289,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2044:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307838626530303739633533313635393134313334346364316664306134663238343139343937663937323261336461616665336234313836663662363435376530",
										"id": 290,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2118:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_63267312222310607310220992301550539520881909915348243260808268974908359596000_by_1",
											"typeString": "int_const 6326...(69 digits omitted)...6000"
										},
										"value": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "2191:67:1",
										"text": "@dev `keccak256(bytes(\"OwnershipHandoverRequested(address)\"))`."
									},
									"id": 295,
									"mutability": "constant",
									"name": "_OWNERSHIP_HANDOVER_REQUESTED_EVENT_SIGNATURE",
									"nameLocation": "2288:45:1",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "2263:147:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 293,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2263:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307864626633366131303764613139653439353237613731373661316261626639363362346230666638636465333565653335643663643866316639616337653164",
										"id": 294,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2344:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_99486589706178915293482045537067896628184784474209892898124391061398315892253_by_1",
											"typeString": "int_const 9948...(69 digits omitted)...2253"
										},
										"value": "0xdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2417:66:1",
										"text": "@dev `keccak256(bytes(\"OwnershipHandoverCanceled(address)\"))`."
									},
									"id": 299,
									"mutability": "constant",
									"name": "_OWNERSHIP_HANDOVER_CANCELED_EVENT_SIGNATURE",
									"nameLocation": "2513:44:1",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "2488:146:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 297,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2488:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307866613762386561623764613637663431326363393537356564343334363434363866396266626165383964313637353931373334366361366438666533633932",
										"id": 298,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2568:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_113296519006148992096626879868577423813870114622160551413976512868841544367250_by_1",
											"typeString": "int_const 1132...(70 digits omitted)...7250"
										},
										"value": "0xfa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "2924:283:1",
										"text": "@dev The owner slot is given by: `not(_OWNER_SLOT_NOT)`.\n It is intentionally chosen to be a high value\n to avoid collision with lower slots.\n The choice of manual storage layout is to enable compatibility\n with both regular and upgradeable contracts."
									},
									"id": 303,
									"mutability": "constant",
									"name": "_OWNER_SLOT_NOT",
									"nameLocation": "3237:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "3212:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 301,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3212:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783862373863366438",
										"id": 302,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3255:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2339948248_by_1",
											"typeString": "int_const 2339948248"
										},
										"value": "0x8b78c6d8"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "3272:276:1",
										"text": "The ownership handover slot of `newOwner` is given by:\n ```\n     mstore(0x00, or(shl(96, user), _HANDOVER_SLOT_SEED))\n     let handoverSlot := keccak256(0x00, 0x20)\n ```\n It stores the expiry timestamp of the two-step ownership handover."
									},
									"id": 307,
									"mutability": "constant",
									"name": "_HANDOVER_SLOT_SEED",
									"nameLocation": "3578:19:1",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "3553:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 305,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3553:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783338396137356531",
										"id": 306,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3600:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_949646817_by_1",
											"typeString": "int_const 949646817"
										},
										"value": "0x389a75e1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "4412:387:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4474:319:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4528:38:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4544:2:1",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4552:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "newOwner",
																				"nodeType": "YulIdentifier",
																				"src": "4556:8:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4548:17:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:26:1"
															},
															"variableNames": [
																{
																	"name": "newOwner",
																	"nodeType": "YulIdentifier",
																	"src": "4528:8:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_OWNER_SLOT_NOT",
																				"nodeType": "YulIdentifier",
																				"src": "4626:15:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4622:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4622:20:1"
																	},
																	{
																		"name": "newOwner",
																		"nodeType": "YulIdentifier",
																		"src": "4644:8:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "4615:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4615:38:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4725:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4728:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_OWNERSHIP_TRANSFERRED_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "4731:38:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4771:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "newOwner",
																		"nodeType": "YulIdentifier",
																		"src": "4774:8:1"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "4720:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4720:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4720:63:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 291,
														"isOffset": false,
														"isSlot": false,
														"src": "4731:38:1",
														"valueSize": 1
													},
													{
														"declaration": 303,
														"isOffset": false,
														"isSlot": false,
														"src": "4626:15:1",
														"valueSize": 1
													},
													{
														"declaration": 310,
														"isOffset": false,
														"isSlot": false,
														"src": "4528:8:1",
														"valueSize": 1
													},
													{
														"declaration": 310,
														"isOffset": false,
														"isSlot": false,
														"src": "4556:8:1",
														"valueSize": 1
													},
													{
														"declaration": 310,
														"isOffset": false,
														"isSlot": false,
														"src": "4644:8:1",
														"valueSize": 1
													},
													{
														"declaration": 310,
														"isOffset": false,
														"isSlot": false,
														"src": "4774:8:1",
														"valueSize": 1
													}
												],
												"id": 313,
												"nodeType": "InlineAssembly",
												"src": "4465:328:1"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "3900:446:1",
										"text": "@dev Initializes the owner directly without authorization guard.\n This function must be called upon initialization,\n regardless of whether the contract is upgradeable or not.\n This is to enable generalization to both regular and upgradeable contracts,\n and to save gas in case the initial owner is not the caller.\n For performance reasons, this function will not check if there\n is an existing owner."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwner",
									"nameLocation": "4360:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4385:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4377:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4376:18:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4412:0:1"
									},
									"scope": 430,
									"src": "4351:448:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "4925:441:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4987:373:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5001:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "_OWNER_SLOT_NOT",
																		"nodeType": "YulIdentifier",
																		"src": "5022:15:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "5018:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5018:20:1"
															},
															"variables": [
																{
																	"name": "ownerSlot",
																	"nodeType": "YulTypedName",
																	"src": "5005:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5091:38:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5107:2:1",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5115:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "newOwner",
																				"nodeType": "YulIdentifier",
																				"src": "5119:8:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5111:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5111:17:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5103:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5103:26:1"
															},
															"variableNames": [
																{
																	"name": "newOwner",
																	"nodeType": "YulIdentifier",
																	"src": "5091:8:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5201:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5204:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_OWNERSHIP_TRANSFERRED_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "5207:38:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ownerSlot",
																				"nodeType": "YulIdentifier",
																				"src": "5253:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5247:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5247:16:1"
																	},
																	{
																		"name": "newOwner",
																		"nodeType": "YulIdentifier",
																		"src": "5265:8:1"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "5196:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:78:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:78:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ownerSlot",
																		"nodeType": "YulIdentifier",
																		"src": "5330:9:1"
																	},
																	{
																		"name": "newOwner",
																		"nodeType": "YulIdentifier",
																		"src": "5341:8:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5323:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5323:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5323:27:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 291,
														"isOffset": false,
														"isSlot": false,
														"src": "5207:38:1",
														"valueSize": 1
													},
													{
														"declaration": 303,
														"isOffset": false,
														"isSlot": false,
														"src": "5022:15:1",
														"valueSize": 1
													},
													{
														"declaration": 318,
														"isOffset": false,
														"isSlot": false,
														"src": "5091:8:1",
														"valueSize": 1
													},
													{
														"declaration": 318,
														"isOffset": false,
														"isSlot": false,
														"src": "5119:8:1",
														"valueSize": 1
													},
													{
														"declaration": 318,
														"isOffset": false,
														"isSlot": false,
														"src": "5265:8:1",
														"valueSize": 1
													},
													{
														"declaration": 318,
														"isOffset": false,
														"isSlot": false,
														"src": "5341:8:1",
														"valueSize": 1
													}
												],
												"id": 321,
												"nodeType": "InlineAssembly",
												"src": "4978:382:1"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "4805:61:1",
										"text": "@dev Sets the owner directly without authorization guard."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "4880:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4898:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4890:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4890:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4889:18:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4925:0:1"
									},
									"scope": 430,
									"src": "4871:495:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "5469:319:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5531:251:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5660:112:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5685:4:1",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5691:10:1",
																					"type": "",
																					"value": "0x82b42900"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5678:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5678:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5678:24:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5747:4:1",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5753:4:1",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5740:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5740:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5740:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "caller",
																					"nodeType": "YulIdentifier",
																					"src": "5620:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5620:8:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_OWNER_SLOT_NOT",
																								"nodeType": "YulIdentifier",
																								"src": "5640:15:1"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5636:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5636:20:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5630:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5630:27:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5617:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5617:41:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5610:49:1"
															},
															"nodeType": "YulIf",
															"src": "5607:165:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 303,
														"isOffset": false,
														"isSlot": false,
														"src": "5640:15:1",
														"valueSize": 1
													}
												],
												"id": 327,
												"nodeType": "InlineAssembly",
												"src": "5522:260:1"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "5372:47:1",
										"text": "@dev Throws if the sender is not the owner."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "5433:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5444:2:1"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5469:0:1"
									},
									"scope": 430,
									"src": "5424:364:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "6096:33:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_rational_172800_by_1",
														"typeString": "int_const 172800"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3438",
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6113:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_48_by_1",
															"typeString": "int_const 48"
														},
														"value": "48"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "33363030",
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6118:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "6113:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_172800_by_1",
														"typeString": "int_const 172800"
													}
												},
												"functionReturnParameters": 334,
												"id": 338,
												"nodeType": "Return",
												"src": "6106:16:1"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "5794:220:1",
										"text": "@dev Returns how long a two-step ownership handover is valid for in seconds.\n Override to return a different value if needed.\n Made internal to conserve bytecode. Wrap it in a public function if needed."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipHandoverValidFor",
									"nameLocation": "6028:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6054:2:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "6088:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 332,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6088:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:8:1"
									},
									"scope": 430,
									"src": "6019:110:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "6567:271:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6629:174:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6672:121:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6697:4:1",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6703:10:1",
																					"type": "",
																					"value": "0x7448fbae"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6690:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6690:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6690:24:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6768:4:1",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6774:4:1",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6761:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6761:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6761:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6657:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "newOwner",
																				"nodeType": "YulIdentifier",
																				"src": "6661:8:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6653:17:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6646:25:1"
															},
															"nodeType": "YulIf",
															"src": "6643:150:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 343,
														"isOffset": false,
														"isSlot": false,
														"src": "6661:8:1",
														"valueSize": 1
													}
												],
												"id": 348,
												"nodeType": "InlineAssembly",
												"src": "6620:183:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6822:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "6812:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6812:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "6812:19:1"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "6418:66:1",
										"text": "@dev Allows the owner to transfer the ownership to `newOwner`."
									},
									"functionSelector": "f2fde38b",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 346,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 345,
												"name": "onlyOwner",
												"nameLocations": [
													"6557:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "6557:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6557:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "6498:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6524:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "6516:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6516:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6515:18:1"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6567:0:1"
									},
									"scope": 430,
									"src": "6489:349:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "6965:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6993:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6985:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 361,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6985:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6985:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 360,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "6975:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6975:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "6975:21:1"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "6844:54:1",
										"text": "@dev Allows the owner to renounce their ownership."
									},
									"functionSelector": "715018a6",
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 357,
												"name": "onlyOwner",
												"nameLocations": [
													"6955:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "6955:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6955:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "6912:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6929:2:1"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6965:0:1"
									},
									"scope": 430,
									"src": "6903:100:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "7221:558:1",
										"statements": [
											{
												"id": 381,
												"nodeType": "UncheckedBlock",
												"src": "7231:542:1",
												"statements": [
													{
														"assignments": [
															373
														],
														"declarations": [
															{
																"constant": false,
																"id": 373,
																"mutability": "mutable",
																"name": "expires",
																"nameLocation": "7263:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 381,
																"src": "7255:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 372,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7255:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 379,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 374,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7273:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7279:9:1",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7273:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 376,
																	"name": "_ownershipHandoverValidFor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "7291:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
																		"typeString": "function () view returns (uint64)"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7291:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "7273:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7255:64:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "7389:374:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7481:4:1",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"name": "_HANDOVER_SLOT_SEED",
																				"nodeType": "YulIdentifier",
																				"src": "7487:19:1"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "7474:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7474:33:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7474:33:1"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7531:4:1",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "caller",
																					"nodeType": "YulIdentifier",
																					"src": "7537:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7537:8:1"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "7524:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7524:22:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7524:22:1"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7580:4:1",
																						"type": "",
																						"value": "0x0c"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7586:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "keccak256",
																					"nodeType": "YulIdentifier",
																					"src": "7570:9:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7570:21:1"
																			},
																			{
																				"name": "expires",
																				"nodeType": "YulIdentifier",
																				"src": "7593:7:1"
																			}
																		],
																		"functionName": {
																			"name": "sstore",
																			"nodeType": "YulIdentifier",
																			"src": "7563:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7563:38:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7563:38:1"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7687:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7690:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_OWNERSHIP_HANDOVER_REQUESTED_EVENT_SIGNATURE",
																				"nodeType": "YulIdentifier",
																				"src": "7693:45:1"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "caller",
																					"nodeType": "YulIdentifier",
																					"src": "7740:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7740:8:1"
																			}
																		],
																		"functionName": {
																			"name": "log2",
																			"nodeType": "YulIdentifier",
																			"src": "7682:4:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7682:67:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7682:67:1"
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 307,
																"isOffset": false,
																"isSlot": false,
																"src": "7487:19:1",
																"valueSize": 1
															},
															{
																"declaration": 295,
																"isOffset": false,
																"isSlot": false,
																"src": "7693:45:1",
																"valueSize": 1
															},
															{
																"declaration": 373,
																"isOffset": false,
																"isSlot": false,
																"src": "7593:7:1",
																"valueSize": 1
															}
														],
														"id": 380,
														"nodeType": "InlineAssembly",
														"src": "7380:383:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "7009:148:1",
										"text": "@dev Request a two-step ownership handover to the caller.\n The request will automatically expire in 48 hours (172800 seconds) by default."
									},
									"functionSelector": "25692962",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestOwnershipHandover",
									"nameLocation": "7171:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:2:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7221:0:1"
									},
									"scope": 430,
									"src": "7162:617:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "7919:398:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7981:330:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8057:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_HANDOVER_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "8063:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8050:33:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8103:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "8109:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8109:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8096:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8148:4:1",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8154:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "8138:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8138:21:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8161:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "8131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8131:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8240:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8243:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_OWNERSHIP_HANDOVER_CANCELED_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "8246:44:1"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "8292:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8292:8:1"
																	}
																],
																"functionName": {
																	"name": "log2",
																	"nodeType": "YulIdentifier",
																	"src": "8235:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8235:66:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 307,
														"isOffset": false,
														"isSlot": false,
														"src": "8063:19:1",
														"valueSize": 1
													},
													{
														"declaration": 299,
														"isOffset": false,
														"isSlot": false,
														"src": "8246:44:1",
														"valueSize": 1
													}
												],
												"id": 387,
												"nodeType": "InlineAssembly",
												"src": "7972:339:1"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "7785:71:1",
										"text": "@dev Cancels the two-step ownership handover to the caller, if any."
									},
									"functionSelector": "54d1f13d",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelOwnershipHandover",
									"nameLocation": "7870:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7893:2:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7919:0:1"
									},
									"scope": 430,
									"src": "7861:456:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8594:618:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8656:517:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8732:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_HANDOVER_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "8738:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8725:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8725:33:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8778:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "pendingOwner",
																		"nodeType": "YulIdentifier",
																		"src": "8784:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8771:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:26:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8771:26:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8810:41:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8840:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8846:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8830:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8830:21:1"
															},
															"variables": [
																{
																	"name": "handoverSlot",
																	"nodeType": "YulTypedName",
																	"src": "8814:12:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8967:117:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8992:4:1",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8998:10:1",
																					"type": "",
																					"value": "0x6f5e8818"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8985:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8985:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8985:24:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9059:4:1",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9065:4:1",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9052:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9052:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9052:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "timestamp",
																			"nodeType": "YulIdentifier",
																			"src": "8933:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8933:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "handoverSlot",
																				"nodeType": "YulIdentifier",
																				"src": "8952:12:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "8946:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8946:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8930:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8930:36:1"
															},
															"nodeType": "YulIf",
															"src": "8927:157:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "handoverSlot",
																		"nodeType": "YulIdentifier",
																		"src": "9147:12:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9161:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "9140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9140:23:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9140:23:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 307,
														"isOffset": false,
														"isSlot": false,
														"src": "8738:19:1",
														"valueSize": 1
													},
													{
														"declaration": 392,
														"isOffset": false,
														"isSlot": false,
														"src": "8784:12:1",
														"valueSize": 1
													}
												],
												"id": 397,
												"nodeType": "InlineAssembly",
												"src": "8647:526:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 399,
															"name": "pendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "9192:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "9182:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9182:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "9182:23:1"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "8323:176:1",
										"text": "@dev Allows the owner to complete the two-step ownership handover to `pendingOwner`.\n Reverts if there is no existing ownership handover requested by `pendingOwner`."
									},
									"functionSelector": "f04e283e",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 395,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 394,
												"name": "onlyOwner",
												"nameLocations": [
													"8584:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "8584:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "8584:9:1"
										}
									],
									"name": "completeOwnershipHandover",
									"nameLocation": "8513:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "8547:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8539:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8539:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8538:22:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8594:0:1"
									},
									"scope": 430,
									"src": "8504:708:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "9611:129:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9673:61:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9687:37:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_OWNER_SLOT_NOT",
																				"nodeType": "YulIdentifier",
																				"src": "9707:15:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9703:20:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "9697:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9697:27:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9687:6:1"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 303,
														"isOffset": false,
														"isSlot": false,
														"src": "9707:15:1",
														"valueSize": 1
													},
													{
														"declaration": 407,
														"isOffset": false,
														"isSlot": false,
														"src": "9687:6:1",
														"valueSize": 1
													}
												],
												"id": 409,
												"nodeType": "InlineAssembly",
												"src": "9664:70:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "9501:43:1",
										"text": "@dev Returns the owner of the contract."
									},
									"functionSelector": "8da5cb5b",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "9558:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9563:2:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "9603:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "9595:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9595:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9594:16:1"
									},
									"scope": 430,
									"src": "9549:191:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "9982:296:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10044:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10107:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_HANDOVER_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "10113:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10100:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10100:33:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10153:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "pendingOwner",
																		"nodeType": "YulIdentifier",
																		"src": "10159:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10146:26:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10146:26:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10224:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10250:4:1",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10256:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "10240:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10240:21:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "10234:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10234:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10224:6:1"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 307,
														"isOffset": false,
														"isSlot": false,
														"src": "10113:19:1",
														"valueSize": 1
													},
													{
														"declaration": 414,
														"isOffset": false,
														"isSlot": false,
														"src": "10159:12:1",
														"valueSize": 1
													},
													{
														"declaration": 417,
														"isOffset": false,
														"isSlot": false,
														"src": "10224:6:1",
														"valueSize": 1
													}
												],
												"id": 419,
												"nodeType": "InlineAssembly",
												"src": "10035:237:1"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "9746:92:1",
										"text": "@dev Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`."
									},
									"functionSelector": "fee81cf4",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownershipHandoverExpiresAt",
									"nameLocation": "9852:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "9887:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "9879:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9878:22:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "9970:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "9962:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9962:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9961:16:1"
									},
									"scope": 430,
									"src": "9843:435:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "10657:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 424,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "10667:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10667:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "10667:13:1"
											},
											{
												"id": 427,
												"nodeType": "PlaceholderStatement",
												"src": "10690:1:1"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "10567:56:1",
										"text": "@dev Marks a function as only callable by the owner."
									},
									"id": 429,
									"name": "onlyOwner",
									"nameLocation": "10637:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10646:2:1"
									},
									"src": "10628:70:1",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 431,
							"src": "402:10298:1",
							"usedErrors": [
								264,
								267,
								270
							]
						}
					],
					"src": "32:10669:1"
				},
				"id": 1
			},
			"solady/src/tokens/ERC20.sol": {
				"ast": {
					"absolutePath": "solady/src/tokens/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							826
						]
					},
					"id": 827,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 433,
								"nodeType": "StructuredDocumentation",
								"src": "57:692:2",
								"text": "@notice Simple ERC20 + EIP-2612 implementation.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)\n @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\n @dev Note:\n The ERC20 standard allows minting and transferring to and from the zero address,\n minting and transferring zero tokens, as well as self-approvals.\n For performance, this implementation WILL NOT revert for such actions.\n Please add any checks with overrides if desired."
							},
							"fullyImplemented": false,
							"id": 826,
							"linearizedBaseContracts": [
								826
							],
							"name": "ERC20",
							"nameLocation": "767:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1062:41:2",
										"text": "@dev The total supply has overflowed."
									},
									"errorSelector": "e5cfe957",
									"id": 436,
									"name": "TotalSupplyOverflow",
									"nameLocation": "1114:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1133:2:2"
									},
									"src": "1108:28:2"
								},
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "1142:38:2",
										"text": "@dev The allowance has overflowed."
									},
									"errorSelector": "f9067066",
									"id": 439,
									"name": "AllowanceOverflow",
									"nameLocation": "1191:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:2:2"
									},
									"src": "1185:26:2"
								},
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "1217:39:2",
										"text": "@dev The allowance has underflowed."
									},
									"errorSelector": "8301ab38",
									"id": 442,
									"name": "AllowanceUnderflow",
									"nameLocation": "1267:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:2:2"
									},
									"src": "1261:27:2"
								},
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "1294:30:2",
										"text": "@dev Insufficient balance."
									},
									"errorSelector": "f4d678b8",
									"id": 445,
									"name": "InsufficientBalance",
									"nameLocation": "1335:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1354:2:2"
									},
									"src": "1329:28:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "1363:32:2",
										"text": "@dev Insufficient allowance."
									},
									"errorSelector": "13be252b",
									"id": 448,
									"name": "InsufficientAllowance",
									"nameLocation": "1406:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1427:2:2"
									},
									"src": "1400:30:2"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "1436:31:2",
										"text": "@dev The permit is invalid."
									},
									"errorSelector": "ddafbaef",
									"id": 451,
									"name": "InvalidPermit",
									"nameLocation": "1478:13:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1491:2:2"
									},
									"src": "1472:22:2"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "1500:32:2",
										"text": "@dev The permit has expired."
									},
									"errorSelector": "1a15a3cc",
									"id": 454,
									"name": "PermitExpired",
									"nameLocation": "1543:13:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1556:2:2"
									},
									"src": "1537:22:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "1848:73:2",
										"text": "@dev Emitted when `amount` tokens is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 463,
									"name": "Transfer",
									"nameLocation": "1932:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1957:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1941:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1979:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1963:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1991:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1983:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1940:58:2"
									},
									"src": "1926:73:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "2005:85:2",
										"text": "@dev Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 472,
									"name": "Approval",
									"nameLocation": "2101:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2126:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2110:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2149:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2133:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2166:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2158:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:64:2"
									},
									"src": "2095:79:2"
								},
								{
									"constant": true,
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "2180:65:2",
										"text": "@dev `keccak256(bytes(\"Transfer(address,address,uint256)\"))`."
									},
									"id": 476,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "2275:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "2250:127:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 474,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2250:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 475,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2311:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2384:65:2",
										"text": "@dev `keccak256(bytes(\"Approval(address,address,uint256)\"))`."
									},
									"id": 480,
									"mutability": "constant",
									"name": "_APPROVAL_EVENT_SIGNATURE",
									"nameLocation": "2479:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "2454:127:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2454:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307838633562653165356562656337643562643134663731343237643165383466336464303331346330663762323239316535623230306163386337633362393235",
										"id": 479,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2515:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_63486140976153616755203102783360879283472101686154884697241723088393386309925_by_1",
											"typeString": "int_const 6348...(69 digits omitted)...9925"
										},
										"value": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2871:47:2",
										"text": "@dev The storage slot for the total supply."
									},
									"id": 484,
									"mutability": "constant",
									"name": "_TOTAL_SUPPLY_SLOT",
									"nameLocation": "2948:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "2923:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 482,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2923:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078303533343563646637376562363866343463",
										"id": 483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2969:20:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96006856662521017420_by_1",
											"typeString": "int_const 96006856662521017420"
										},
										"value": "0x05345cdf77eb68f44c"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "2996:203:2",
										"text": "@dev The balance slot of `owner` is given by:\n ```\n     mstore(0x0c, _BALANCE_SLOT_SEED)\n     mstore(0x00, owner)\n     let balanceSlot := keccak256(0x0c, 0x20)\n ```"
									},
									"id": 488,
									"mutability": "constant",
									"name": "_BALANCE_SLOT_SEED",
									"nameLocation": "3229:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "3204:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 486,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3204:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783837613231316132",
										"id": 487,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3250:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2275545506_by_1",
											"typeString": "int_const 2275545506"
										},
										"value": "0x87a211a2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "3267:256:2",
										"text": "@dev The allowance slot of (`owner`, `spender`) is given by:\n ```\n     mstore(0x20, spender)\n     mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n     mstore(0x00, owner)\n     let allowanceSlot := keccak256(0x0c, 0x34)\n ```"
									},
									"id": 492,
									"mutability": "constant",
									"name": "_ALLOWANCE_SLOT_SEED",
									"nameLocation": "3553:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "3528:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 490,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3528:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783766356539663230",
										"id": 491,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3576:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2136907552_by_1",
											"typeString": "int_const 2136907552"
										},
										"value": "0x7f5e9f20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "3593:198:2",
										"text": "@dev The nonce slot of `owner` is given by:\n ```\n     mstore(0x0c, _NONCES_SLOT_SEED)\n     mstore(0x00, owner)\n     let nonceSlot := keccak256(0x0c, 0x20)\n ```"
									},
									"id": 496,
									"mutability": "constant",
									"name": "_NONCES_SLOT_SEED",
									"nameLocation": "3821:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "3796:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 494,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3796:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783338333737353038",
										"id": 495,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3841:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_943158536_by_1",
											"typeString": "int_const 943158536"
										},
										"value": "0x38377508"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "4141:39:2",
										"text": "@dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4194:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:2:2"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4230:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 499,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4230:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:15:2"
									},
									"scope": 826,
									"src": "4185:60:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "4251:41:2",
										"text": "@dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4306:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4312:2:2"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4344:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 505,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4344:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:15:2"
									},
									"scope": 826,
									"src": "4297:62:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "4476:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4493:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 513,
												"id": 515,
												"nodeType": "Return",
												"src": "4486:9:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "4365:50:2",
										"text": "@dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4429:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4437:2:2"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4469:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 511,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4469:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4468:7:2"
									},
									"scope": 826,
									"src": "4420:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "4915:127:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4977:59:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4991:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "5007:18:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "5001:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5001:25:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "5007:18:2",
														"valueSize": 1
													},
													{
														"declaration": 521,
														"isOffset": false,
														"isSlot": false,
														"src": "4991:6:2",
														"valueSize": 1
													}
												],
												"id": 523,
												"nodeType": "InlineAssembly",
												"src": "4968:68:2"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "4791:51:2",
										"text": "@dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4856:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4867:2:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4907:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4899:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4898:16:2"
									},
									"scope": 826,
									"src": "4847:195:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "5187:207:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5249:139:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5270:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "5276:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5315:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "5321:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5308:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5308:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5340:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5366:4:2",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5372:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "5356:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5356:21:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "5350:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5350:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 488,
														"isOffset": false,
														"isSlot": false,
														"src": "5276:18:2",
														"valueSize": 1
													},
													{
														"declaration": 528,
														"isOffset": false,
														"isSlot": false,
														"src": "5321:5:2",
														"valueSize": 1
													},
													{
														"declaration": 531,
														"isOffset": false,
														"isSlot": false,
														"src": "5340:6:2",
														"valueSize": 1
													}
												],
												"id": 533,
												"nodeType": "InlineAssembly",
												"src": "5240:148:2"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "5048:55:2",
										"text": "@dev Returns the amount of tokens owned by `owner`."
									},
									"functionSelector": "70a08231",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5117:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5135:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "5127:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5127:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5126:15:2"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5179:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "5171:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5170:16:2"
									},
									"scope": 826,
									"src": "5108:286:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "5621:243:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5683:175:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5704:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "5710:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5697:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5697:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5697:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5738:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "5744:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5731:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5731:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5731:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5785:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "5791:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5778:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5778:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5778:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5810:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5836:4:2",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5842:4:2",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "5826:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5826:21:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "5820:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5820:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5810:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "5744:20:2",
														"valueSize": 1
													},
													{
														"declaration": 538,
														"isOffset": false,
														"isSlot": false,
														"src": "5791:5:2",
														"valueSize": 1
													},
													{
														"declaration": 543,
														"isOffset": false,
														"isSlot": false,
														"src": "5810:6:2",
														"valueSize": 1
													},
													{
														"declaration": 540,
														"isOffset": false,
														"isSlot": false,
														"src": "5710:7:2",
														"valueSize": 1
													}
												],
												"id": 545,
												"nodeType": "InlineAssembly",
												"src": "5674:184:2"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "5400:84:2",
										"text": "@dev Returns the amount of tokens that `spender` can spend on behalf of `owner`."
									},
									"functionSelector": "dd62ed3e",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5498:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5516:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5508:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5508:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5531:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5523:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5507:32:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5609:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5601:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5600:16:2"
									},
									"scope": 826,
									"src": "5489:375:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "6075:493:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6137:404:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6222:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "6228:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6215:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6215:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6215:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6256:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "6262:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6249:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6249:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6303:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "6309:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6309:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6296:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6296:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6296:22:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6348:4:2",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:4:2",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "6338:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6338:21:2"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "6361:6:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "6331:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6331:37:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6430:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "6436:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6423:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6423:20:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6423:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6461:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6467:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "6473:25:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "6500:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6500:8:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6514:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6524:4:2",
																						"type": "",
																						"value": "0x2c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "6518:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6518:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "6510:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6510:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "6456:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:75:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6456:75:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "6262:20:2",
														"valueSize": 1
													},
													{
														"declaration": 480,
														"isOffset": false,
														"isSlot": false,
														"src": "6473:25:2",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "6361:6:2",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "6436:6:2",
														"valueSize": 1
													},
													{
														"declaration": 550,
														"isOffset": false,
														"isSlot": false,
														"src": "6228:7:2",
														"valueSize": 1
													}
												],
												"id": 557,
												"nodeType": "InlineAssembly",
												"src": "6128:413:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6557:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 556,
												"id": 559,
												"nodeType": "Return",
												"src": "6550:11:2"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5870:120:2",
										"text": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Emits a {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6004:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6012:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6037:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6029:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6011:33:2"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6069:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6069:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6068:6:2"
									},
									"scope": 826,
									"src": "5995:573:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "6794:964:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6856:875:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6939:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "6945:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6932:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6932:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6932:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6973:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "6979:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6966:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6966:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6966:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7020:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "7026:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7026:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7013:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7013:22:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7048:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7079:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7085:4:2",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "7069:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7069:21:2"
															},
															"variables": [
																{
																	"name": "allowanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "7052:13:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7103:43:2",
															"value": {
																"arguments": [
																	{
																		"name": "allowanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "7132:13:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "7126:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7126:20:2"
															},
															"variables": [
																{
																	"name": "allowanceBefore",
																	"nodeType": "YulTypedName",
																	"src": "7107:15:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7196:54:2",
															"value": {
																"arguments": [
																	{
																		"name": "allowanceBefore",
																		"nodeType": "YulIdentifier",
																		"src": "7222:15:2"
																	},
																	{
																		"name": "difference",
																		"nodeType": "YulIdentifier",
																		"src": "7239:10:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7218:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7218:32:2"
															},
															"variables": [
																{
																	"name": "allowanceAfter",
																	"nodeType": "YulTypedName",
																	"src": "7200:14:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7339:117:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7364:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7370:10:2",
																					"type": "",
																					"value": "0xf9067066"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7357:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7357:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7357:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7431:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7437:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7424:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7424:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7424:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "allowanceAfter",
																		"nodeType": "YulIdentifier",
																		"src": "7306:14:2"
																	},
																	{
																		"name": "allowanceBefore",
																		"nodeType": "YulIdentifier",
																		"src": "7322:15:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7303:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:35:2"
															},
															"nodeType": "YulIf",
															"src": "7300:156:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "allowanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "7520:13:2"
																	},
																	{
																		"name": "allowanceAfter",
																		"nodeType": "YulIdentifier",
																		"src": "7535:14:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "7513:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7513:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7513:37:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7612:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "allowanceAfter",
																		"nodeType": "YulIdentifier",
																		"src": "7618:14:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7605:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7605:28:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7651:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7657:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "7663:25:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "7690:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7690:8:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7704:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7714:4:2",
																						"type": "",
																						"value": "0x2c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "7708:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7708:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "7700:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7700:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "7646:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7646:75:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7646:75:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "6979:20:2",
														"valueSize": 1
													},
													{
														"declaration": 480,
														"isOffset": false,
														"isSlot": false,
														"src": "7663:25:2",
														"valueSize": 1
													},
													{
														"declaration": 566,
														"isOffset": false,
														"isSlot": false,
														"src": "7239:10:2",
														"valueSize": 1
													},
													{
														"declaration": 564,
														"isOffset": false,
														"isSlot": false,
														"src": "6945:7:2",
														"valueSize": 1
													}
												],
												"id": 571,
												"nodeType": "InlineAssembly",
												"src": "6847:884:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 570,
												"id": 573,
												"nodeType": "Return",
												"src": "7740:11:2"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "6574:121:2",
										"text": "@dev Atomically increases the allowance granted to `spender` by the caller.\n Emits a {Approval} event."
									},
									"functionSelector": "39509351",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6709:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6735:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "6727:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "difference",
												"nameLocation": "6752:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "6744:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6726:37:2"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "6788:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6788:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6787:6:2"
									},
									"scope": 826,
									"src": "6700:1058:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "7984:941:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8046:852:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8129:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "8135:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8122:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8122:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8122:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8163:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "8169:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8156:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8156:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8156:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8210:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "8216:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8216:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8203:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8203:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8203:22:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8238:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8269:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8275:4:2",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8259:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8259:21:2"
															},
															"variables": [
																{
																	"name": "allowanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "8242:13:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8293:43:2",
															"value": {
																"arguments": [
																	{
																		"name": "allowanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "8322:13:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "8316:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8316:20:2"
															},
															"variables": [
																{
																	"name": "allowanceBefore",
																	"nodeType": "YulTypedName",
																	"src": "8297:15:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8425:118:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8450:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8456:10:2",
																					"type": "",
																					"value": "0x8301ab38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8443:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8443:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8443:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8518:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8524:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8511:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8511:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8511:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "allowanceBefore",
																		"nodeType": "YulIdentifier",
																		"src": "8396:15:2"
																	},
																	{
																		"name": "difference",
																		"nodeType": "YulIdentifier",
																		"src": "8413:10:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8393:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8393:31:2"
															},
															"nodeType": "YulIf",
															"src": "8390:153:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8613:54:2",
															"value": {
																"arguments": [
																	{
																		"name": "allowanceBefore",
																		"nodeType": "YulIdentifier",
																		"src": "8639:15:2"
																	},
																	{
																		"name": "difference",
																		"nodeType": "YulIdentifier",
																		"src": "8656:10:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8635:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8635:32:2"
															},
															"variables": [
																{
																	"name": "allowanceAfter",
																	"nodeType": "YulTypedName",
																	"src": "8617:14:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "allowanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "8687:13:2"
																	},
																	{
																		"name": "allowanceAfter",
																		"nodeType": "YulIdentifier",
																		"src": "8702:14:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "8680:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8680:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8680:37:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8779:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "allowanceAfter",
																		"nodeType": "YulIdentifier",
																		"src": "8785:14:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8772:28:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8818:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8824:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "8830:25:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "8857:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:8:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8871:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8881:4:2",
																						"type": "",
																						"value": "0x2c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "8875:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8875:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "8867:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8867:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "8813:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8813:75:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8813:75:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "8169:20:2",
														"valueSize": 1
													},
													{
														"declaration": 480,
														"isOffset": false,
														"isSlot": false,
														"src": "8830:25:2",
														"valueSize": 1
													},
													{
														"declaration": 580,
														"isOffset": false,
														"isSlot": false,
														"src": "8413:10:2",
														"valueSize": 1
													},
													{
														"declaration": 580,
														"isOffset": false,
														"isSlot": false,
														"src": "8656:10:2",
														"valueSize": 1
													},
													{
														"declaration": 578,
														"isOffset": false,
														"isSlot": false,
														"src": "8135:7:2",
														"valueSize": 1
													}
												],
												"id": 585,
												"nodeType": "InlineAssembly",
												"src": "8037:861:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8914:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 584,
												"id": 587,
												"nodeType": "Return",
												"src": "8907:11:2"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "7764:121:2",
										"text": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n Emits a {Approval} event."
									},
									"functionSelector": "a457c2d7",
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7899:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7925:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "7917:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7917:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "difference",
												"nameLocation": "7942:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "7934:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7916:37:2"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "7978:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7978:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7977:6:2"
									},
									"scope": 826,
									"src": "7890:1035:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "9188:1330:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 600,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9219:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9223:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9219:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "9231:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "9235:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9198:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9198:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "9198:44:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9304:1134:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9385:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "9391:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9378:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9378:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9378:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9430:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "9436:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9436:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9423:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9423:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9423:22:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9458:44:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9491:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9497:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9481:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9481:21:2"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "9462:15:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9515:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "9540:15:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "9534:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9534:22:2"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nodeType": "YulTypedName",
																	"src": "9519:11:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9643:119:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9668:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9674:10:2",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9661:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9661:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9661:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9737:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9743:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9730:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9730:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9730:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "9622:6:2"
																	},
																	{
																		"name": "fromBalance",
																		"nodeType": "YulIdentifier",
																		"src": "9630:11:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9619:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9619:23:2"
															},
															"nodeType": "YulIf",
															"src": "9616:146:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "9837:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nodeType": "YulIdentifier",
																				"src": "9858:11:2"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "9871:6:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9854:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9854:24:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "9830:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9830:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9830:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9948:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "9954:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9941:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9941:16:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9941:16:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9970:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10001:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10007:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9991:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9991:21:2"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "9974:13:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "10216:13:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nodeType": "YulIdentifier",
																						"src": "10241:13:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "10235:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10235:20:2"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "10257:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10231:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10231:33:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "10209:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10209:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10209:56:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10327:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "10333:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10320:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10320:20:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10320:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10358:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10364:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "10370:25:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "10397:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10397:8:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10411:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10421:4:2",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "10415:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10415:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "10407:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10407:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "10353:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10353:75:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10353:75:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 488,
														"isOffset": false,
														"isSlot": false,
														"src": "9391:18:2",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "10370:25:2",
														"valueSize": 1
													},
													{
														"declaration": 594,
														"isOffset": false,
														"isSlot": false,
														"src": "10257:6:2",
														"valueSize": 1
													},
													{
														"declaration": 594,
														"isOffset": false,
														"isSlot": false,
														"src": "10333:6:2",
														"valueSize": 1
													},
													{
														"declaration": 594,
														"isOffset": false,
														"isSlot": false,
														"src": "9622:6:2",
														"valueSize": 1
													},
													{
														"declaration": 594,
														"isOffset": false,
														"isSlot": false,
														"src": "9871:6:2",
														"valueSize": 1
													},
													{
														"declaration": 592,
														"isOffset": false,
														"isSlot": false,
														"src": "9954:2:2",
														"valueSize": 1
													}
												],
												"id": 606,
												"nodeType": "InlineAssembly",
												"src": "9295:1143:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 608,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10467:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10471:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10467:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "10479:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "10483:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "10447:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10447:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "10447:43:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10507:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 598,
												"id": 615,
												"nodeType": "Return",
												"src": "10500:11:2"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "8931:176:2",
										"text": "@dev Transfer `amount` tokens from the caller to `to`.\n Requirements:\n - `from` must at least have `amount`.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "9121:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9138:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "9130:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9130:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9150:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "9142:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9142:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9129:28:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "9182:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9182:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9181:6:2"
									},
									"scope": 826,
									"src": "9112:1406:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "10980:2109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 630,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "11011:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "11017:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "11021:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "10990:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10990:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "10990:38:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "11090:1925:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11104:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11121:2:2",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "11125:4:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "11117:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11117:13:2"
															},
															"variables": [
																{
																	"name": "from_",
																	"nodeType": "YulTypedName",
																	"src": "11108:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11212:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "11218:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11218:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11205:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11205:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11205:22:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11247:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from_",
																				"nodeType": "YulIdentifier",
																				"src": "11256:5:2"
																			},
																			{
																				"name": "_ALLOWANCE_SLOT_SEED",
																				"nodeType": "YulIdentifier",
																				"src": "11263:20:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11253:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11253:31:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11240:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11240:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11240:45:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11298:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11329:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11335:4:2",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "11319:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11319:21:2"
															},
															"variables": [
																{
																	"name": "allowanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "11302:13:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11353:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "allowanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "11377:13:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "11371:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11371:20:2"
															},
															"variables": [
																{
																	"name": "allowance_",
																	"nodeType": "YulTypedName",
																	"src": "11357:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11504:396:2",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11629:133:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11658:4:2",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11664:10:2",
																								"type": "",
																								"value": "0x13be252b"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "11651:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11651:24:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11651:24:2"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11733:4:2",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11739:4:2",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "11726:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11726:18:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11726:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "amount",
																					"nodeType": "YulIdentifier",
																					"src": "11609:6:2"
																				},
																				{
																					"name": "allowance_",
																					"nodeType": "YulIdentifier",
																					"src": "11617:10:2"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "11606:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11606:22:2"
																		},
																		"nodeType": "YulIf",
																		"src": "11603:159:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "allowanceSlot",
																					"nodeType": "YulIdentifier",
																					"src": "11847:13:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "allowance_",
																							"nodeType": "YulIdentifier",
																							"src": "11866:10:2"
																						},
																						{
																							"name": "amount",
																							"nodeType": "YulIdentifier",
																							"src": "11878:6:2"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "11862:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11862:23:2"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "11840:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11840:46:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11840:46:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "allowance_",
																				"nodeType": "YulIdentifier",
																				"src": "11483:10:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11499:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "11495:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11495:6:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11480:22:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11473:30:2"
															},
															"nodeType": "YulIf",
															"src": "11470:430:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11980:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from_",
																				"nodeType": "YulIdentifier",
																				"src": "11989:5:2"
																			},
																			{
																				"name": "_BALANCE_SLOT_SEED",
																				"nodeType": "YulIdentifier",
																				"src": "11996:18:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11986:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11986:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11973:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11973:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11973:43:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12029:44:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12062:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12068:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "12052:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12052:21:2"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "12033:15:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12086:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "12111:15:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "12105:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12105:22:2"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nodeType": "YulTypedName",
																	"src": "12090:11:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12214:119:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12239:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12245:10:2",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12232:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12232:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12232:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12308:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12314:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12301:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12301:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12301:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "12193:6:2"
																	},
																	{
																		"name": "fromBalance",
																		"nodeType": "YulIdentifier",
																		"src": "12201:11:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12190:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12190:23:2"
															},
															"nodeType": "YulIf",
															"src": "12187:146:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "12408:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nodeType": "YulIdentifier",
																				"src": "12429:11:2"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "12442:6:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12425:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12425:24:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "12401:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12401:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12401:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12519:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "12525:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12512:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12512:16:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12512:16:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12541:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12572:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12578:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "12562:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12562:21:2"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "12545:13:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "12787:13:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nodeType": "YulIdentifier",
																						"src": "12812:13:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "12806:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12806:20:2"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "12828:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12802:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12802:33:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "12780:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12780:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12780:56:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12898:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "12904:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12891:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12891:20:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12891:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12929:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12935:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "12941:25:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12972:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from_",
																				"nodeType": "YulIdentifier",
																				"src": "12976:5:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "12968:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12968:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12988:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12998:4:2",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "12992:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12992:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "12984:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12984:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "12924:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12924:81:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12924:81:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "11263:20:2",
														"valueSize": 1
													},
													{
														"declaration": 488,
														"isOffset": false,
														"isSlot": false,
														"src": "11996:18:2",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "12941:25:2",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "11609:6:2",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "11878:6:2",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "12193:6:2",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "12442:6:2",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "12828:6:2",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "12904:6:2",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "11125:4:2",
														"valueSize": 1
													},
													{
														"declaration": 622,
														"isOffset": false,
														"isSlot": false,
														"src": "12525:2:2",
														"valueSize": 1
													}
												],
												"id": 635,
												"nodeType": "InlineAssembly",
												"src": "11081:1934:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "13044:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "13050:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "13054:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 636,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "13024:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13024:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "13024:37:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13078:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 628,
												"id": 643,
												"nodeType": "Return",
												"src": "13071:11:2"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "10524:357:2",
										"text": "@dev Transfers `amount` tokens from `from` to `to`.\n Note: Does not update the allowance if it is the maximum uint256 value.\n Requirements:\n - `from` must at least have `amount`.\n - The caller must have at least `amount` of allowance to transfer the tokens of `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10895:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10916:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10908:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10908:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10930:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10922:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10942:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10934:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10907:42:2"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10974:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10974:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10973:6:2"
									},
									"scope": 826,
									"src": "10886:2203:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "13579:264:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13641:196:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13720:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_NONCES_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "13726:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13713:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13713:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13713:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13764:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "13770:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13757:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13757:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13757:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13789:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13815:4:2",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13821:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "13805:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13805:21:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "13799:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13799:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13789:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 496,
														"isOffset": false,
														"isSlot": false,
														"src": "13726:17:2",
														"valueSize": 1
													},
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "13770:5:2",
														"valueSize": 1
													},
													{
														"declaration": 651,
														"isOffset": false,
														"isSlot": false,
														"src": "13789:6:2",
														"valueSize": 1
													}
												],
												"id": 653,
												"nodeType": "InlineAssembly",
												"src": "13632:205:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "13378:120:2",
										"text": "@dev Returns the current nonce for `owner`.\n This value is used to compute the signature for EIP-2612 permit."
									},
									"functionSelector": "7ecebe00",
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "13512:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13527:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "13519:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13519:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13518:15:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "13571:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "13563:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13563:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13562:16:2"
									},
									"scope": 826,
									"src": "13503:340:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "14216:2821:2",
										"statements": [
											{
												"assignments": [
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nameLocation": "14234:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "14226:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 673,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14226:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 675,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "14252:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14252:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14226:44:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14332:2699:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14391:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14406:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14400:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14400:11:2"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "14395:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14523:113:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14548:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14554:10:2",
																					"type": "",
																					"value": "0x1a15a3cc"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14541:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14541:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14541:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14611:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14617:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14604:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14604:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14604:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "timestamp",
																			"nodeType": "YulIdentifier",
																			"src": "14500:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14500:11:2"
																	},
																	{
																		"name": "deadline",
																		"nodeType": "YulIdentifier",
																		"src": "14513:8:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14497:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14497:25:2"
															},
															"nodeType": "YulIf",
															"src": "14494:142:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14689:32:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14702:2:2",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14710:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "14714:5:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14706:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14706:14:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14698:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14698:23:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "14689:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14734:36:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14749:2:2",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14757:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "spender",
																				"nodeType": "YulIdentifier",
																				"src": "14761:7:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14753:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14753:16:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14745:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14745:25:2"
															},
															"variableNames": [
																{
																	"name": "spender",
																	"nodeType": "YulIdentifier",
																	"src": "14734:7:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14848:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_NONCES_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "14854:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14841:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14841:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14841:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14892:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14898:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14885:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14885:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14885:19:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14917:38:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14944:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14950:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "14934:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14934:21:2"
															},
															"variables": [
																{
																	"name": "nonceSlot",
																	"nodeType": "YulTypedName",
																	"src": "14921:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14968:34:2",
															"value": {
																"arguments": [
																	{
																		"name": "nonceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "14992:9:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "14986:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14986:16:2"
															},
															"variables": [
																{
																	"name": "nonceValue",
																	"nodeType": "YulTypedName",
																	"src": "14972:10:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "nonceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "15076:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "nonceValue",
																				"nodeType": "YulIdentifier",
																				"src": "15091:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15103:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15087:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15087:18:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "15069:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15069:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15069:37:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "15322:1:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15325:66:2",
																		"type": "",
																		"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15315:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15315:77:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15315:77:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "15416:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15419:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15412:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15412:12:2"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15426:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15405:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15405:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15405:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "15456:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15459:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15452:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15452:12:2"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "15466:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15445:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15445:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15445:29:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "15498:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15501:4:2",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15494:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15494:12:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15508:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15487:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15487:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15487:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "15538:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15541:4:2",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15534:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15534:12:2"
																	},
																	{
																		"name": "nonceValue",
																		"nodeType": "YulIdentifier",
																		"src": "15548:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15527:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15527:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15527:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "15583:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15586:4:2",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15579:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15579:12:2"
																	},
																	{
																		"name": "deadline",
																		"nodeType": "YulIdentifier",
																		"src": "15593:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15572:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15572:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15572:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15661:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15664:6:2",
																		"type": "",
																		"value": "0x1901"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15654:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15654:17:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15654:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15691:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "domainSeparator",
																		"nodeType": "YulIdentifier",
																		"src": "15697:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15684:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15684:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15684:29:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15733:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "15749:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15752:4:2",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "15739:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15739:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15726:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15726:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15726:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15825:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15838:4:2",
																				"type": "",
																				"value": "0x1e"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15844:4:2",
																				"type": "",
																				"value": "0x42"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "15828:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15828:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15818:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15818:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15818:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15870:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15880:4:2",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "15886:1:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15876:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15876:12:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15863:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15863:26:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15863:26:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15909:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "15915:1:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15902:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15902:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15902:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15937:4:2",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"name": "s",
																		"nodeType": "YulIdentifier",
																		"src": "15943:1:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15930:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15930:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15930:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "15973:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15973:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15980:1:2",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15983:1:2",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15986:4:2",
																				"type": "",
																				"value": "0x80"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15992:4:2",
																				"type": "",
																				"value": "0x20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15998:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "staticcall",
																			"nodeType": "YulIdentifier",
																			"src": "15962:10:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15962:41:2"
																	}
																],
																"functionName": {
																	"name": "pop",
																	"nodeType": "YulIdentifier",
																	"src": "15958:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15958:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15958:46:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16431:113:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16456:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16462:10:2",
																					"type": "",
																					"value": "0xddafbaef"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16449:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16449:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16449:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16519:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16525:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16512:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16512:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16512:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "16404:14:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16404:16:2"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "16398:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16398:23:2"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "16423:5:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16395:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16395:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16388:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16388:42:2"
															},
															"nodeType": "YulIf",
															"src": "16385:159:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16679:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16692:3:2",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"name": "_ALLOWANCE_SLOT_SEED",
																						"nodeType": "YulIdentifier",
																						"src": "16697:20:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "16688:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16688:30:2"
																			},
																			{
																				"name": "spender",
																				"nodeType": "YulIdentifier",
																				"src": "16720:7:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "16685:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16685:43:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16672:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16672:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16672:57:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16759:4:2",
																				"type": "",
																				"value": "0x2c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16765:4:2",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "16749:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16749:21:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16772:5:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "16742:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16742:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16742:36:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "16842:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16845:4:2",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16838:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16838:12:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16852:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "16858:25:2"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "16885:5:2"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "16892:7:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "16833:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16833:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16833:67:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16920:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "16926:1:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16913:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16913:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16913:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16984:4:2",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16990:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16977:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16977:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16977:15:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "16697:20:2",
														"valueSize": 1
													},
													{
														"declaration": 480,
														"isOffset": false,
														"isSlot": false,
														"src": "16858:25:2",
														"valueSize": 1
													},
													{
														"declaration": 496,
														"isOffset": false,
														"isSlot": false,
														"src": "14854:17:2",
														"valueSize": 1
													},
													{
														"declaration": 664,
														"isOffset": false,
														"isSlot": false,
														"src": "14513:8:2",
														"valueSize": 1
													},
													{
														"declaration": 664,
														"isOffset": false,
														"isSlot": false,
														"src": "15593:8:2",
														"valueSize": 1
													},
													{
														"declaration": 674,
														"isOffset": false,
														"isSlot": false,
														"src": "15697:15:2",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "14689:5:2",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "14714:5:2",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "14898:5:2",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "15426:5:2",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "16423:5:2",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "16885:5:2",
														"valueSize": 1
													},
													{
														"declaration": 668,
														"isOffset": false,
														"isSlot": false,
														"src": "15915:1:2",
														"valueSize": 1
													},
													{
														"declaration": 670,
														"isOffset": false,
														"isSlot": false,
														"src": "15943:1:2",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "14734:7:2",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "14761:7:2",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "15466:7:2",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "16720:7:2",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "16892:7:2",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "15886:1:2",
														"valueSize": 1
													},
													{
														"declaration": 662,
														"isOffset": false,
														"isSlot": false,
														"src": "15508:5:2",
														"valueSize": 1
													},
													{
														"declaration": 662,
														"isOffset": false,
														"isSlot": false,
														"src": "16772:5:2",
														"valueSize": 1
													}
												],
												"id": 678,
												"nodeType": "InlineAssembly",
												"src": "14323:2708:2"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "13849:173:2",
										"text": "@dev Sets `value` as the allowance of `spender` over the tokens of `owner`,\n authorized by a signed approval by `owner`.\n Emits a {Approval} event."
									},
									"functionSelector": "d505accf",
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "14036:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14060:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "14052:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14052:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14083:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "14075:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "14100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "14131:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "14123:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14123:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "14155:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "14149:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 665,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "14174:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "14166:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 667,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14166:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "14193:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "14185:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 669,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14042:158:2"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14216:0:2"
									},
									"scope": 826,
									"src": "14027:3010:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "17169:989:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17231:78:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17245:21:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17261:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17255:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17255:11:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17245:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 684,
														"isOffset": false,
														"isSlot": false,
														"src": "17245:6:2",
														"valueSize": 1
													}
												],
												"id": 686,
												"nodeType": "InlineAssembly",
												"src": "17222:87:2"
											},
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "nameHash",
														"nameLocation": "17420:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "17412:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 687,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17412:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 692,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "17447:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																			"typeString": "function () view returns (string memory)"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17447:6:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17441:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 690,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "17441:5:2",
																	"typeDescriptions": {}
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17441:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 689,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "17431:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17431:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17412:43:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17517:635:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17531:15:2",
															"value": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "17540:6:2"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "17535:1:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "17723:1:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17726:66:2",
																		"type": "",
																		"value": "0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17716:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17716:77:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17716:77:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "17817:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17820:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17813:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17813:12:2"
																	},
																	{
																		"name": "nameHash",
																		"nodeType": "YulIdentifier",
																		"src": "17827:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17806:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17806:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17806:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "17936:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17939:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17932:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17932:12:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17946:66:2",
																		"type": "",
																		"value": "0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17925:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17925:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17925:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "18037:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18040:4:2",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18033:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18033:12:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "chainid",
																			"nodeType": "YulIdentifier",
																			"src": "18047:7:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18047:9:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18026:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18026:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18026:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "18081:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18084:4:2",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18077:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18077:12:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "18091:7:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18091:9:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18070:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18070:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18070:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18114:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "18134:1:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18137:4:2",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "18124:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18124:18:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18114:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 688,
														"isOffset": false,
														"isSlot": false,
														"src": "17827:8:2",
														"valueSize": 1
													},
													{
														"declaration": 684,
														"isOffset": false,
														"isSlot": false,
														"src": "17540:6:2",
														"valueSize": 1
													},
													{
														"declaration": 684,
														"isOffset": false,
														"isSlot": false,
														"src": "18114:6:2",
														"valueSize": 1
													}
												],
												"id": 697,
												"nodeType": "InlineAssembly",
												"src": "17508:644:2"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "17043:48:2",
										"text": "@dev Returns the EIP-2612 domains separator."
									},
									"functionSelector": "3644e515",
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "17105:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17121:2:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17161:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17153:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 683,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17152:16:2"
									},
									"scope": 826,
									"src": "17096:1062:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "18622:1112:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18661:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18653:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 708,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18653:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18653:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "18665:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "18669:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "18632:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18632:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "18632:44:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18738:937:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18752:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "18783:18:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "18777:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18777:25:2"
															},
															"variables": [
																{
																	"name": "totalSupplyBefore",
																	"nodeType": "YulTypedName",
																	"src": "18756:17:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18815:54:2",
															"value": {
																"arguments": [
																	{
																		"name": "totalSupplyBefore",
																		"nodeType": "YulIdentifier",
																		"src": "18843:17:2"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "18862:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18839:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18839:30:2"
															},
															"variables": [
																{
																	"name": "totalSupplyAfter",
																	"nodeType": "YulTypedName",
																	"src": "18819:16:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18978:119:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19003:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19009:10:2",
																					"type": "",
																					"value": "0xe5cfe957"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18996:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18996:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18996:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19072:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19078:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19065:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19065:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19065:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "totalSupplyAfter",
																		"nodeType": "YulIdentifier",
																		"src": "18941:16:2"
																	},
																	{
																		"name": "totalSupplyBefore",
																		"nodeType": "YulIdentifier",
																		"src": "18959:17:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18938:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18938:39:2"
															},
															"nodeType": "YulIf",
															"src": "18935:162:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "19164:18:2"
																	},
																	{
																		"name": "totalSupplyAfter",
																		"nodeType": "YulIdentifier",
																		"src": "19184:16:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "19157:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19157:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19157:44:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19281:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "19287:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19274:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19274:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19274:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19326:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "19332:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19319:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19319:16:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19319:16:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19348:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19379:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19385:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "19369:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19369:21:2"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "19352:13:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19460:13:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nodeType": "YulIdentifier",
																						"src": "19485:13:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "19479:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19479:20:2"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "19501:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19475:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19475:33:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "19453:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19453:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19453:56:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19571:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "19577:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19564:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19564:20:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19564:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19602:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19608:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "19614:25:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19641:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19648:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19658:4:2",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "19652:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19652:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "19644:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19644:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "19597:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19597:68:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19597:68:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 488,
														"isOffset": false,
														"isSlot": false,
														"src": "19287:18:2",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "18783:18:2",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "19164:18:2",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "19614:25:2",
														"valueSize": 1
													},
													{
														"declaration": 704,
														"isOffset": false,
														"isSlot": false,
														"src": "18862:6:2",
														"valueSize": 1
													},
													{
														"declaration": 704,
														"isOffset": false,
														"isSlot": false,
														"src": "19501:6:2",
														"valueSize": 1
													},
													{
														"declaration": 704,
														"isOffset": false,
														"isSlot": false,
														"src": "19577:6:2",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "19332:2:2",
														"valueSize": 1
													}
												],
												"id": 716,
												"nodeType": "InlineAssembly",
												"src": "18729:946:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19712:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19704:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 718,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19704:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19704:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "19716:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "19720:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 717,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "19684:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19684:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "19684:43:2"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "18447:110:2",
										"text": "@dev Mints `amount` tokens to `to`, increasing the total supply.\n Emits a {Transfer} event."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18571:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18585:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "18577:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18577:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18597:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "18589:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18589:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18576:28:2"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18622:0:2"
									},
									"scope": 826,
									"src": "18562:1172:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "20202:1057:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "20233:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20247:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20239:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 737,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20239:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20239:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "20251:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 735,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "20212:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20212:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "20212:46:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20320:878:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20401:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "20407:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20394:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20394:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20394:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20446:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "20452:4:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20439:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20439:18:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20439:18:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20470:44:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20503:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20509:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "20493:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20493:21:2"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "20474:15:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20527:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "20552:15:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "20546:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20546:22:2"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nodeType": "YulTypedName",
																	"src": "20531:11:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20655:119:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20680:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20686:10:2",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20673:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20673:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20673:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20749:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20755:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20742:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20742:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20742:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "20634:6:2"
																	},
																	{
																		"name": "fromBalance",
																		"nodeType": "YulIdentifier",
																		"src": "20642:11:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20631:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20631:23:2"
															},
															"nodeType": "YulIf",
															"src": "20628:146:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "20849:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nodeType": "YulIdentifier",
																				"src": "20870:11:2"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "20883:6:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20866:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20866:24:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "20842:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20842:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20842:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "20971:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_TOTAL_SUPPLY_SLOT",
																						"nodeType": "YulIdentifier",
																						"src": "21001:18:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "20995:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20995:25:2"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "21022:6:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20991:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20991:38:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "20964:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20964:66:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20964:66:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21092:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "21098:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21085:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21085:20:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21085:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21123:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21129:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "21135:25:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21166:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21174:2:2",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "from",
																						"nodeType": "YulIdentifier",
																						"src": "21178:4:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "21170:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21170:13:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "21162:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21162:22:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21186:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "21118:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21118:70:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21118:70:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 488,
														"isOffset": false,
														"isSlot": false,
														"src": "20407:18:2",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "20971:18:2",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "21001:18:2",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "21135:25:2",
														"valueSize": 1
													},
													{
														"declaration": 732,
														"isOffset": false,
														"isSlot": false,
														"src": "20634:6:2",
														"valueSize": 1
													},
													{
														"declaration": 732,
														"isOffset": false,
														"isSlot": false,
														"src": "20883:6:2",
														"valueSize": 1
													},
													{
														"declaration": 732,
														"isOffset": false,
														"isSlot": false,
														"src": "21022:6:2",
														"valueSize": 1
													},
													{
														"declaration": 732,
														"isOffset": false,
														"isSlot": false,
														"src": "21098:6:2",
														"valueSize": 1
													},
													{
														"declaration": 730,
														"isOffset": false,
														"isSlot": false,
														"src": "20452:4:2",
														"valueSize": 1
													},
													{
														"declaration": 730,
														"isOffset": false,
														"isSlot": false,
														"src": "21178:4:2",
														"valueSize": 1
													}
												],
												"id": 744,
												"nodeType": "InlineAssembly",
												"src": "20311:887:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 746,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "21227:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21241:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21233:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21233:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21233:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "21245:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 745,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "21207:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21207:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "21207:45:2"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "20023:112:2",
										"text": "@dev Burns `amount` tokens from `from`, reducing the total supply.\n Emits a {Transfer} event."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "20149:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20163:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "20155:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20155:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20177:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "20169:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20169:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20154:30:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20202:0:2"
									},
									"scope": 826,
									"src": "20140:1119:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "21685:1318:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "21716:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "21722:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "21726:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 765,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "21695:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21695:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "21695:38:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21795:1155:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21809:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21826:2:2",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "21830:4:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "21822:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21822:13:2"
															},
															"variables": [
																{
																	"name": "from_",
																	"nodeType": "YulTypedName",
																	"src": "21813:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21915:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from_",
																				"nodeType": "YulIdentifier",
																				"src": "21924:5:2"
																			},
																			{
																				"name": "_BALANCE_SLOT_SEED",
																				"nodeType": "YulIdentifier",
																				"src": "21931:18:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "21921:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21921:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21908:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21908:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21908:43:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21964:44:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21997:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22003:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "21987:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21987:21:2"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "21968:15:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22021:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "22046:15:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "22040:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22040:22:2"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nodeType": "YulTypedName",
																	"src": "22025:11:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22149:119:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22174:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22180:10:2",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22167:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22167:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22167:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22243:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22249:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22236:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22236:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22236:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "22128:6:2"
																	},
																	{
																		"name": "fromBalance",
																		"nodeType": "YulIdentifier",
																		"src": "22136:11:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22125:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22125:23:2"
															},
															"nodeType": "YulIf",
															"src": "22122:146:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "22343:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nodeType": "YulIdentifier",
																				"src": "22364:11:2"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "22377:6:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22360:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22360:24:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "22336:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22336:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22336:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22454:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "22460:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22447:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22447:16:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22447:16:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22476:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22507:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22513:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "22497:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22497:21:2"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "22480:13:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "22722:13:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nodeType": "YulIdentifier",
																						"src": "22747:13:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "22741:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22741:20:2"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "22763:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22737:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22737:33:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "22715:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22715:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22715:56:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22833:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "22839:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22826:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22826:20:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22826:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22864:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22870:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "22876:25:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22907:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from_",
																				"nodeType": "YulIdentifier",
																				"src": "22911:5:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "22903:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22903:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22923:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "22933:4:2",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "22927:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22927:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "22919:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22919:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "22859:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22859:81:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22859:81:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 488,
														"isOffset": false,
														"isSlot": false,
														"src": "21931:18:2",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "22876:25:2",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "22128:6:2",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "22377:6:2",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "22763:6:2",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "22839:6:2",
														"valueSize": 1
													},
													{
														"declaration": 758,
														"isOffset": false,
														"isSlot": false,
														"src": "21830:4:2",
														"valueSize": 1
													},
													{
														"declaration": 760,
														"isOffset": false,
														"isSlot": false,
														"src": "22460:2:2",
														"valueSize": 1
													}
												],
												"id": 771,
												"nodeType": "InlineAssembly",
												"src": "21786:1164:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "22979:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "22985:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "22989:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "22959:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22959:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "22959:37:2"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "21548:54:2",
										"text": "@dev Moves `amount` of tokens from `from` to `to`."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "21616:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21634:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "21626:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21626:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21648:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "21640:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "21652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21625:42:2"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21685:0:2"
									},
									"scope": 826,
									"src": "21607:1396:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "23467:869:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23529:801:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23612:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "23618:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23605:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23605:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23605:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23646:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "23652:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23639:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23639:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23639:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23693:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "23699:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23686:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23686:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23686:19:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23718:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23749:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23755:4:2",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "23739:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23739:21:2"
															},
															"variables": [
																{
																	"name": "allowanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "23722:13:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23773:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "allowanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "23797:13:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "23791:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23791:20:2"
															},
															"variables": [
																{
																	"name": "allowance_",
																	"nodeType": "YulTypedName",
																	"src": "23777:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23924:396:2",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "24049:133:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "24078:4:2",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "24084:10:2",
																								"type": "",
																								"value": "0x13be252b"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "24071:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "24071:24:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "24071:24:2"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "24153:4:2",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "24159:4:2",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "24146:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "24146:18:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "24146:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "amount",
																					"nodeType": "YulIdentifier",
																					"src": "24029:6:2"
																				},
																				{
																					"name": "allowance_",
																					"nodeType": "YulIdentifier",
																					"src": "24037:10:2"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "24026:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24026:22:2"
																		},
																		"nodeType": "YulIf",
																		"src": "24023:159:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "allowanceSlot",
																					"nodeType": "YulIdentifier",
																					"src": "24267:13:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "allowance_",
																							"nodeType": "YulIdentifier",
																							"src": "24286:10:2"
																						},
																						{
																							"name": "amount",
																							"nodeType": "YulIdentifier",
																							"src": "24298:6:2"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "24282:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24282:23:2"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "24260:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24260:46:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24260:46:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "allowance_",
																				"nodeType": "YulIdentifier",
																				"src": "23903:10:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23919:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "23915:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23915:6:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23900:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23900:22:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23893:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23893:30:2"
															},
															"nodeType": "YulIf",
															"src": "23890:430:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "23652:20:2",
														"valueSize": 1
													},
													{
														"declaration": 786,
														"isOffset": false,
														"isSlot": false,
														"src": "24029:6:2",
														"valueSize": 1
													},
													{
														"declaration": 786,
														"isOffset": false,
														"isSlot": false,
														"src": "24298:6:2",
														"valueSize": 1
													},
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "23699:5:2",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "23618:7:2",
														"valueSize": 1
													}
												],
												"id": 789,
												"nodeType": "InlineAssembly",
												"src": "23520:810:2"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "23292:80:2",
										"text": "@dev Updates the allowance of `owner` for `spender` based on spent `amount`."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "23386:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23410:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "23402:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23402:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "23425:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "23417:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23417:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23442:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "23434:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23434:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23401:48:2"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23467:0:2"
									},
									"scope": 826,
									"src": "23377:959:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "24552:497:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "24614:429:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24628:28:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24646:2:2",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "24650:5:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "24642:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24642:14:2"
															},
															"variables": [
																{
																	"name": "owner_",
																	"nodeType": "YulTypedName",
																	"src": "24632:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24740:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "24746:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24733:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24733:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24733:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24774:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "owner_",
																				"nodeType": "YulIdentifier",
																				"src": "24783:6:2"
																			},
																			{
																				"name": "_ALLOWANCE_SLOT_SEED",
																				"nodeType": "YulIdentifier",
																				"src": "24791:20:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "24780:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24780:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24767:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24767:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24767:46:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24843:4:2",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24849:4:2",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "24833:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24833:21:2"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "24856:6:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "24826:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24826:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24826:37:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24925:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "24931:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24918:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24918:20:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24918:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24956:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24962:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "24968:25:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24999:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "owner_",
																				"nodeType": "YulIdentifier",
																				"src": "25003:6:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "24995:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24995:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25016:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25026:4:2",
																						"type": "",
																						"value": "0x2c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "25020:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25020:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "25012:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25012:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "24951:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24951:82:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24951:82:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "24791:20:2",
														"valueSize": 1
													},
													{
														"declaration": 480,
														"isOffset": false,
														"isSlot": false,
														"src": "24968:25:2",
														"valueSize": 1
													},
													{
														"declaration": 798,
														"isOffset": false,
														"isSlot": false,
														"src": "24856:6:2",
														"valueSize": 1
													},
													{
														"declaration": 798,
														"isOffset": false,
														"isSlot": false,
														"src": "24931:6:2",
														"valueSize": 1
													},
													{
														"declaration": 794,
														"isOffset": false,
														"isSlot": false,
														"src": "24650:5:2",
														"valueSize": 1
													},
													{
														"declaration": 796,
														"isOffset": false,
														"isSlot": false,
														"src": "24746:7:2",
														"valueSize": 1
													}
												],
												"id": 801,
												"nodeType": "InlineAssembly",
												"src": "24605:438:2"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "24342:122:2",
										"text": "@dev Sets `amount` as the allowance of `spender` over the tokens of `owner`.\n Emits a {Approval} event."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "24478:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24495:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "24487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24510:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "24502:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24502:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24527:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "24519:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24519:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24486:48:2"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24552:0:2"
									},
									"scope": 826,
									"src": "24469:580:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "25534:2:2",
										"statements": []
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "25338:102:2",
										"text": "@dev Hook that is called before any transfer of tokens.\n This includes minting and burning."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "25454:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25483:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "25475:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25497:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "25489:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25509:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "25501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25474:42:2"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25534:0:2"
									},
									"scope": 826,
									"src": "25445:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "25736:2:2",
										"statements": []
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "25542:101:2",
										"text": "@dev Hook that is called after any transfer of tokens.\n This includes minting and burning."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "25657:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "25677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25699:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "25691:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25691:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25711:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "25703:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25676:42:2"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25736:0:2"
									},
									"scope": 826,
									"src": "25648:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 827,
							"src": "749:24991:2",
							"usedErrors": [
								436,
								439,
								442,
								445,
								448,
								451,
								454
							]
						}
					],
					"src": "32:25709:2"
				},
				"id": 2
			}
		}
	}
}